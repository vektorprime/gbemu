<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1414" onload="init(evt)" viewBox="0 0 1200 1414" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1414" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1397.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1397.00"> </text><svg id="frames" x="10" width="1180" total_samples="74523"><g><title>`0x7FF82D309025 (12 samples, 0.02%)</title><rect x="0.0510%" y="1349" width="0.0161%" height="15" fill="rgb(227,0,7)" fg:x="38" fg:w="12"/><text x="0.3010%" y="1359.50"></text></g><g><title>`0x7FF82D309048 (13 samples, 0.02%)</title><rect x="0.0725%" y="1349" width="0.0174%" height="15" fill="rgb(217,0,24)" fg:x="54" fg:w="13"/><text x="0.3225%" y="1359.50"></text></g><g><title>`0x7FF82D30E0B1 (9 samples, 0.01%)</title><rect x="0.1181%" y="1349" width="0.0121%" height="15" fill="rgb(221,193,54)" fg:x="88" fg:w="9"/><text x="0.3681%" y="1359.50"></text></g><g><title>`0x7FF82D30E0D3 (29 samples, 0.04%)</title><rect x="0.1342%" y="1349" width="0.0389%" height="15" fill="rgb(248,212,6)" fg:x="100" fg:w="29"/><text x="0.3842%" y="1359.50"></text></g><g><title>`0x7FF82D31FF5F (8 samples, 0.01%)</title><rect x="0.2509%" y="1349" width="0.0107%" height="15" fill="rgb(208,68,35)" fg:x="187" fg:w="8"/><text x="0.5009%" y="1359.50"></text></g><g><title>`0x7FF82D3201AA (16 samples, 0.02%)</title><rect x="0.3127%" y="1349" width="0.0215%" height="15" fill="rgb(232,128,0)" fg:x="233" fg:w="16"/><text x="0.5627%" y="1359.50"></text></g><g><title>`0x7FF82D3256D9 (15 samples, 0.02%)</title><rect x="0.3489%" y="1349" width="0.0201%" height="15" fill="rgb(207,160,47)" fg:x="260" fg:w="15"/><text x="0.5989%" y="1359.50"></text></g><g><title>`0x7FF82D3256DD (14 samples, 0.02%)</title><rect x="0.3704%" y="1349" width="0.0188%" height="15" fill="rgb(228,23,34)" fg:x="276" fg:w="14"/><text x="0.6204%" y="1359.50"></text></g><g><title>`0x7FF82D3265E0 (8 samples, 0.01%)</title><rect x="0.4133%" y="1349" width="0.0107%" height="15" fill="rgb(218,30,26)" fg:x="308" fg:w="8"/><text x="0.6633%" y="1359.50"></text></g><g><title>`0x7FF82D34964A (8 samples, 0.01%)</title><rect x="0.4307%" y="1349" width="0.0107%" height="15" fill="rgb(220,122,19)" fg:x="321" fg:w="8"/><text x="0.6807%" y="1359.50"></text></g><g><title>`0x7FF85EBC3414 (8 samples, 0.01%)</title><rect x="0.4307%" y="1333" width="0.0107%" height="15" fill="rgb(250,228,42)" fg:x="321" fg:w="8"/><text x="0.6807%" y="1343.50"></text></g><g><title>`0x7FF82D34BDA2 (21 samples, 0.03%)</title><rect x="0.4428%" y="1349" width="0.0282%" height="15" fill="rgb(240,193,28)" fg:x="330" fg:w="21"/><text x="0.6928%" y="1359.50"></text></g><g><title>`0x7FF85EBC2004 (21 samples, 0.03%)</title><rect x="0.4428%" y="1333" width="0.0282%" height="15" fill="rgb(216,20,37)" fg:x="330" fg:w="21"/><text x="0.6928%" y="1343.50"></text></g><g><title>`0x7FF82D34DB2D (13 samples, 0.02%)</title><rect x="0.4804%" y="1349" width="0.0174%" height="15" fill="rgb(206,188,39)" fg:x="358" fg:w="13"/><text x="0.7304%" y="1359.50"></text></g><g><title>`0x7FF85EBC56D4 (13 samples, 0.02%)</title><rect x="0.4804%" y="1333" width="0.0174%" height="15" fill="rgb(217,207,13)" fg:x="358" fg:w="13"/><text x="0.7304%" y="1343.50"></text></g><g><title>`0x7FF82D35089B (19 samples, 0.03%)</title><rect x="0.5045%" y="1349" width="0.0255%" height="15" fill="rgb(231,73,38)" fg:x="376" fg:w="19"/><text x="0.7545%" y="1359.50"></text></g><g><title>`0x7FF82D3508A5 (12 samples, 0.02%)</title><rect x="0.5300%" y="1349" width="0.0161%" height="15" fill="rgb(225,20,46)" fg:x="395" fg:w="12"/><text x="0.7800%" y="1359.50"></text></g><g><title>`0x7FF82D3508B7 (15 samples, 0.02%)</title><rect x="0.5475%" y="1349" width="0.0201%" height="15" fill="rgb(210,31,41)" fg:x="408" fg:w="15"/><text x="0.7975%" y="1359.50"></text></g><g><title>`0x7FF82D350C62 (1,163 samples, 1.56%)</title><rect x="0.6508%" y="1349" width="1.5606%" height="15" fill="rgb(221,200,47)" fg:x="485" fg:w="1163"/><text x="0.9008%" y="1359.50"></text></g><g><title>`0x7FF85EBC1E04 (1,155 samples, 1.55%)</title><rect x="0.6615%" y="1333" width="1.5499%" height="15" fill="rgb(226,26,5)" fg:x="493" fg:w="1155"/><text x="0.9115%" y="1343.50"></text></g><g><title>`0x7FF82D3533BB (40 samples, 0.05%)</title><rect x="2.2194%" y="1349" width="0.0537%" height="15" fill="rgb(249,33,26)" fg:x="1654" fg:w="40"/><text x="2.4694%" y="1359.50"></text></g><g><title>`0x7FF85EBC1CE4 (40 samples, 0.05%)</title><rect x="2.2194%" y="1333" width="0.0537%" height="15" fill="rgb(235,183,28)" fg:x="1654" fg:w="40"/><text x="2.4694%" y="1343.50"></text></g><g><title>`0x7FF82D355142 (86 samples, 0.12%)</title><rect x="2.2731%" y="1349" width="0.1154%" height="15" fill="rgb(221,5,38)" fg:x="1694" fg:w="86"/><text x="2.5231%" y="1359.50"></text></g><g><title>`0x7FF85EBC25A4 (86 samples, 0.12%)</title><rect x="2.2731%" y="1333" width="0.1154%" height="15" fill="rgb(247,18,42)" fg:x="1694" fg:w="86"/><text x="2.5231%" y="1343.50"></text></g><g><title>`0x7FF85EAD20CB (11 samples, 0.01%)</title><rect x="2.3952%" y="1301" width="0.0148%" height="15" fill="rgb(241,131,45)" fg:x="1785" fg:w="11"/><text x="2.6452%" y="1311.50"></text></g><g><title>`0x7FF85EA9FA80 (10 samples, 0.01%)</title><rect x="2.3966%" y="1285" width="0.0134%" height="15" fill="rgb(249,31,29)" fg:x="1786" fg:w="10"/><text x="2.6466%" y="1295.50"></text></g><g><title>`0x7FF85EAD22D7 (18 samples, 0.02%)</title><rect x="2.4194%" y="1301" width="0.0242%" height="15" fill="rgb(225,111,53)" fg:x="1803" fg:w="18"/><text x="2.6694%" y="1311.50"></text></g><g><title>`0x7FF85EAD2983 (18 samples, 0.02%)</title><rect x="2.4194%" y="1285" width="0.0242%" height="15" fill="rgb(238,160,17)" fg:x="1803" fg:w="18"/><text x="2.6694%" y="1295.50"></text></g><g><title>`0x7FF85EAC379F (38 samples, 0.05%)</title><rect x="2.3952%" y="1317" width="0.0510%" height="15" fill="rgb(214,148,48)" fg:x="1785" fg:w="38"/><text x="2.6452%" y="1327.50"></text></g><g><title>`0x7FF85EADC32A (10 samples, 0.01%)</title><rect x="2.4664%" y="1269" width="0.0134%" height="15" fill="rgb(232,36,49)" fg:x="1838" fg:w="10"/><text x="2.7164%" y="1279.50"></text></g><g><title>`0x7FF85EADC3F1 (9 samples, 0.01%)</title><rect x="2.4798%" y="1269" width="0.0121%" height="15" fill="rgb(209,103,24)" fg:x="1848" fg:w="9"/><text x="2.7298%" y="1279.50"></text></g><g><title>`0x7FF85EAC559D (22 samples, 0.03%)</title><rect x="2.4664%" y="1301" width="0.0295%" height="15" fill="rgb(229,88,8)" fg:x="1838" fg:w="22"/><text x="2.7164%" y="1311.50"></text></g><g><title>`0x7FF85EA9CE47 (22 samples, 0.03%)</title><rect x="2.4664%" y="1285" width="0.0295%" height="15" fill="rgb(213,181,19)" fg:x="1838" fg:w="22"/><text x="2.7164%" y="1295.50"></text></g><g><title>`0x7FF85EA9BC7A (12 samples, 0.02%)</title><rect x="2.4959%" y="1269" width="0.0161%" height="15" fill="rgb(254,191,54)" fg:x="1860" fg:w="12"/><text x="2.7459%" y="1279.50"></text></g><g><title>`0x7FF85EAD193C (11 samples, 0.01%)</title><rect x="2.4972%" y="1253" width="0.0148%" height="15" fill="rgb(241,83,37)" fg:x="1861" fg:w="11"/><text x="2.7472%" y="1263.50"></text></g><g><title>`0x7FF85EAD2983 (11 samples, 0.01%)</title><rect x="2.4972%" y="1237" width="0.0148%" height="15" fill="rgb(233,36,39)" fg:x="1861" fg:w="11"/><text x="2.7472%" y="1247.50"></text></g><g><title>`0x7FF85EAC56AC (17 samples, 0.02%)</title><rect x="2.4959%" y="1301" width="0.0228%" height="15" fill="rgb(226,3,54)" fg:x="1860" fg:w="17"/><text x="2.7459%" y="1311.50"></text></g><g><title>`0x7FF85EA9BCA6 (17 samples, 0.02%)</title><rect x="2.4959%" y="1285" width="0.0228%" height="15" fill="rgb(245,192,40)" fg:x="1860" fg:w="17"/><text x="2.7459%" y="1295.50"></text></g><g><title>`0x7FF85EA95FCE (93 samples, 0.12%)</title><rect x="2.3952%" y="1349" width="0.1248%" height="15" fill="rgb(238,167,29)" fg:x="1785" fg:w="93"/><text x="2.6452%" y="1359.50"></text></g><g><title>`0x7FF85EAC364E (93 samples, 0.12%)</title><rect x="2.3952%" y="1333" width="0.1248%" height="15" fill="rgb(232,182,51)" fg:x="1785" fg:w="93"/><text x="2.6452%" y="1343.50"></text></g><g><title>`0x7FF85EAC3864 (55 samples, 0.07%)</title><rect x="2.4462%" y="1317" width="0.0738%" height="15" fill="rgb(231,60,39)" fg:x="1823" fg:w="55"/><text x="2.6962%" y="1327.50"></text></g><g><title>`0x7FF85BBFD26F (13 samples, 0.02%)</title><rect x="2.5724%" y="1285" width="0.0174%" height="15" fill="rgb(208,69,12)" fg:x="1917" fg:w="13"/><text x="2.8224%" y="1295.50"></text></g><g><title>`0x7FF85EBC1B84 (12 samples, 0.02%)</title><rect x="2.5737%" y="1269" width="0.0161%" height="15" fill="rgb(235,93,37)" fg:x="1918" fg:w="12"/><text x="2.8237%" y="1279.50"></text></g><g><title>`0x7FF847C150CF (16 samples, 0.02%)</title><rect x="2.5724%" y="1301" width="0.0215%" height="15" fill="rgb(213,116,39)" fg:x="1917" fg:w="16"/><text x="2.8224%" y="1311.50"></text></g><g><title>`0x7FF84818EDCA (31 samples, 0.04%)</title><rect x="2.5549%" y="1317" width="0.0416%" height="15" fill="rgb(222,207,29)" fg:x="1904" fg:w="31"/><text x="2.8049%" y="1327.50"></text></g><g><title>`0x7FFFD7FF323B (11 samples, 0.01%)</title><rect x="2.6247%" y="1301" width="0.0148%" height="15" fill="rgb(206,96,30)" fg:x="1956" fg:w="11"/><text x="2.8747%" y="1311.50"></text></g><g><title>`0x7FFFD8272B8F (11 samples, 0.01%)</title><rect x="2.6247%" y="1285" width="0.0148%" height="15" fill="rgb(218,138,4)" fg:x="1956" fg:w="11"/><text x="2.8747%" y="1295.50"></text></g><g><title>`0x7FF85CC87922 (11 samples, 0.01%)</title><rect x="2.6247%" y="1269" width="0.0148%" height="15" fill="rgb(250,191,14)" fg:x="1956" fg:w="11"/><text x="2.8747%" y="1279.50"></text></g><g><title>`0x7FF85CC437B7 (11 samples, 0.01%)</title><rect x="2.6247%" y="1253" width="0.0148%" height="15" fill="rgb(239,60,40)" fg:x="1956" fg:w="11"/><text x="2.8747%" y="1263.50"></text></g><g><title>`0x7FF85CC43C2A (10 samples, 0.01%)</title><rect x="2.6260%" y="1237" width="0.0134%" height="15" fill="rgb(206,27,48)" fg:x="1957" fg:w="10"/><text x="2.8760%" y="1247.50"></text></g><g><title>`0x7FF85C7D2084 (10 samples, 0.01%)</title><rect x="2.6260%" y="1221" width="0.0134%" height="15" fill="rgb(225,35,8)" fg:x="1957" fg:w="10"/><text x="2.8760%" y="1231.50"></text></g><g><title>`0x7FFFD7FF324E (11 samples, 0.01%)</title><rect x="2.6395%" y="1301" width="0.0148%" height="15" fill="rgb(250,213,24)" fg:x="1967" fg:w="11"/><text x="2.8895%" y="1311.50"></text></g><g><title>`0x7FFFD875E462 (10 samples, 0.01%)</title><rect x="2.6797%" y="1301" width="0.0134%" height="15" fill="rgb(247,123,22)" fg:x="1997" fg:w="10"/><text x="2.9297%" y="1311.50"></text></g><g><title>`0x7FFFD87508F1 (10 samples, 0.01%)</title><rect x="2.6797%" y="1285" width="0.0134%" height="15" fill="rgb(231,138,38)" fg:x="1997" fg:w="10"/><text x="2.9297%" y="1295.50"></text></g><g><title>`0x7FFFD82B3D6C (9 samples, 0.01%)</title><rect x="2.6811%" y="1269" width="0.0121%" height="15" fill="rgb(231,145,46)" fg:x="1998" fg:w="9"/><text x="2.9311%" y="1279.50"></text></g><g><title>`0x7FFFD82B2134 (8 samples, 0.01%)</title><rect x="2.6824%" y="1253" width="0.0107%" height="15" fill="rgb(251,118,11)" fg:x="1999" fg:w="8"/><text x="2.9324%" y="1263.50"></text></g><g><title>`0x7FFFD82BE8B8 (8 samples, 0.01%)</title><rect x="2.6824%" y="1237" width="0.0107%" height="15" fill="rgb(217,147,25)" fg:x="1999" fg:w="8"/><text x="2.9324%" y="1247.50"></text></g><g><title>`0x7FFFD82BE43E (8 samples, 0.01%)</title><rect x="2.6824%" y="1221" width="0.0107%" height="15" fill="rgb(247,81,37)" fg:x="1999" fg:w="8"/><text x="2.9324%" y="1231.50"></text></g><g><title>`0x7FF85C7D4EE4 (8 samples, 0.01%)</title><rect x="2.6824%" y="1205" width="0.0107%" height="15" fill="rgb(209,12,38)" fg:x="1999" fg:w="8"/><text x="2.9324%" y="1215.50"></text></g><g><title>`0x7FFFD82B3B68 (12 samples, 0.02%)</title><rect x="2.6945%" y="1269" width="0.0161%" height="15" fill="rgb(227,1,9)" fg:x="2008" fg:w="12"/><text x="2.9445%" y="1279.50"></text></g><g><title>`0x7FFFD7D14843 (11 samples, 0.01%)</title><rect x="2.6958%" y="1253" width="0.0148%" height="15" fill="rgb(248,47,43)" fg:x="2009" fg:w="11"/><text x="2.9458%" y="1263.50"></text></g><g><title>`0x7FFFD875E49A (32 samples, 0.04%)</title><rect x="2.6931%" y="1301" width="0.0429%" height="15" fill="rgb(221,10,30)" fg:x="2007" fg:w="32"/><text x="2.9431%" y="1311.50"></text></g><g><title>`0x7FFFD834C143 (31 samples, 0.04%)</title><rect x="2.6945%" y="1285" width="0.0416%" height="15" fill="rgb(210,229,1)" fg:x="2008" fg:w="31"/><text x="2.9445%" y="1295.50"></text></g><g><title>`0x7FFFD82B3D6C (19 samples, 0.03%)</title><rect x="2.7106%" y="1269" width="0.0255%" height="15" fill="rgb(222,148,37)" fg:x="2020" fg:w="19"/><text x="2.9606%" y="1279.50"></text></g><g><title>`0x7FFFD82B2134 (19 samples, 0.03%)</title><rect x="2.7106%" y="1253" width="0.0255%" height="15" fill="rgb(234,67,33)" fg:x="2020" fg:w="19"/><text x="2.9606%" y="1263.50"></text></g><g><title>`0x7FFFD82BE8B8 (19 samples, 0.03%)</title><rect x="2.7106%" y="1237" width="0.0255%" height="15" fill="rgb(247,98,35)" fg:x="2020" fg:w="19"/><text x="2.9606%" y="1247.50"></text></g><g><title>`0x7FFFD82BE43E (19 samples, 0.03%)</title><rect x="2.7106%" y="1221" width="0.0255%" height="15" fill="rgb(247,138,52)" fg:x="2020" fg:w="19"/><text x="2.9606%" y="1231.50"></text></g><g><title>`0x7FF85C7D4EE4 (19 samples, 0.03%)</title><rect x="2.7106%" y="1205" width="0.0255%" height="15" fill="rgb(213,79,30)" fg:x="2020" fg:w="19"/><text x="2.9606%" y="1215.50"></text></g><g><title>`0x7FFFD8888940 (17 samples, 0.02%)</title><rect x="2.7642%" y="1285" width="0.0228%" height="15" fill="rgb(246,177,23)" fg:x="2060" fg:w="17"/><text x="3.0142%" y="1295.50"></text></g><g><title>`0x7FF85BBFD26F (31 samples, 0.04%)</title><rect x="2.8072%" y="1253" width="0.0416%" height="15" fill="rgb(230,62,27)" fg:x="2092" fg:w="31"/><text x="3.0572%" y="1263.50"></text></g><g><title>`0x7FF85EBC1B84 (26 samples, 0.03%)</title><rect x="2.8139%" y="1237" width="0.0349%" height="15" fill="rgb(216,154,8)" fg:x="2097" fg:w="26"/><text x="3.0639%" y="1247.50"></text></g><g><title>`0x7FFFD827302A (38 samples, 0.05%)</title><rect x="2.8058%" y="1269" width="0.0510%" height="15" fill="rgb(244,35,45)" fg:x="2091" fg:w="38"/><text x="3.0558%" y="1279.50"></text></g><g><title>`0x7FFFD8888BBE (41 samples, 0.06%)</title><rect x="2.8058%" y="1285" width="0.0550%" height="15" fill="rgb(251,115,12)" fg:x="2091" fg:w="41"/><text x="3.0558%" y="1295.50"></text></g><g><title>`0x7FFFD8274E98 (181 samples, 0.24%)</title><rect x="2.6247%" y="1317" width="0.2429%" height="15" fill="rgb(240,54,50)" fg:x="1956" fg:w="181"/><text x="2.8747%" y="1327.50"></text></g><g><title>`0x7FFFD887FD48 (86 samples, 0.12%)</title><rect x="2.7522%" y="1301" width="0.1154%" height="15" fill="rgb(233,84,52)" fg:x="2051" fg:w="86"/><text x="3.0022%" y="1311.50"></text></g><g><title>`0x7FFFD8274EF4 (8 samples, 0.01%)</title><rect x="2.8676%" y="1317" width="0.0107%" height="15" fill="rgb(207,117,47)" fg:x="2137" fg:w="8"/><text x="3.1176%" y="1327.50"></text></g><g><title>`0x7FF85BBFD26F (8 samples, 0.01%)</title><rect x="2.8676%" y="1301" width="0.0107%" height="15" fill="rgb(249,43,39)" fg:x="2137" fg:w="8"/><text x="3.1176%" y="1311.50"></text></g><g><title>`0x7FFFD8274F70 (11 samples, 0.01%)</title><rect x="2.8850%" y="1317" width="0.0148%" height="15" fill="rgb(209,38,44)" fg:x="2150" fg:w="11"/><text x="3.1350%" y="1327.50"></text></g><g><title>`0x7FF85BC6753D (10 samples, 0.01%)</title><rect x="2.8864%" y="1301" width="0.0134%" height="15" fill="rgb(236,212,23)" fg:x="2151" fg:w="10"/><text x="3.1364%" y="1311.50"></text></g><g><title>`0x7FF85EBC1CC4 (9 samples, 0.01%)</title><rect x="2.8877%" y="1285" width="0.0121%" height="15" fill="rgb(242,79,21)" fg:x="2152" fg:w="9"/><text x="3.1377%" y="1295.50"></text></g><g><title>`0x7FF85BBFD26F (9 samples, 0.01%)</title><rect x="2.8998%" y="1301" width="0.0121%" height="15" fill="rgb(211,96,35)" fg:x="2161" fg:w="9"/><text x="3.1498%" y="1311.50"></text></g><g><title>`0x7FF85EBC1B84 (9 samples, 0.01%)</title><rect x="2.8998%" y="1285" width="0.0121%" height="15" fill="rgb(253,215,40)" fg:x="2161" fg:w="9"/><text x="3.1498%" y="1295.50"></text></g><g><title>`0x7FFFD8274F82 (11 samples, 0.01%)</title><rect x="2.8998%" y="1317" width="0.0148%" height="15" fill="rgb(211,81,21)" fg:x="2161" fg:w="11"/><text x="3.1498%" y="1327.50"></text></g><g><title>gbemu.exe`core::ptr::drop_in_place(alloc::vec::Vec (9 samples, 0.01%)</title><rect x="2.9306%" y="885" width="0.0121%" height="15" fill="rgb(208,190,38)" fg:x="2184" fg:w="9"/><text x="3.1806%" y="895.50"></text></g><g><title>gbemu.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (9 samples, 0.01%)</title><rect x="2.9306%" y="869" width="0.0121%" height="15" fill="rgb(235,213,38)" fg:x="2184" fg:w="9"/><text x="3.1806%" y="879.50"></text></g><g><title>gbemu.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (9 samples, 0.01%)</title><rect x="2.9306%" y="853" width="0.0121%" height="15" fill="rgb(237,122,38)" fg:x="2184" fg:w="9"/><text x="3.1806%" y="863.50"></text></g><g><title>gbemu.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (9 samples, 0.01%)</title><rect x="2.9306%" y="837" width="0.0121%" height="15" fill="rgb(244,218,35)" fg:x="2184" fg:w="9"/><text x="3.1806%" y="847.50"></text></g><g><title>gbemu.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (9 samples, 0.01%)</title><rect x="2.9306%" y="821" width="0.0121%" height="15" fill="rgb(240,68,47)" fg:x="2184" fg:w="9"/><text x="3.1806%" y="831.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::runner::EventLoopRunner&lt;tuple$&lt;&gt; &gt;::move_state_to&lt;tuple$&lt;&gt; &gt; (10 samples, 0.01%)</title><rect x="2.9306%" y="1077" width="0.0134%" height="15" fill="rgb(210,16,53)" fg:x="2184" fg:w="10"/><text x="3.1806%" y="1087.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::runner::EventLoopRunner&lt;tuple$&lt;&gt; &gt;::call_event_handler(enum2$&lt;winit::event::Event&lt;tuple$ (10 samples, 0.01%)</title><rect x="2.9306%" y="1061" width="0.0134%" height="15" fill="rgb(235,124,12)" fg:x="2184" fg:w="10"/><text x="3.1806%" y="1071.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::runner::EventLoopRunner&lt;tuple$&lt;&gt; &gt;::catch_unwind&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,winit::platform_impl::platform::event_loop::runner::impl$3::call_event_handler::closure_env$0&lt;tuple$&lt;&gt; &gt; &gt;(winit::platform_impl::platform::event_loop::runner::impl$3::call_event_handler::closure_env$0&lt;tuple$ (10 samples, 0.01%)</title><rect x="2.9306%" y="1045" width="0.0134%" height="15" fill="rgb(224,169,11)" fg:x="2184" fg:w="10"/><text x="3.1806%" y="1055.50"></text></g><g><title>gbemu.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::platform::event_loop::runner::impl$3::call_event_handler::closure_env$0&lt;tuple$ (10 samples, 0.01%)</title><rect x="2.9306%" y="1029" width="0.0134%" height="15" fill="rgb(250,166,2)" fg:x="2184" fg:w="10"/><text x="3.1806%" y="1039.50"></text></g><g><title>gbemu.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::platform::event_loop::runner::impl$3::call_event_handler::closure_env$0&lt;tuple$ (10 samples, 0.01%)</title><rect x="2.9306%" y="1013" width="0.0134%" height="15" fill="rgb(242,216,29)" fg:x="2184" fg:w="10"/><text x="3.1806%" y="1023.50"></text></g><g><title>gbemu.exe`std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="2.9306%" y="997" width="0.0134%" height="15" fill="rgb(230,116,27)" fg:x="2184" fg:w="10"/><text x="3.1806%" y="1007.50"></text></g><g><title>gbemu.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::platform::event_loop::runner::impl$3::call_event_handler::closure_env$0&lt;tuple$ (10 samples, 0.01%)</title><rect x="2.9306%" y="981" width="0.0134%" height="15" fill="rgb(228,99,48)" fg:x="2184" fg:w="10"/><text x="3.1806%" y="991.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::runner::impl$3::call_event_handler::closure$0(winit::platform_impl::platform::event_loop::runner::impl$3::call_event_handler::closure_env$0&lt;tuple$ (10 samples, 0.01%)</title><rect x="2.9306%" y="965" width="0.0134%" height="15" fill="rgb(253,11,6)" fg:x="2184" fg:w="10"/><text x="3.1806%" y="975.50"></text></g><g><title>gbemu.exe`core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;winit::event::Event&lt;tuple$&lt;&gt; &gt; &gt; &gt;,assoc$&lt;Output,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;::replace(enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;winit::event::Event&lt;tuple$&lt;&gt; &gt; &gt; &gt;,assoc$&lt;Output,tuple$ (10 samples, 0.01%)</title><rect x="2.9306%" y="949" width="0.0134%" height="15" fill="rgb(247,143,39)" fg:x="2184" fg:w="10"/><text x="3.1806%" y="959.50"></text></g><g><title>gbemu.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;winit::event::Event&lt;tuple$&lt;&gt; &gt; &gt; &gt;,assoc$&lt;Output,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;winit::event::Event&lt;tuple$&lt;&gt; &gt; &gt; &gt;,assoc$&lt;Output,tuple$ (10 samples, 0.01%)</title><rect x="2.9306%" y="933" width="0.0134%" height="15" fill="rgb(236,97,10)" fg:x="2184" fg:w="10"/><text x="3.1806%" y="943.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::impl$3::run_on_demand::closure$0&lt;tuple$&lt;&gt;,gbemu::main::closure_env$1&gt;(winit::platform_impl::platform::event_loop::impl$3::run_on_demand::closure_env$0&lt;tuple$&lt;&gt;,gbemu::main::closure_env$1&gt;*, enum2$&lt;winit::event::Event&lt;tuple$ (10 samples, 0.01%)</title><rect x="2.9306%" y="917" width="0.0134%" height="15" fill="rgb(233,208,19)" fg:x="2184" fg:w="10"/><text x="3.1806%" y="927.50"></text></g><g><title>gbemu.exe`gbemu::main::closure$1(gbemu::main::closure_env$1*, enum2$&lt;winit::event::Event&lt;tuple$&lt;&gt; &gt; &gt;, winit::event_loop::EventLoopWindowTarget&lt;tuple$ (10 samples, 0.01%)</title><rect x="2.9306%" y="901" width="0.0134%" height="15" fill="rgb(216,164,2)" fg:x="2184" fg:w="10"/><text x="3.1806%" y="911.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;winit::error::EventLoopError&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;winit::error::EventLoopError&gt; &gt; &gt;, ref$ (19 samples, 0.03%)</title><rect x="2.9226%" y="1141" width="0.0255%" height="15" fill="rgb(220,129,5)" fg:x="2178" fg:w="19"/><text x="3.1726%" y="1151.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::EventLoop&lt;tuple$&lt;&gt; &gt;::run&lt;tuple$&lt;&gt;,gbemu::main::closure_env$1&gt;(winit::platform_impl::platform::event_loop::EventLoop&lt;tuple$ (19 samples, 0.03%)</title><rect x="2.9226%" y="1125" width="0.0255%" height="15" fill="rgb(242,17,10)" fg:x="2178" fg:w="19"/><text x="3.1726%" y="1135.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::EventLoop&lt;tuple$&lt;&gt; &gt;::run_on_demand (19 samples, 0.03%)</title><rect x="2.9226%" y="1109" width="0.0255%" height="15" fill="rgb(242,107,0)" fg:x="2178" fg:w="19"/><text x="3.1726%" y="1119.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::EventLoop&lt;tuple$&lt;&gt; &gt;::wait_and_dispatch_message(enum2$&lt;core::option::Option (14 samples, 0.02%)</title><rect x="2.9293%" y="1093" width="0.0188%" height="15" fill="rgb(251,28,31)" fg:x="2183" fg:w="14"/><text x="3.1793%" y="1103.50"></text></g><g><title>`0x7FFFD8623813 (16 samples, 0.02%)</title><rect x="2.9602%" y="693" width="0.0215%" height="15" fill="rgb(233,223,10)" fg:x="2206" fg:w="16"/><text x="3.2102%" y="703.50"></text></g><g><title>`0x7FFFD888F198 (11 samples, 0.01%)</title><rect x="2.9669%" y="677" width="0.0148%" height="15" fill="rgb(215,21,27)" fg:x="2211" fg:w="11"/><text x="3.2169%" y="687.50"></text></g><g><title>`0x7FF85BBC28E6 (11 samples, 0.01%)</title><rect x="2.9669%" y="661" width="0.0148%" height="15" fill="rgb(232,23,21)" fg:x="2211" fg:w="11"/><text x="3.2169%" y="671.50"></text></g><g><title>`0x7FF85EAB5D80 (11 samples, 0.01%)</title><rect x="2.9669%" y="645" width="0.0148%" height="15" fill="rgb(244,5,23)" fg:x="2211" fg:w="11"/><text x="3.2169%" y="655.50"></text></g><g><title>`0x7FF85EA684E0 (11 samples, 0.01%)</title><rect x="2.9669%" y="629" width="0.0148%" height="15" fill="rgb(226,81,46)" fg:x="2211" fg:w="11"/><text x="3.2169%" y="639.50"></text></g><g><title>`0x7FF85EA688D4 (10 samples, 0.01%)</title><rect x="2.9682%" y="613" width="0.0134%" height="15" fill="rgb(247,70,30)" fg:x="2212" fg:w="10"/><text x="3.2182%" y="623.50"></text></g><g><title>`0x7FF85EA9AE03 (10 samples, 0.01%)</title><rect x="2.9682%" y="597" width="0.0134%" height="15" fill="rgb(212,68,19)" fg:x="2212" fg:w="10"/><text x="3.2182%" y="607.50"></text></g><g><title>`0x7FF85EA9BC7A (10 samples, 0.01%)</title><rect x="2.9682%" y="581" width="0.0134%" height="15" fill="rgb(240,187,13)" fg:x="2212" fg:w="10"/><text x="3.2182%" y="591.50"></text></g><g><title>`0x7FF85EAD193C (10 samples, 0.01%)</title><rect x="2.9682%" y="565" width="0.0134%" height="15" fill="rgb(223,113,26)" fg:x="2212" fg:w="10"/><text x="3.2182%" y="575.50"></text></g><g><title>`0x7FF85EAD2983 (10 samples, 0.01%)</title><rect x="2.9682%" y="549" width="0.0134%" height="15" fill="rgb(206,192,2)" fg:x="2212" fg:w="10"/><text x="3.2182%" y="559.50"></text></g><g><title>`0x7FFFABBCAEEF (9 samples, 0.01%)</title><rect x="2.9696%" y="533" width="0.0121%" height="15" fill="rgb(241,108,4)" fg:x="2213" fg:w="9"/><text x="3.2196%" y="543.50"></text></g><g><title>`0x7FFFAD6A78F2 (9 samples, 0.01%)</title><rect x="2.9696%" y="517" width="0.0121%" height="15" fill="rgb(247,173,49)" fg:x="2213" fg:w="9"/><text x="3.2196%" y="527.50"></text></g><g><title>`0x7FFFAD6BF4C1 (9 samples, 0.01%)</title><rect x="2.9696%" y="501" width="0.0121%" height="15" fill="rgb(224,114,35)" fg:x="2213" fg:w="9"/><text x="3.2196%" y="511.50"></text></g><g><title>`0x7FFFD866B0D6 (18 samples, 0.02%)</title><rect x="2.9602%" y="709" width="0.0242%" height="15" fill="rgb(245,159,27)" fg:x="2206" fg:w="18"/><text x="3.2102%" y="719.50"></text></g><g><title>`0x7FFFABDE2B42 (15 samples, 0.02%)</title><rect x="2.9883%" y="677" width="0.0201%" height="15" fill="rgb(245,172,44)" fg:x="2227" fg:w="15"/><text x="3.2383%" y="687.50"></text></g><g><title>`0x7FFFD866B179 (19 samples, 0.03%)</title><rect x="2.9843%" y="709" width="0.0255%" height="15" fill="rgb(236,23,11)" fg:x="2224" fg:w="19"/><text x="3.2343%" y="719.50"></text></g><g><title>`0x7FFFABDE5D58 (16 samples, 0.02%)</title><rect x="2.9883%" y="693" width="0.0215%" height="15" fill="rgb(205,117,38)" fg:x="2227" fg:w="16"/><text x="3.2383%" y="703.50"></text></g><g><title>`0x7FFFD871D127 (39 samples, 0.05%)</title><rect x="2.9602%" y="757" width="0.0523%" height="15" fill="rgb(237,72,25)" fg:x="2206" fg:w="39"/><text x="3.2102%" y="767.50"></text></g><g><title>`0x7FFFD8666A5B (39 samples, 0.05%)</title><rect x="2.9602%" y="741" width="0.0523%" height="15" fill="rgb(244,70,9)" fg:x="2206" fg:w="39"/><text x="3.2102%" y="751.50"></text></g><g><title>`0x7FFFD86668C0 (39 samples, 0.05%)</title><rect x="2.9602%" y="725" width="0.0523%" height="15" fill="rgb(217,125,39)" fg:x="2206" fg:w="39"/><text x="3.2102%" y="735.50"></text></g><g><title>`0x7FFFD871EA4B (40 samples, 0.05%)</title><rect x="2.9602%" y="773" width="0.0537%" height="15" fill="rgb(235,36,10)" fg:x="2206" fg:w="40"/><text x="3.2102%" y="783.50"></text></g><g><title>`0x7FFFD8607D45 (12 samples, 0.02%)</title><rect x="3.0192%" y="741" width="0.0161%" height="15" fill="rgb(251,123,47)" fg:x="2250" fg:w="12"/><text x="3.2692%" y="751.50"></text></g><g><title>`0x7FFFD8605FF6 (11 samples, 0.01%)</title><rect x="3.0205%" y="725" width="0.0148%" height="15" fill="rgb(221,13,13)" fg:x="2251" fg:w="11"/><text x="3.2705%" y="735.50"></text></g><g><title>`0x7FFFD8605CD1 (11 samples, 0.01%)</title><rect x="3.0205%" y="709" width="0.0148%" height="15" fill="rgb(238,131,9)" fg:x="2251" fg:w="11"/><text x="3.2705%" y="719.50"></text></g><g><title>`0x7FFFD871EC24 (20 samples, 0.03%)</title><rect x="3.0192%" y="773" width="0.0268%" height="15" fill="rgb(211,50,8)" fg:x="2250" fg:w="20"/><text x="3.2692%" y="783.50"></text></g><g><title>`0x7FFFD8751207 (20 samples, 0.03%)</title><rect x="3.0192%" y="757" width="0.0268%" height="15" fill="rgb(245,182,24)" fg:x="2250" fg:w="20"/><text x="3.2692%" y="767.50"></text></g><g><title>`0x7FFFD8607E14 (8 samples, 0.01%)</title><rect x="3.0353%" y="741" width="0.0107%" height="15" fill="rgb(242,14,37)" fg:x="2262" fg:w="8"/><text x="3.2853%" y="751.50"></text></g><g><title>`0x7FFFD8324436 (10 samples, 0.01%)</title><rect x="3.0487%" y="725" width="0.0134%" height="15" fill="rgb(246,228,12)" fg:x="2272" fg:w="10"/><text x="3.2987%" y="735.50"></text></g><g><title>`0x7FFFD832866B (8 samples, 0.01%)</title><rect x="3.0514%" y="709" width="0.0107%" height="15" fill="rgb(213,55,15)" fg:x="2274" fg:w="8"/><text x="3.3014%" y="719.50"></text></g><g><title>`0x7FFFD8305467 (22 samples, 0.03%)</title><rect x="3.0474%" y="741" width="0.0295%" height="15" fill="rgb(209,9,3)" fg:x="2271" fg:w="22"/><text x="3.2974%" y="751.50"></text></g><g><title>`0x7FFFD871EC32 (24 samples, 0.03%)</title><rect x="3.0460%" y="773" width="0.0322%" height="15" fill="rgb(230,59,30)" fg:x="2270" fg:w="24"/><text x="3.2960%" y="783.50"></text></g><g><title>`0x7FFFD8751917 (24 samples, 0.03%)</title><rect x="3.0460%" y="757" width="0.0322%" height="15" fill="rgb(209,121,21)" fg:x="2270" fg:w="24"/><text x="3.2960%" y="767.50"></text></g><g><title>`0x7FFFD8305467 (8 samples, 0.01%)</title><rect x="3.0836%" y="709" width="0.0107%" height="15" fill="rgb(220,109,13)" fg:x="2298" fg:w="8"/><text x="3.3336%" y="719.50"></text></g><g><title>`0x7FFFD871EC97 (14 samples, 0.02%)</title><rect x="3.0782%" y="773" width="0.0188%" height="15" fill="rgb(232,18,1)" fg:x="2294" fg:w="14"/><text x="3.3282%" y="783.50"></text></g><g><title>`0x7FFFD875CE39 (13 samples, 0.02%)</title><rect x="3.0796%" y="757" width="0.0174%" height="15" fill="rgb(215,41,42)" fg:x="2295" fg:w="13"/><text x="3.3296%" y="767.50"></text></g><g><title>`0x7FFFD875C911 (13 samples, 0.02%)</title><rect x="3.0796%" y="741" width="0.0174%" height="15" fill="rgb(224,123,36)" fg:x="2295" fg:w="13"/><text x="3.3296%" y="751.50"></text></g><g><title>`0x7FFFD877331F (11 samples, 0.01%)</title><rect x="3.0823%" y="725" width="0.0148%" height="15" fill="rgb(240,125,3)" fg:x="2297" fg:w="11"/><text x="3.3323%" y="735.50"></text></g><g><title>`0x7FFFD8324436 (9 samples, 0.01%)</title><rect x="3.1037%" y="677" width="0.0121%" height="15" fill="rgb(205,98,50)" fg:x="2313" fg:w="9"/><text x="3.3537%" y="687.50"></text></g><g><title>`0x7FFFD8305467 (20 samples, 0.03%)</title><rect x="3.1037%" y="693" width="0.0268%" height="15" fill="rgb(205,185,37)" fg:x="2313" fg:w="20"/><text x="3.3537%" y="703.50"></text></g><g><title>`0x7FFFD87B8ADC (22 samples, 0.03%)</title><rect x="3.1024%" y="709" width="0.0295%" height="15" fill="rgb(238,207,15)" fg:x="2312" fg:w="22"/><text x="3.3524%" y="719.50"></text></g><g><title>`0x7FFFD871EE33 (24 samples, 0.03%)</title><rect x="3.1011%" y="773" width="0.0322%" height="15" fill="rgb(213,199,42)" fg:x="2311" fg:w="24"/><text x="3.3511%" y="783.50"></text></g><g><title>`0x7FFFD8720781 (24 samples, 0.03%)</title><rect x="3.1011%" y="757" width="0.0322%" height="15" fill="rgb(235,201,11)" fg:x="2311" fg:w="24"/><text x="3.3511%" y="767.50"></text></g><g><title>`0x7FFFD872E565 (24 samples, 0.03%)</title><rect x="3.1011%" y="741" width="0.0322%" height="15" fill="rgb(207,46,11)" fg:x="2311" fg:w="24"/><text x="3.3511%" y="751.50"></text></g><g><title>`0x7FFFD872EAD6 (24 samples, 0.03%)</title><rect x="3.1011%" y="725" width="0.0322%" height="15" fill="rgb(241,35,35)" fg:x="2311" fg:w="24"/><text x="3.3511%" y="735.50"></text></g><g><title>`0x7FF813C2F74C (134 samples, 0.18%)</title><rect x="2.9588%" y="869" width="0.1798%" height="15" fill="rgb(243,32,47)" fg:x="2205" fg:w="134"/><text x="3.2088%" y="879.50"></text></g><g><title>`0x7FFFD86043A1 (134 samples, 0.18%)</title><rect x="2.9588%" y="853" width="0.1798%" height="15" fill="rgb(247,202,23)" fg:x="2205" fg:w="134"/><text x="3.2088%" y="863.50"></text></g><g><title>`0x7FFFD860A6FA (134 samples, 0.18%)</title><rect x="2.9588%" y="837" width="0.1798%" height="15" fill="rgb(219,102,11)" fg:x="2205" fg:w="134"/><text x="3.2088%" y="847.50"></text></g><g><title>`0x7FF82F43CFE6 (134 samples, 0.18%)</title><rect x="2.9588%" y="821" width="0.1798%" height="15" fill="rgb(243,110,44)" fg:x="2205" fg:w="134"/><text x="3.2088%" y="831.50"></text></g><g><title>`0x7FF813C476A4 (134 samples, 0.18%)</title><rect x="2.9588%" y="805" width="0.1798%" height="15" fill="rgb(222,74,54)" fg:x="2205" fg:w="134"/><text x="3.2088%" y="815.50"></text></g><g><title>`0x7FFFD871D727 (133 samples, 0.18%)</title><rect x="2.9602%" y="789" width="0.1785%" height="15" fill="rgb(216,99,12)" fg:x="2206" fg:w="133"/><text x="3.2102%" y="799.50"></text></g><g><title>`0x7FF813C3959A (135 samples, 0.18%)</title><rect x="2.9588%" y="885" width="0.1812%" height="15" fill="rgb(226,22,26)" fg:x="2205" fg:w="135"/><text x="3.2088%" y="895.50"></text></g><g><title>gbemu.exe`ash::instance::Instance::create_device(ash::vk::definitions::PhysicalDevice, ash::vk::definitions::DeviceCreateInfo*, enum2$&lt;core::option::Option&lt;ref$ (138 samples, 0.19%)</title><rect x="2.9561%" y="949" width="0.1852%" height="15" fill="rgb(217,163,10)" fg:x="2203" fg:w="138"/><text x="3.2061%" y="959.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result (138 samples, 0.19%)</title><rect x="2.9561%" y="933" width="0.1852%" height="15" fill="rgb(213,25,53)" fg:x="2203" fg:w="138"/><text x="3.2061%" y="943.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result_with_success(ash::vk::enums::Result, tuple$ (138 samples, 0.19%)</title><rect x="2.9561%" y="917" width="0.1852%" height="15" fill="rgb(252,105,26)" fg:x="2203" fg:w="138"/><text x="3.2061%" y="927.50"></text></g><g><title>`0x7FF813C51625 (138 samples, 0.19%)</title><rect x="2.9561%" y="901" width="0.1852%" height="15" fill="rgb(220,39,43)" fg:x="2203" fg:w="138"/><text x="3.2061%" y="911.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::result::Result&lt;wgpu_hal::OpenDevice&lt;wgpu_hal::vulkan::Api&gt;,wgpu_hal::DeviceError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;wgpu_hal::OpenDevice&lt;wgpu_hal::vulkan::Api&gt;,wgpu_hal::DeviceError&gt; &gt;, wgpu_core::instance::impl$3::create_device_and_queue::closure_env$0 (139 samples, 0.19%)</title><rect x="2.9561%" y="981" width="0.1865%" height="15" fill="rgb(229,68,48)" fg:x="2203" fg:w="139"/><text x="3.2061%" y="991.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::adapter::impl$9::open (139 samples, 0.19%)</title><rect x="2.9561%" y="965" width="0.1865%" height="15" fill="rgb(252,8,32)" fg:x="2203" fg:w="139"/><text x="3.2061%" y="975.50"></text></g><g><title>gbemu.exe`wgpu::Adapter::request_device(wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$ (142 samples, 0.19%)</title><rect x="2.9561%" y="1061" width="0.1905%" height="15" fill="rgb(223,20,43)" fg:x="2203" fg:w="142"/><text x="3.2061%" y="1071.50"></text></g><g><title>gbemu.exe`wgpu::context::impl$5::adapter_request_device&lt;wgpu::backend::wgpu_core::ContextWgpuCore&gt;(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu::context::ObjectId*, ref$&lt;dyn$&lt;core::any::Any,core::marker::Send,core::marker::Sync&gt; &gt;, wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$ (142 samples, 0.19%)</title><rect x="2.9561%" y="1045" width="0.1905%" height="15" fill="rgb(229,81,49)" fg:x="2203" fg:w="142"/><text x="3.2061%" y="1055.50"></text></g><g><title>gbemu.exe`wgpu::backend::wgpu_core::impl$7::adapter_request_device(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu_core::id::Id&lt;wgpu_core::instance::Adapter&lt;wgpu_hal::empty::Api&gt; &gt;*, tuple$&lt;&gt;*, wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$ (142 samples, 0.19%)</title><rect x="2.9561%" y="1029" width="0.1905%" height="15" fill="rgb(236,28,36)" fg:x="2203" fg:w="142"/><text x="3.2061%" y="1039.50"></text></g><g><title>gbemu.exe`wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;::adapter_request_device&lt;wgpu_core::identity::IdentityManagerFactory,wgpu_hal::vulkan::Api&gt;(wgpu_core::id::Id&lt;wgpu_core::instance::Adapter&lt;wgpu_hal::empty::Api&gt; &gt;, wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$&lt;std::path::Path&gt; &gt; &gt;, tuple$&lt;&gt;, tuple$ (142 samples, 0.19%)</title><rect x="2.9561%" y="1013" width="0.1905%" height="15" fill="rgb(249,185,26)" fg:x="2203" fg:w="142"/><text x="3.2061%" y="1023.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::Adapter&lt;wgpu_hal::vulkan::Api&gt;::create_device_and_queue&lt;wgpu_hal::vulkan::Api&gt;(alloc::sync::Arc&lt;wgpu_core::instance::Adapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;*, wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt; &gt; &gt; &gt;*, wgpu_types::InstanceFlags, enum2$&lt;core::option::Option&lt;ref$ (142 samples, 0.19%)</title><rect x="2.9561%" y="997" width="0.1905%" height="15" fill="rgb(249,174,33)" fg:x="2203" fg:w="142"/><text x="3.2061%" y="1007.50"></text></g><g><title>`0x7FFFDC2CD128 (22 samples, 0.03%)</title><rect x="3.1547%" y="645" width="0.0295%" height="15" fill="rgb(233,201,37)" fg:x="2351" fg:w="22"/><text x="3.4047%" y="655.50"></text></g><g><title>`0x7FFFDC2CDF69 (22 samples, 0.03%)</title><rect x="3.1547%" y="629" width="0.0295%" height="15" fill="rgb(221,78,26)" fg:x="2351" fg:w="22"/><text x="3.4047%" y="639.50"></text></g><g><title>`0x7FF847A7149B (20 samples, 0.03%)</title><rect x="3.1574%" y="613" width="0.0268%" height="15" fill="rgb(250,127,30)" fg:x="2353" fg:w="20"/><text x="3.4074%" y="623.50"></text></g><g><title>`0x7FF8478961A4 (20 samples, 0.03%)</title><rect x="3.1574%" y="597" width="0.0268%" height="15" fill="rgb(230,49,44)" fg:x="2353" fg:w="20"/><text x="3.4074%" y="607.50"></text></g><g><title>`0x7FF82E8C295F (29 samples, 0.04%)</title><rect x="3.1467%" y="693" width="0.0389%" height="15" fill="rgb(229,67,23)" fg:x="2345" fg:w="29"/><text x="3.3967%" y="703.50"></text></g><g><title>`0x7FF82E8C29E9 (29 samples, 0.04%)</title><rect x="3.1467%" y="677" width="0.0389%" height="15" fill="rgb(249,83,47)" fg:x="2345" fg:w="29"/><text x="3.3967%" y="687.50"></text></g><g><title>`0x7FFFDC30A6A2 (29 samples, 0.04%)</title><rect x="3.1467%" y="661" width="0.0389%" height="15" fill="rgb(215,43,3)" fg:x="2345" fg:w="29"/><text x="3.3967%" y="671.50"></text></g><g><title>`0x7FFFDC2F7BD7 (31 samples, 0.04%)</title><rect x="3.1467%" y="741" width="0.0416%" height="15" fill="rgb(238,154,13)" fg:x="2345" fg:w="31"/><text x="3.3967%" y="751.50"></text></g><g><title>`0x7FF82E8C4FAA (31 samples, 0.04%)</title><rect x="3.1467%" y="725" width="0.0416%" height="15" fill="rgb(219,56,2)" fg:x="2345" fg:w="31"/><text x="3.3967%" y="735.50"></text></g><g><title>`0x7FF82E8C2914 (31 samples, 0.04%)</title><rect x="3.1467%" y="709" width="0.0416%" height="15" fill="rgb(233,0,4)" fg:x="2345" fg:w="31"/><text x="3.3967%" y="719.50"></text></g><g><title>gbemu.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter (32 samples, 0.04%)</title><rect x="3.1467%" y="981" width="0.0429%" height="15" fill="rgb(235,30,7)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="991.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global&gt;::as_slice (32 samples, 0.04%)</title><rect x="3.1467%" y="965" width="0.0429%" height="15" fill="rgb(250,79,13)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="975.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global&gt;::as_ptr (32 samples, 0.04%)</title><rect x="3.1467%" y="949" width="0.0429%" height="15" fill="rgb(211,146,34)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="959.50"></text></g><g><title>gbemu.exe`alloc::raw_vec::RawVec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global&gt;::ptr (32 samples, 0.04%)</title><rect x="3.1467%" y="933" width="0.0429%" height="15" fill="rgb(228,22,38)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="943.50"></text></g><g><title>gbemu.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (32 samples, 0.04%)</title><rect x="3.1467%" y="917" width="0.0429%" height="15" fill="rgb(235,168,5)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="927.50"></text></g><g><title>gbemu.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (32 samples, 0.04%)</title><rect x="3.1467%" y="901" width="0.0429%" height="15" fill="rgb(221,155,16)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="911.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global&gt;::retain&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global,wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::dx12::Api,tuple$&lt;&gt; &gt; &gt;(wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::dx12::Api,tuple$ (32 samples, 0.04%)</title><rect x="3.1467%" y="885" width="0.0429%" height="15" fill="rgb(215,215,53)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="895.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global,wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::dx12::Api,tuple$ (32 samples, 0.04%)</title><rect x="3.1467%" y="869" width="0.0429%" height="15" fill="rgb(223,4,10)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="879.50"></text></g><g><title>gbemu.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global,wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::dx12::Api,tuple$&lt;&gt; &gt; &gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop&lt;wgpu_hal::ExposedAdapter (32 samples, 0.04%)</title><rect x="3.1467%" y="853" width="0.0429%" height="15" fill="rgb(234,103,6)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="863.50"></text></g><g><title>gbemu.exe`core::ptr::drop_in_place&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt; &gt;(wgpu_hal::ExposedAdapter (32 samples, 0.04%)</title><rect x="3.1467%" y="837" width="0.0429%" height="15" fill="rgb(227,97,0)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="847.50"></text></g><g><title>gbemu.exe`core::ptr::drop_in_place (32 samples, 0.04%)</title><rect x="3.1467%" y="821" width="0.0429%" height="15" fill="rgb(234,150,53)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="831.50"></text></g><g><title>gbemu.exe`core::ptr::drop_in_place(alloc::sync::Arc (32 samples, 0.04%)</title><rect x="3.1467%" y="805" width="0.0429%" height="15" fill="rgb(228,201,54)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="815.50"></text></g><g><title>gbemu.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (32 samples, 0.04%)</title><rect x="3.1467%" y="789" width="0.0429%" height="15" fill="rgb(222,22,37)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="799.50"></text></g><g><title>gbemu.exe`alloc::sync::Arc&lt;d3d12::D3D12Lib,alloc::alloc::Global&gt;::inner (32 samples, 0.04%)</title><rect x="3.1467%" y="773" width="0.0429%" height="15" fill="rgb(237,53,32)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="783.50"></text></g><g><title>gbemu.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;d3d12::D3D12Lib&gt; &gt;::as_ref (32 samples, 0.04%)</title><rect x="3.1467%" y="757" width="0.0429%" height="15" fill="rgb(233,25,53)" fg:x="2345" fg:w="32"/><text x="3.3967%" y="767.50"></text></g><g><title>gbemu.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global&gt;*, core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (17 samples, 0.02%)</title><rect x="3.1923%" y="917" width="0.0228%" height="15" fill="rgb(210,40,34)" fg:x="2379" fg:w="17"/><text x="3.4423%" y="927.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (17 samples, 0.02%)</title><rect x="3.1923%" y="901" width="0.0228%" height="15" fill="rgb(241,220,44)" fg:x="2379" fg:w="17"/><text x="3.4423%" y="911.50"></text></g><g><title>gbemu.exe`core::iter::adapters::filter_map::impl$2::next(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (17 samples, 0.02%)</title><rect x="3.1923%" y="885" width="0.0228%" height="15" fill="rgb(235,28,35)" fg:x="2379" fg:w="17"/><text x="3.4423%" y="895.50"></text></g><g><title>gbemu.exe`core::iter::traits::iterator::Iterator::find_map(alloc::vec::into_iter::IntoIter&lt;enum2$ (17 samples, 0.02%)</title><rect x="3.1923%" y="869" width="0.0228%" height="15" fill="rgb(210,56,17)" fg:x="2379" fg:w="17"/><text x="3.4423%" y="879.50"></text></g><g><title>gbemu.exe`alloc::vec::into_iter::impl$5::try_fold(alloc::vec::into_iter::IntoIter&lt;enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;,alloc::alloc::Global&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;,wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,ref_mut$ (17 samples, 0.02%)</title><rect x="3.1923%" y="853" width="0.0228%" height="15" fill="rgb(224,130,29)" fg:x="2379" fg:w="17"/><text x="3.4423%" y="863.50"></text></g><g><title>gbemu.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;,wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,ref_mut$&lt;wgpu_hal::dx12::instance::impl$1::enumerate_adapters::closure_env$0&gt; &gt;*, tuple$&lt;&gt;, enum2$ (17 samples, 0.02%)</title><rect x="3.1923%" y="837" width="0.0228%" height="15" fill="rgb(235,212,8)" fg:x="2379" fg:w="17"/><text x="3.4423%" y="847.50"></text></g><g><title>gbemu.exe`wgpu_hal::dx12::Adapter::expose(enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;, alloc::sync::Arc&lt;d3d12::D3D12Lib,alloc::alloc::Global&gt;*, wgpu_types::InstanceFlags, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (17 samples, 0.02%)</title><rect x="3.1923%" y="821" width="0.0228%" height="15" fill="rgb(223,33,50)" fg:x="2379" fg:w="17"/><text x="3.4423%" y="831.50"></text></g><g><title>gbemu.exe`d3d12::D3D12Lib::create_device(d3d12::com::ComPtr (17 samples, 0.02%)</title><rect x="3.1923%" y="805" width="0.0228%" height="15" fill="rgb(219,149,13)" fg:x="2379" fg:w="17"/><text x="3.4423%" y="815.50"></text></g><g><title>`0x7FF82E8C8B0B (17 samples, 0.02%)</title><rect x="3.1923%" y="789" width="0.0228%" height="15" fill="rgb(250,156,29)" fg:x="2379" fg:w="17"/><text x="3.4423%" y="799.50"></text></g><g><title>`0x7FF82E8C69D3 (17 samples, 0.02%)</title><rect x="3.1923%" y="773" width="0.0228%" height="15" fill="rgb(216,193,19)" fg:x="2379" fg:w="17"/><text x="3.4423%" y="783.50"></text></g><g><title>`0x7FFFDC3133C8 (17 samples, 0.02%)</title><rect x="3.1923%" y="757" width="0.0228%" height="15" fill="rgb(216,135,14)" fg:x="2379" fg:w="17"/><text x="3.4423%" y="767.50"></text></g><g><title>`0x7FFFDC3135A5 (17 samples, 0.02%)</title><rect x="3.1923%" y="741" width="0.0228%" height="15" fill="rgb(241,47,5)" fg:x="2379" fg:w="17"/><text x="3.4423%" y="751.50"></text></g><g><title>`0x7FFFDC2D12ED (11 samples, 0.01%)</title><rect x="3.2004%" y="725" width="0.0148%" height="15" fill="rgb(233,42,35)" fg:x="2385" fg:w="11"/><text x="3.4504%" y="735.50"></text></g><g><title>`0x7FFFDC2D25C2 (11 samples, 0.01%)</title><rect x="3.2004%" y="709" width="0.0148%" height="15" fill="rgb(231,13,6)" fg:x="2385" fg:w="11"/><text x="3.4504%" y="719.50"></text></g><g><title>`0x7FF82E8C1C6B (11 samples, 0.01%)</title><rect x="3.2004%" y="693" width="0.0148%" height="15" fill="rgb(207,181,40)" fg:x="2385" fg:w="11"/><text x="3.4504%" y="703.50"></text></g><g><title>`0x7FF82E8C1DDA (11 samples, 0.01%)</title><rect x="3.2004%" y="677" width="0.0148%" height="15" fill="rgb(254,173,49)" fg:x="2385" fg:w="11"/><text x="3.4504%" y="687.50"></text></g><g><title>`0x7FF82E8C1F98 (10 samples, 0.01%)</title><rect x="3.2017%" y="661" width="0.0134%" height="15" fill="rgb(221,1,38)" fg:x="2386" fg:w="10"/><text x="3.4517%" y="671.50"></text></g><g><title>`0x7FFFDC2B6B3A (10 samples, 0.01%)</title><rect x="3.2017%" y="645" width="0.0134%" height="15" fill="rgb(206,124,46)" fg:x="2386" fg:w="10"/><text x="3.4517%" y="655.50"></text></g><g><title>`0x7FFFDC322CCB (8 samples, 0.01%)</title><rect x="3.2044%" y="629" width="0.0107%" height="15" fill="rgb(249,21,11)" fg:x="2388" fg:w="8"/><text x="3.4544%" y="639.50"></text></g><g><title>`0x7FF85DCD21B2 (11 samples, 0.01%)</title><rect x="3.2393%" y="389" width="0.0148%" height="15" fill="rgb(222,201,40)" fg:x="2414" fg:w="11"/><text x="3.4893%" y="399.50"></text></g><g><title>`0x7FF85DCD21BE (14 samples, 0.02%)</title><rect x="3.2634%" y="389" width="0.0188%" height="15" fill="rgb(235,61,29)" fg:x="2432" fg:w="14"/><text x="3.5134%" y="399.50"></text></g><g><title>`0x7FF85DCD21D4 (44 samples, 0.06%)</title><rect x="3.2889%" y="389" width="0.0590%" height="15" fill="rgb(219,207,3)" fg:x="2451" fg:w="44"/><text x="3.5389%" y="399.50"></text></g><g><title>`0x7FF85DCD21DE (76 samples, 0.10%)</title><rect x="3.3493%" y="389" width="0.1020%" height="15" fill="rgb(222,56,46)" fg:x="2496" fg:w="76"/><text x="3.5993%" y="399.50"></text></g><g><title>`0x7FF85C332B1F (165 samples, 0.22%)</title><rect x="3.2352%" y="533" width="0.2214%" height="15" fill="rgb(239,76,54)" fg:x="2411" fg:w="165"/><text x="3.4852%" y="543.50"></text></g><g><title>`0x7FF85C33351F (163 samples, 0.22%)</title><rect x="3.2379%" y="517" width="0.2187%" height="15" fill="rgb(231,124,27)" fg:x="2413" fg:w="163"/><text x="3.4879%" y="527.50"></text></g><g><title>`0x7FF85C3342F9 (163 samples, 0.22%)</title><rect x="3.2379%" y="501" width="0.2187%" height="15" fill="rgb(249,195,6)" fg:x="2413" fg:w="163"/><text x="3.4879%" y="511.50"></text></g><g><title>`0x7FF85C7501DA (163 samples, 0.22%)</title><rect x="3.2379%" y="485" width="0.2187%" height="15" fill="rgb(237,174,47)" fg:x="2413" fg:w="163"/><text x="3.4879%" y="495.50"></text></g><g><title>`0x7FF85C76239B (163 samples, 0.22%)</title><rect x="3.2379%" y="469" width="0.2187%" height="15" fill="rgb(206,201,31)" fg:x="2413" fg:w="163"/><text x="3.4879%" y="479.50"></text></g><g><title>`0x7FF85C76564D (163 samples, 0.22%)</title><rect x="3.2379%" y="453" width="0.2187%" height="15" fill="rgb(231,57,52)" fg:x="2413" fg:w="163"/><text x="3.4879%" y="463.50"></text></g><g><title>`0x7FF85DCD15A6 (163 samples, 0.22%)</title><rect x="3.2379%" y="437" width="0.2187%" height="15" fill="rgb(248,177,22)" fg:x="2413" fg:w="163"/><text x="3.4879%" y="447.50"></text></g><g><title>`0x7FF85DCD1B79 (163 samples, 0.22%)</title><rect x="3.2379%" y="421" width="0.2187%" height="15" fill="rgb(215,211,37)" fg:x="2413" fg:w="163"/><text x="3.4879%" y="431.50"></text></g><g><title>`0x7FF85DCD2073 (163 samples, 0.22%)</title><rect x="3.2379%" y="405" width="0.2187%" height="15" fill="rgb(241,128,51)" fg:x="2413" fg:w="163"/><text x="3.4879%" y="415.50"></text></g><g><title>`0x7FF853690838 (170 samples, 0.23%)</title><rect x="3.2352%" y="565" width="0.2281%" height="15" fill="rgb(227,165,31)" fg:x="2411" fg:w="170"/><text x="3.4852%" y="575.50"></text></g><g><title>`0x7FF85C3346F5 (170 samples, 0.23%)</title><rect x="3.2352%" y="549" width="0.2281%" height="15" fill="rgb(228,167,24)" fg:x="2411" fg:w="170"/><text x="3.4852%" y="559.50"></text></g><g><title>`0x7FF853686C69 (178 samples, 0.24%)</title><rect x="3.2339%" y="613" width="0.2389%" height="15" fill="rgb(228,143,12)" fg:x="2410" fg:w="178"/><text x="3.4839%" y="623.50"></text></g><g><title>`0x7FF853694A2D (178 samples, 0.24%)</title><rect x="3.2339%" y="597" width="0.2389%" height="15" fill="rgb(249,149,8)" fg:x="2410" fg:w="178"/><text x="3.4839%" y="607.50"></text></g><g><title>`0x7FF85368FB2C (177 samples, 0.24%)</title><rect x="3.2352%" y="581" width="0.2375%" height="15" fill="rgb(243,35,44)" fg:x="2411" fg:w="177"/><text x="3.4852%" y="591.50"></text></g><g><title>`0x7FF85368FB2C (8 samples, 0.01%)</title><rect x="3.4768%" y="581" width="0.0107%" height="15" fill="rgb(246,89,9)" fg:x="2591" fg:w="8"/><text x="3.7268%" y="591.50"></text></g><g><title>`0x7FF853686AB0 (196 samples, 0.26%)</title><rect x="3.2339%" y="629" width="0.2630%" height="15" fill="rgb(233,213,13)" fg:x="2410" fg:w="196"/><text x="3.4839%" y="639.50"></text></g><g><title>`0x7FF85368716E (15 samples, 0.02%)</title><rect x="3.4768%" y="613" width="0.0201%" height="15" fill="rgb(233,141,41)" fg:x="2591" fg:w="15"/><text x="3.7268%" y="623.50"></text></g><g><title>`0x7FF853694A2D (15 samples, 0.02%)</title><rect x="3.4768%" y="597" width="0.0201%" height="15" fill="rgb(239,167,4)" fg:x="2591" fg:w="15"/><text x="3.7268%" y="607.50"></text></g><g><title>`0x7FF85DCD21B2 (18 samples, 0.02%)</title><rect x="3.5009%" y="405" width="0.0242%" height="15" fill="rgb(209,217,16)" fg:x="2609" fg:w="18"/><text x="3.7509%" y="415.50"></text></g><g><title>`0x7FF85DCD21BE (25 samples, 0.03%)</title><rect x="3.5345%" y="405" width="0.0335%" height="15" fill="rgb(219,88,35)" fg:x="2634" fg:w="25"/><text x="3.7845%" y="415.50"></text></g><g><title>`0x7FF85DCD21D4 (74 samples, 0.10%)</title><rect x="3.5734%" y="405" width="0.0993%" height="15" fill="rgb(220,193,23)" fg:x="2663" fg:w="74"/><text x="3.8234%" y="415.50"></text></g><g><title>`0x7FF85DCD21DE (102 samples, 0.14%)</title><rect x="3.6754%" y="405" width="0.1369%" height="15" fill="rgb(230,90,52)" fg:x="2739" fg:w="102"/><text x="3.9254%" y="415.50"></text></g><g><title>`0x7FF85DCD15A6 (237 samples, 0.32%)</title><rect x="3.4969%" y="453" width="0.3180%" height="15" fill="rgb(252,106,19)" fg:x="2606" fg:w="237"/><text x="3.7469%" y="463.50"></text></g><g><title>`0x7FF85DCD1B79 (237 samples, 0.32%)</title><rect x="3.4969%" y="437" width="0.3180%" height="15" fill="rgb(206,74,20)" fg:x="2606" fg:w="237"/><text x="3.7469%" y="447.50"></text></g><g><title>`0x7FF85DCD2073 (237 samples, 0.32%)</title><rect x="3.4969%" y="421" width="0.3180%" height="15" fill="rgb(230,138,44)" fg:x="2606" fg:w="237"/><text x="3.7469%" y="431.50"></text></g><g><title>`0x7FF85C76239B (238 samples, 0.32%)</title><rect x="3.4969%" y="485" width="0.3194%" height="15" fill="rgb(235,182,43)" fg:x="2606" fg:w="238"/><text x="3.7469%" y="495.50"></text></g><g><title>`0x7FF85C76564D (238 samples, 0.32%)</title><rect x="3.4969%" y="469" width="0.3194%" height="15" fill="rgb(242,16,51)" fg:x="2606" fg:w="238"/><text x="3.7469%" y="479.50"></text></g><g><title>`0x7FF85C332B1F (239 samples, 0.32%)</title><rect x="3.4969%" y="549" width="0.3207%" height="15" fill="rgb(248,9,4)" fg:x="2606" fg:w="239"/><text x="3.7469%" y="559.50"></text></g><g><title>`0x7FF85C33351F (239 samples, 0.32%)</title><rect x="3.4969%" y="533" width="0.3207%" height="15" fill="rgb(210,31,22)" fg:x="2606" fg:w="239"/><text x="3.7469%" y="543.50"></text></g><g><title>`0x7FF85C3342F9 (239 samples, 0.32%)</title><rect x="3.4969%" y="517" width="0.3207%" height="15" fill="rgb(239,54,39)" fg:x="2606" fg:w="239"/><text x="3.7469%" y="527.50"></text></g><g><title>`0x7FF85C7501DA (239 samples, 0.32%)</title><rect x="3.4969%" y="501" width="0.3207%" height="15" fill="rgb(230,99,41)" fg:x="2606" fg:w="239"/><text x="3.7469%" y="511.50"></text></g><g><title>`0x7FF853690838 (243 samples, 0.33%)</title><rect x="3.4969%" y="581" width="0.3261%" height="15" fill="rgb(253,106,12)" fg:x="2606" fg:w="243"/><text x="3.7469%" y="591.50"></text></g><g><title>`0x7FF85C3346F5 (243 samples, 0.33%)</title><rect x="3.4969%" y="565" width="0.3261%" height="15" fill="rgb(213,46,41)" fg:x="2606" fg:w="243"/><text x="3.7469%" y="575.50"></text></g><g><title>`0x7FF85368FB2C (252 samples, 0.34%)</title><rect x="3.4969%" y="597" width="0.3382%" height="15" fill="rgb(215,133,35)" fg:x="2606" fg:w="252"/><text x="3.7469%" y="607.50"></text></g><g><title>`0x7FF853690A86 (8 samples, 0.01%)</title><rect x="3.8243%" y="581" width="0.0107%" height="15" fill="rgb(213,28,5)" fg:x="2850" fg:w="8"/><text x="4.0743%" y="591.50"></text></g><g><title>`0x7FF84735E3F0 (14 samples, 0.02%)</title><rect x="3.8391%" y="437" width="0.0188%" height="15" fill="rgb(215,77,49)" fg:x="2861" fg:w="14"/><text x="4.0891%" y="447.50"></text></g><g><title>`0x7FF84817F702 (13 samples, 0.02%)</title><rect x="3.8404%" y="421" width="0.0174%" height="15" fill="rgb(248,100,22)" fg:x="2862" fg:w="13"/><text x="4.0904%" y="431.50"></text></g><g><title>`0x7FF8481A9F29 (13 samples, 0.02%)</title><rect x="3.8404%" y="405" width="0.0174%" height="15" fill="rgb(208,67,9)" fg:x="2862" fg:w="13"/><text x="4.0904%" y="415.50"></text></g><g><title>`0x7FF853689D46 (474 samples, 0.64%)</title><rect x="3.2339%" y="661" width="0.6360%" height="15" fill="rgb(219,133,21)" fg:x="2410" fg:w="474"/><text x="3.4839%" y="671.50"></text></g><g><title>`0x7FF8536873C4 (474 samples, 0.64%)</title><rect x="3.2339%" y="645" width="0.6360%" height="15" fill="rgb(246,46,29)" fg:x="2410" fg:w="474"/><text x="3.4839%" y="655.50"></text></g><g><title>`0x7FF853686B53 (278 samples, 0.37%)</title><rect x="3.4969%" y="629" width="0.3730%" height="15" fill="rgb(246,185,52)" fg:x="2606" fg:w="278"/><text x="3.7469%" y="639.50"></text></g><g><title>`0x7FF853694A2D (278 samples, 0.37%)</title><rect x="3.4969%" y="613" width="0.3730%" height="15" fill="rgb(252,136,11)" fg:x="2606" fg:w="278"/><text x="3.7469%" y="623.50"></text></g><g><title>`0x7FF85368FB5C (26 samples, 0.03%)</title><rect x="3.8351%" y="597" width="0.0349%" height="15" fill="rgb(219,138,53)" fg:x="2858" fg:w="26"/><text x="4.0851%" y="607.50"></text></g><g><title>`0x7FF85BBC28E6 (26 samples, 0.03%)</title><rect x="3.8351%" y="581" width="0.0349%" height="15" fill="rgb(211,51,23)" fg:x="2858" fg:w="26"/><text x="4.0851%" y="591.50"></text></g><g><title>`0x7FF85EAB5D80 (26 samples, 0.03%)</title><rect x="3.8351%" y="565" width="0.0349%" height="15" fill="rgb(247,221,28)" fg:x="2858" fg:w="26"/><text x="4.0851%" y="575.50"></text></g><g><title>`0x7FF85EA684E0 (26 samples, 0.03%)</title><rect x="3.8351%" y="549" width="0.0349%" height="15" fill="rgb(251,222,45)" fg:x="2858" fg:w="26"/><text x="4.0851%" y="559.50"></text></g><g><title>`0x7FF85EA688D4 (23 samples, 0.03%)</title><rect x="3.8391%" y="533" width="0.0309%" height="15" fill="rgb(217,162,53)" fg:x="2861" fg:w="23"/><text x="4.0891%" y="543.50"></text></g><g><title>`0x7FF85EA9AE03 (23 samples, 0.03%)</title><rect x="3.8391%" y="517" width="0.0309%" height="15" fill="rgb(229,93,14)" fg:x="2861" fg:w="23"/><text x="4.0891%" y="527.50"></text></g><g><title>`0x7FF85EA9BC7A (23 samples, 0.03%)</title><rect x="3.8391%" y="501" width="0.0309%" height="15" fill="rgb(209,67,49)" fg:x="2861" fg:w="23"/><text x="4.0891%" y="511.50"></text></g><g><title>`0x7FF85EAD193C (23 samples, 0.03%)</title><rect x="3.8391%" y="485" width="0.0309%" height="15" fill="rgb(213,87,29)" fg:x="2861" fg:w="23"/><text x="4.0891%" y="495.50"></text></g><g><title>`0x7FF85EAD2983 (23 samples, 0.03%)</title><rect x="3.8391%" y="469" width="0.0309%" height="15" fill="rgb(205,151,52)" fg:x="2861" fg:w="23"/><text x="4.0891%" y="479.50"></text></g><g><title>`0x7FF84735EF38 (23 samples, 0.03%)</title><rect x="3.8391%" y="453" width="0.0309%" height="15" fill="rgb(253,215,39)" fg:x="2861" fg:w="23"/><text x="4.0891%" y="463.50"></text></g><g><title>`0x7FFFDC2D0C30 (485 samples, 0.65%)</title><rect x="3.2272%" y="757" width="0.6508%" height="15" fill="rgb(221,220,41)" fg:x="2405" fg:w="485"/><text x="3.4772%" y="767.50"></text></g><g><title>`0x7FFFDC2CFDF8 (485 samples, 0.65%)</title><rect x="3.2272%" y="741" width="0.6508%" height="15" fill="rgb(218,133,21)" fg:x="2405" fg:w="485"/><text x="3.4772%" y="751.50"></text></g><g><title>`0x7FFFDC2CFFB1 (485 samples, 0.65%)</title><rect x="3.2272%" y="725" width="0.6508%" height="15" fill="rgb(221,193,43)" fg:x="2405" fg:w="485"/><text x="3.4772%" y="735.50"></text></g><g><title>`0x7FFFDC30C813 (485 samples, 0.65%)</title><rect x="3.2272%" y="709" width="0.6508%" height="15" fill="rgb(240,128,52)" fg:x="2405" fg:w="485"/><text x="3.4772%" y="719.50"></text></g><g><title>`0x7FFFDC2B57BA (480 samples, 0.64%)</title><rect x="3.2339%" y="693" width="0.6441%" height="15" fill="rgb(253,114,12)" fg:x="2410" fg:w="480"/><text x="3.4839%" y="703.50"></text></g><g><title>`0x7FFFDC2B5BB7 (480 samples, 0.64%)</title><rect x="3.2339%" y="677" width="0.6441%" height="15" fill="rgb(215,223,47)" fg:x="2410" fg:w="480"/><text x="3.4839%" y="687.50"></text></g><g><title>`0x7FF8473AEF91 (8 samples, 0.01%)</title><rect x="3.8887%" y="565" width="0.0107%" height="15" fill="rgb(248,225,23)" fg:x="2898" fg:w="8"/><text x="4.1387%" y="575.50"></text></g><g><title>`0x7FF8473B10F0 (8 samples, 0.01%)</title><rect x="3.8887%" y="549" width="0.0107%" height="15" fill="rgb(250,108,0)" fg:x="2898" fg:w="8"/><text x="4.1387%" y="559.50"></text></g><g><title>`0x7FF8473AF33F (13 samples, 0.02%)</title><rect x="3.9075%" y="565" width="0.0174%" height="15" fill="rgb(228,208,7)" fg:x="2912" fg:w="13"/><text x="4.1575%" y="575.50"></text></g><g><title>`0x7FF8474E1288 (13 samples, 0.02%)</title><rect x="3.9075%" y="549" width="0.0174%" height="15" fill="rgb(244,45,10)" fg:x="2912" fg:w="13"/><text x="4.1575%" y="559.50"></text></g><g><title>`0x7FF847714E48 (13 samples, 0.02%)</title><rect x="3.9075%" y="533" width="0.0174%" height="15" fill="rgb(207,125,25)" fg:x="2912" fg:w="13"/><text x="4.1575%" y="543.50"></text></g><g><title>`0x7FF84767EFFB (10 samples, 0.01%)</title><rect x="3.9518%" y="501" width="0.0134%" height="15" fill="rgb(210,195,18)" fg:x="2945" fg:w="10"/><text x="4.2018%" y="511.50"></text></g><g><title>`0x7FF847624A69 (10 samples, 0.01%)</title><rect x="3.9518%" y="485" width="0.0134%" height="15" fill="rgb(249,80,12)" fg:x="2945" fg:w="10"/><text x="4.2018%" y="495.50"></text></g><g><title>`0x7FF8474AA025 (10 samples, 0.01%)</title><rect x="3.9518%" y="469" width="0.0134%" height="15" fill="rgb(221,65,9)" fg:x="2945" fg:w="10"/><text x="4.2018%" y="479.50"></text></g><g><title>`0x7FF847680EA3 (10 samples, 0.01%)</title><rect x="3.9518%" y="453" width="0.0134%" height="15" fill="rgb(235,49,36)" fg:x="2945" fg:w="10"/><text x="4.2018%" y="463.50"></text></g><g><title>`0x7FF847C40045 (10 samples, 0.01%)</title><rect x="3.9518%" y="437" width="0.0134%" height="15" fill="rgb(225,32,20)" fg:x="2945" fg:w="10"/><text x="4.2018%" y="447.50"></text></g><g><title>`0x7FF847C3FB7D (10 samples, 0.01%)</title><rect x="3.9518%" y="421" width="0.0134%" height="15" fill="rgb(215,141,46)" fg:x="2945" fg:w="10"/><text x="4.2018%" y="431.50"></text></g><g><title>`0x7FF847C51433 (10 samples, 0.01%)</title><rect x="3.9518%" y="405" width="0.0134%" height="15" fill="rgb(250,160,47)" fg:x="2945" fg:w="10"/><text x="4.2018%" y="415.50"></text></g><g><title>`0x7FF847D4C522 (10 samples, 0.01%)</title><rect x="3.9518%" y="389" width="0.0134%" height="15" fill="rgb(216,222,40)" fg:x="2945" fg:w="10"/><text x="4.2018%" y="399.50"></text></g><g><title>`0x7FF84775310B (17 samples, 0.02%)</title><rect x="3.9437%" y="549" width="0.0228%" height="15" fill="rgb(234,217,39)" fg:x="2939" fg:w="17"/><text x="4.1937%" y="559.50"></text></g><g><title>`0x7FF847A242E5 (11 samples, 0.01%)</title><rect x="3.9518%" y="533" width="0.0148%" height="15" fill="rgb(207,178,40)" fg:x="2945" fg:w="11"/><text x="4.2018%" y="543.50"></text></g><g><title>`0x7FF847A23AE4 (11 samples, 0.01%)</title><rect x="3.9518%" y="517" width="0.0148%" height="15" fill="rgb(221,136,13)" fg:x="2945" fg:w="11"/><text x="4.2018%" y="527.50"></text></g><g><title>`0x7FF8473AF7CC (32 samples, 0.04%)</title><rect x="3.9250%" y="565" width="0.0429%" height="15" fill="rgb(249,199,10)" fg:x="2925" fg:w="32"/><text x="4.1750%" y="575.50"></text></g><g><title>`0x7FF85C332B1F (10 samples, 0.01%)</title><rect x="3.9760%" y="453" width="0.0134%" height="15" fill="rgb(249,222,13)" fg:x="2963" fg:w="10"/><text x="4.2260%" y="463.50"></text></g><g><title>`0x7FF85C33351F (10 samples, 0.01%)</title><rect x="3.9760%" y="437" width="0.0134%" height="15" fill="rgb(244,185,38)" fg:x="2963" fg:w="10"/><text x="4.2260%" y="447.50"></text></g><g><title>`0x7FF85C3342F9 (10 samples, 0.01%)</title><rect x="3.9760%" y="421" width="0.0134%" height="15" fill="rgb(236,202,9)" fg:x="2963" fg:w="10"/><text x="4.2260%" y="431.50"></text></g><g><title>`0x7FF85C7501DA (10 samples, 0.01%)</title><rect x="3.9760%" y="405" width="0.0134%" height="15" fill="rgb(250,229,37)" fg:x="2963" fg:w="10"/><text x="4.2260%" y="415.50"></text></g><g><title>`0x7FF85C76239B (10 samples, 0.01%)</title><rect x="3.9760%" y="389" width="0.0134%" height="15" fill="rgb(206,174,23)" fg:x="2963" fg:w="10"/><text x="4.2260%" y="399.50"></text></g><g><title>`0x7FF85C76564D (10 samples, 0.01%)</title><rect x="3.9760%" y="373" width="0.0134%" height="15" fill="rgb(211,33,43)" fg:x="2963" fg:w="10"/><text x="4.2260%" y="383.50"></text></g><g><title>`0x7FF85DCD15A6 (10 samples, 0.01%)</title><rect x="3.9760%" y="357" width="0.0134%" height="15" fill="rgb(245,58,50)" fg:x="2963" fg:w="10"/><text x="4.2260%" y="367.50"></text></g><g><title>`0x7FF85DCD1B79 (10 samples, 0.01%)</title><rect x="3.9760%" y="341" width="0.0134%" height="15" fill="rgb(244,68,36)" fg:x="2963" fg:w="10"/><text x="4.2260%" y="351.50"></text></g><g><title>`0x7FF85DCD2073 (10 samples, 0.01%)</title><rect x="3.9760%" y="325" width="0.0134%" height="15" fill="rgb(232,229,15)" fg:x="2963" fg:w="10"/><text x="4.2260%" y="335.50"></text></g><g><title>`0x7FF8474F7DFB (12 samples, 0.02%)</title><rect x="3.9746%" y="501" width="0.0161%" height="15" fill="rgb(254,30,23)" fg:x="2962" fg:w="12"/><text x="4.2246%" y="511.50"></text></g><g><title>`0x7FF8474F8951 (11 samples, 0.01%)</title><rect x="3.9760%" y="485" width="0.0148%" height="15" fill="rgb(235,160,14)" fg:x="2963" fg:w="11"/><text x="4.2260%" y="495.50"></text></g><g><title>`0x7FF85C3346F5 (11 samples, 0.01%)</title><rect x="3.9760%" y="469" width="0.0148%" height="15" fill="rgb(212,155,44)" fg:x="2963" fg:w="11"/><text x="4.2260%" y="479.50"></text></g><g><title>`0x7FF8473AFCE5 (19 samples, 0.03%)</title><rect x="3.9706%" y="565" width="0.0255%" height="15" fill="rgb(226,2,50)" fg:x="2959" fg:w="19"/><text x="4.2206%" y="575.50"></text></g><g><title>`0x7FF84741F72A (17 samples, 0.02%)</title><rect x="3.9733%" y="549" width="0.0228%" height="15" fill="rgb(234,177,6)" fg:x="2961" fg:w="17"/><text x="4.2233%" y="559.50"></text></g><g><title>`0x7FF847500BD9 (17 samples, 0.02%)</title><rect x="3.9733%" y="533" width="0.0228%" height="15" fill="rgb(217,24,9)" fg:x="2961" fg:w="17"/><text x="4.2233%" y="543.50"></text></g><g><title>`0x7FF847694944 (17 samples, 0.02%)</title><rect x="3.9733%" y="517" width="0.0228%" height="15" fill="rgb(220,13,46)" fg:x="2961" fg:w="17"/><text x="4.2233%" y="527.50"></text></g><g><title>`0x7FF8473B04A6 (26 samples, 0.03%)</title><rect x="3.9988%" y="565" width="0.0349%" height="15" fill="rgb(239,221,27)" fg:x="2980" fg:w="26"/><text x="4.2488%" y="575.50"></text></g><g><title>`0x7FF84774F1A2 (26 samples, 0.03%)</title><rect x="3.9988%" y="549" width="0.0349%" height="15" fill="rgb(222,198,25)" fg:x="2980" fg:w="26"/><text x="4.2488%" y="559.50"></text></g><g><title>`0x7FF84740BBCA (26 samples, 0.03%)</title><rect x="3.9988%" y="533" width="0.0349%" height="15" fill="rgb(211,99,13)" fg:x="2980" fg:w="26"/><text x="4.2488%" y="543.50"></text></g><g><title>`0x7FFFDC320CA5 (116 samples, 0.16%)</title><rect x="3.8807%" y="661" width="0.1557%" height="15" fill="rgb(232,111,31)" fg:x="2892" fg:w="116"/><text x="4.1307%" y="671.50"></text></g><g><title>`0x7FFFDC309D1E (115 samples, 0.15%)</title><rect x="3.8820%" y="645" width="0.1543%" height="15" fill="rgb(245,82,37)" fg:x="2893" fg:w="115"/><text x="4.1320%" y="655.50"></text></g><g><title>`0x7FF847A71456 (115 samples, 0.15%)</title><rect x="3.8820%" y="629" width="0.1543%" height="15" fill="rgb(227,149,46)" fg:x="2893" fg:w="115"/><text x="4.1320%" y="639.50"></text></g><g><title>`0x7FF847A70D9D (115 samples, 0.15%)</title><rect x="3.8820%" y="613" width="0.1543%" height="15" fill="rgb(218,36,50)" fg:x="2893" fg:w="115"/><text x="4.1320%" y="623.50"></text></g><g><title>`0x7FF847715309 (115 samples, 0.15%)</title><rect x="3.8820%" y="597" width="0.1543%" height="15" fill="rgb(226,80,48)" fg:x="2893" fg:w="115"/><text x="4.1320%" y="607.50"></text></g><g><title>`0x7FF8474E6B2C (114 samples, 0.15%)</title><rect x="3.8834%" y="581" width="0.1530%" height="15" fill="rgb(238,224,15)" fg:x="2894" fg:w="114"/><text x="4.1334%" y="591.50"></text></g><g><title>`0x7FFFDC2E6A93 (8 samples, 0.01%)</title><rect x="4.0457%" y="645" width="0.0107%" height="15" fill="rgb(241,136,10)" fg:x="3015" fg:w="8"/><text x="4.2957%" y="655.50"></text></g><g><title>`0x7FF82E8C1697 (8 samples, 0.01%)</title><rect x="4.0457%" y="629" width="0.0107%" height="15" fill="rgb(208,32,45)" fg:x="3015" fg:w="8"/><text x="4.2957%" y="639.50"></text></g><g><title>`0x7FFFDC2F849B (8 samples, 0.01%)</title><rect x="4.0457%" y="613" width="0.0107%" height="15" fill="rgb(207,135,9)" fg:x="3015" fg:w="8"/><text x="4.2957%" y="623.50"></text></g><g><title>`0x7FFFDC2A6148 (8 samples, 0.01%)</title><rect x="4.0457%" y="597" width="0.0107%" height="15" fill="rgb(206,86,44)" fg:x="3015" fg:w="8"/><text x="4.2957%" y="607.50"></text></g><g><title>`0x7FFFDC2D543F (8 samples, 0.01%)</title><rect x="4.0457%" y="581" width="0.0107%" height="15" fill="rgb(245,177,15)" fg:x="3015" fg:w="8"/><text x="4.2957%" y="591.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::impl$6::request_adapter::gather&lt;wgpu_hal::dx12::Api,tuple$&lt;&gt; &gt;(wgpu_hal::dx12::Api, enum2$&lt;core::option::Option&lt;ref$&lt;wgpu_hal::dx12::Instance&gt; &gt; &gt;, enum2$&lt;wgpu_core::instance::AdapterInputs&lt;tuple$&lt;&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$&lt;wgpu_core::instance::Surface&gt; &gt; &gt;, bool, alloc::vec::Vec (688 samples, 0.92%)</title><rect x="3.1467%" y="997" width="0.9232%" height="15" fill="rgb(206,64,50)" fg:x="2345" fg:w="688"/><text x="3.3967%" y="1007.50"></text></g><g><title>gbemu.exe`wgpu_hal::dx12::instance::impl$1::enumerate_adapters (656 samples, 0.88%)</title><rect x="3.1896%" y="981" width="0.8803%" height="15" fill="rgb(234,36,40)" fg:x="2377" fg:w="656"/><text x="3.4396%" y="991.50"></text></g><g><title>gbemu.exe`alloc::vec::in_place_collect::impl$1::from_iter&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;,alloc::alloc::Global&gt;,wgpu_hal::dx12::instance::impl$1::enumerate_adapters::closure_env$0&gt; &gt;(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (654 samples, 0.88%)</title><rect x="3.1923%" y="965" width="0.8776%" height="15" fill="rgb(213,64,8)" fg:x="2379" fg:w="654"/><text x="3.4423%" y="975.50"></text></g><g><title>gbemu.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (654 samples, 0.88%)</title><rect x="3.1923%" y="949" width="0.8776%" height="15" fill="rgb(210,75,36)" fg:x="2379" fg:w="654"/><text x="3.4423%" y="959.50"></text></g><g><title>gbemu.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (654 samples, 0.88%)</title><rect x="3.1923%" y="933" width="0.8776%" height="15" fill="rgb(229,88,21)" fg:x="2379" fg:w="654"/><text x="3.4423%" y="943.50"></text></g><g><title>gbemu.exe`core::iter::adapters::filter_map::impl$2::next(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (637 samples, 0.85%)</title><rect x="3.2151%" y="917" width="0.8548%" height="15" fill="rgb(252,204,47)" fg:x="2396" fg:w="637"/><text x="3.4651%" y="927.50"></text></g><g><title>gbemu.exe`core::iter::traits::iterator::Iterator::find_map(alloc::vec::into_iter::IntoIter&lt;enum2$ (637 samples, 0.85%)</title><rect x="3.2151%" y="901" width="0.8548%" height="15" fill="rgb(208,77,27)" fg:x="2396" fg:w="637"/><text x="3.4651%" y="911.50"></text></g><g><title>gbemu.exe`alloc::vec::into_iter::impl$5::try_fold(alloc::vec::into_iter::IntoIter&lt;enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;,alloc::alloc::Global&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;,wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,ref_mut$ (637 samples, 0.85%)</title><rect x="3.2151%" y="885" width="0.8548%" height="15" fill="rgb(221,76,26)" fg:x="2396" fg:w="637"/><text x="3.4651%" y="895.50"></text></g><g><title>gbemu.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;,wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,ref_mut$&lt;wgpu_hal::dx12::instance::impl$1::enumerate_adapters::closure_env$0&gt; &gt;*, tuple$&lt;&gt;, enum2$ (637 samples, 0.85%)</title><rect x="3.2151%" y="869" width="0.8548%" height="15" fill="rgb(225,139,18)" fg:x="2396" fg:w="637"/><text x="3.4651%" y="879.50"></text></g><g><title>gbemu.exe`wgpu_hal::dx12::Adapter::expose(enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;, alloc::sync::Arc&lt;d3d12::D3D12Lib,alloc::alloc::Global&gt;*, wgpu_types::InstanceFlags, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (637 samples, 0.85%)</title><rect x="3.2151%" y="853" width="0.8548%" height="15" fill="rgb(230,137,11)" fg:x="2396" fg:w="637"/><text x="3.4651%" y="863.50"></text></g><g><title>gbemu.exe`d3d12::D3D12Lib::create_device(d3d12::com::ComPtr (636 samples, 0.85%)</title><rect x="3.2165%" y="837" width="0.8534%" height="15" fill="rgb(212,28,1)" fg:x="2397" fg:w="636"/><text x="3.4665%" y="847.50"></text></g><g><title>`0x7FF82E8C8B0B (636 samples, 0.85%)</title><rect x="3.2165%" y="821" width="0.8534%" height="15" fill="rgb(248,164,17)" fg:x="2397" fg:w="636"/><text x="3.4665%" y="831.50"></text></g><g><title>`0x7FF82E8C69D3 (632 samples, 0.85%)</title><rect x="3.2218%" y="805" width="0.8481%" height="15" fill="rgb(222,171,42)" fg:x="2401" fg:w="632"/><text x="3.4718%" y="815.50"></text></g><g><title>`0x7FFFDC3133C8 (632 samples, 0.85%)</title><rect x="3.2218%" y="789" width="0.8481%" height="15" fill="rgb(243,84,45)" fg:x="2401" fg:w="632"/><text x="3.4718%" y="799.50"></text></g><g><title>`0x7FFFDC3135A5 (632 samples, 0.85%)</title><rect x="3.2218%" y="773" width="0.8481%" height="15" fill="rgb(252,49,23)" fg:x="2401" fg:w="632"/><text x="3.4718%" y="783.50"></text></g><g><title>`0x7FFFDC2D12ED (143 samples, 0.19%)</title><rect x="3.8780%" y="757" width="0.1919%" height="15" fill="rgb(215,19,7)" fg:x="2890" fg:w="143"/><text x="4.1280%" y="767.50"></text></g><g><title>`0x7FFFDC2D25C2 (143 samples, 0.19%)</title><rect x="3.8780%" y="741" width="0.1919%" height="15" fill="rgb(238,81,41)" fg:x="2890" fg:w="143"/><text x="4.1280%" y="751.50"></text></g><g><title>`0x7FF82E8C1C6B (143 samples, 0.19%)</title><rect x="3.8780%" y="725" width="0.1919%" height="15" fill="rgb(210,199,37)" fg:x="2890" fg:w="143"/><text x="4.1280%" y="735.50"></text></g><g><title>`0x7FF82E8C1DDA (143 samples, 0.19%)</title><rect x="3.8780%" y="709" width="0.1919%" height="15" fill="rgb(244,192,49)" fg:x="2890" fg:w="143"/><text x="4.1280%" y="719.50"></text></g><g><title>`0x7FF82E8C1F98 (142 samples, 0.19%)</title><rect x="3.8793%" y="693" width="0.1905%" height="15" fill="rgb(226,211,11)" fg:x="2891" fg:w="142"/><text x="4.1293%" y="703.50"></text></g><g><title>`0x7FFFDC2B6B3A (142 samples, 0.19%)</title><rect x="3.8793%" y="677" width="0.1905%" height="15" fill="rgb(236,162,54)" fg:x="2891" fg:w="142"/><text x="4.1293%" y="687.50"></text></g><g><title>`0x7FFFDC322CCB (21 samples, 0.03%)</title><rect x="4.0417%" y="661" width="0.0282%" height="15" fill="rgb(220,229,9)" fg:x="3012" fg:w="21"/><text x="4.2917%" y="671.50"></text></g><g><title>`0x7FFFD8890C50 (11 samples, 0.01%)</title><rect x="4.0766%" y="645" width="0.0148%" height="15" fill="rgb(250,87,22)" fg:x="3038" fg:w="11"/><text x="4.3266%" y="655.50"></text></g><g><title>`0x7FFFD888FC13 (11 samples, 0.01%)</title><rect x="4.0766%" y="629" width="0.0148%" height="15" fill="rgb(239,43,17)" fg:x="3038" fg:w="11"/><text x="4.3266%" y="639.50"></text></g><g><title>`0x7FFFD8643607 (15 samples, 0.02%)</title><rect x="4.0766%" y="677" width="0.0201%" height="15" fill="rgb(231,177,25)" fg:x="3038" fg:w="15"/><text x="4.3266%" y="687.50"></text></g><g><title>`0x7FFFD8643599 (15 samples, 0.02%)</title><rect x="4.0766%" y="661" width="0.0201%" height="15" fill="rgb(219,179,1)" fg:x="3038" fg:w="15"/><text x="4.3266%" y="671.50"></text></g><g><title>gbemu.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::SurfaceFormatKHR,ash::extensions::khr::surface::impl$0::get_physical_device_surface_formats::closure_env$0&gt; (20 samples, 0.03%)</title><rect x="4.0712%" y="773" width="0.0268%" height="15" fill="rgb(238,219,53)" fg:x="3034" fg:w="20"/><text x="4.3212%" y="783.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result (16 samples, 0.02%)</title><rect x="4.0766%" y="757" width="0.0215%" height="15" fill="rgb(232,167,36)" fg:x="3038" fg:w="16"/><text x="4.3266%" y="767.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result_with_success(ash::vk::enums::Result, tuple$ (16 samples, 0.02%)</title><rect x="4.0766%" y="741" width="0.0215%" height="15" fill="rgb(244,19,51)" fg:x="3038" fg:w="16"/><text x="4.3266%" y="751.50"></text></g><g><title>`0x7FF813C5A1C0 (16 samples, 0.02%)</title><rect x="4.0766%" y="725" width="0.0215%" height="15" fill="rgb(224,6,22)" fg:x="3038" fg:w="16"/><text x="4.3266%" y="735.50"></text></g><g><title>`0x7FF813C592BD (16 samples, 0.02%)</title><rect x="4.0766%" y="709" width="0.0215%" height="15" fill="rgb(224,145,5)" fg:x="3038" fg:w="16"/><text x="4.3266%" y="719.50"></text></g><g><title>`0x7FFFD863BAF6 (16 samples, 0.02%)</title><rect x="4.0766%" y="693" width="0.0215%" height="15" fill="rgb(234,130,49)" fg:x="3038" fg:w="16"/><text x="4.3266%" y="703.50"></text></g><g><title>gbemu.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter (24 samples, 0.03%)</title><rect x="4.0712%" y="981" width="0.0322%" height="15" fill="rgb(254,6,2)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="991.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;::as_slice (24 samples, 0.03%)</title><rect x="4.0712%" y="965" width="0.0322%" height="15" fill="rgb(208,96,46)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="975.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;::as_ptr (24 samples, 0.03%)</title><rect x="4.0712%" y="949" width="0.0322%" height="15" fill="rgb(239,3,39)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="959.50"></text></g><g><title>gbemu.exe`alloc::raw_vec::RawVec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;::ptr (24 samples, 0.03%)</title><rect x="4.0712%" y="933" width="0.0322%" height="15" fill="rgb(233,210,1)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="943.50"></text></g><g><title>gbemu.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (24 samples, 0.03%)</title><rect x="4.0712%" y="917" width="0.0322%" height="15" fill="rgb(244,137,37)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="927.50"></text></g><g><title>gbemu.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (24 samples, 0.03%)</title><rect x="4.0712%" y="901" width="0.0322%" height="15" fill="rgb(240,136,2)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="911.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;::retain&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global,wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::vulkan::Api,tuple$&lt;&gt; &gt; &gt;(wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::vulkan::Api,tuple$ (24 samples, 0.03%)</title><rect x="4.0712%" y="885" width="0.0322%" height="15" fill="rgb(239,18,37)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="895.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global,wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::vulkan::Api,tuple$ (24 samples, 0.03%)</title><rect x="4.0712%" y="869" width="0.0322%" height="15" fill="rgb(218,185,22)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="879.50"></text></g><g><title>gbemu.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global,wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::vulkan::Api,tuple$&lt;&gt; &gt; &gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop&lt;wgpu_hal::ExposedAdapter (24 samples, 0.03%)</title><rect x="4.0712%" y="853" width="0.0322%" height="15" fill="rgb(225,218,4)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="863.50"></text></g><g><title>gbemu.exe`alloc::vec::impl$1::retain::closure$0(alloc::vec::impl$1::retain::closure_env$0&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global,wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::vulkan::Api,tuple$&lt;&gt; &gt; &gt;*, wgpu_hal::ExposedAdapter (24 samples, 0.03%)</title><rect x="4.0712%" y="837" width="0.0322%" height="15" fill="rgb(230,182,32)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="847.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::impl$6::request_adapter::gather::closure$1(wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::vulkan::Api,tuple$&lt;&gt; &gt;*, wgpu_hal::ExposedAdapter (24 samples, 0.03%)</title><rect x="4.0712%" y="821" width="0.0322%" height="15" fill="rgb(242,56,43)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="831.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::option::Option&lt;wgpu_hal::SurfaceCapabilities&gt; &gt;::is_some (24 samples, 0.03%)</title><rect x="4.0712%" y="805" width="0.0322%" height="15" fill="rgb(233,99,24)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="815.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::adapter::impl$9::surface_capabilities (24 samples, 0.03%)</title><rect x="4.0712%" y="789" width="0.0322%" height="15" fill="rgb(234,209,42)" fg:x="3034" fg:w="24"/><text x="4.3212%" y="799.50"></text></g><g><title>gbemu.exe`core::future::into_future::impl$0::into_future(enum2$ (865 samples, 1.16%)</title><rect x="2.9561%" y="1077" width="1.1607%" height="15" fill="rgb(227,7,12)" fg:x="2203" fg:w="865"/><text x="3.2061%" y="1087.50"></text></g><g><title>gbemu.exe`wgpu::Instance::request_adapter(wgpu_types::RequestAdapterOptions&lt;ref$ (723 samples, 0.97%)</title><rect x="3.1467%" y="1061" width="0.9702%" height="15" fill="rgb(245,203,43)" fg:x="2345" fg:w="723"/><text x="3.3967%" y="1071.50"></text></g><g><title>gbemu.exe`wgpu::context::impl$5::instance_request_adapter&lt;wgpu::backend::wgpu_core::ContextWgpuCore&gt;(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu_types::RequestAdapterOptions&lt;ref$ (723 samples, 0.97%)</title><rect x="3.1467%" y="1045" width="0.9702%" height="15" fill="rgb(238,205,33)" fg:x="2345" fg:w="723"/><text x="3.3967%" y="1055.50"></text></g><g><title>gbemu.exe`wgpu::backend::wgpu_core::impl$7::instance_request_adapter(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu_types::RequestAdapterOptions&lt;ref$ (723 samples, 0.97%)</title><rect x="3.1467%" y="1029" width="0.9702%" height="15" fill="rgb(231,56,7)" fg:x="2345" fg:w="723"/><text x="3.3967%" y="1039.50"></text></g><g><title>gbemu.exe`wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;::request_adapter&lt;wgpu_core::identity::IdentityManagerFactory&gt;(wgpu_types::RequestAdapterOptions&lt;wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt; &gt;*, enum2$&lt;wgpu_core::instance::AdapterInputs&lt;tuple$ (723 samples, 0.97%)</title><rect x="3.1467%" y="1013" width="0.9702%" height="15" fill="rgb(244,186,29)" fg:x="2345" fg:w="723"/><text x="3.3967%" y="1023.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::impl$6::request_adapter::gather&lt;wgpu_hal::vulkan::Api,tuple$&lt;&gt; &gt;(wgpu_hal::vulkan::Api, enum2$&lt;core::option::Option&lt;ref$&lt;wgpu_hal::vulkan::Instance&gt; &gt; &gt;, enum2$&lt;wgpu_core::instance::AdapterInputs&lt;tuple$&lt;&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$&lt;wgpu_core::instance::Surface&gt; &gt; &gt;, bool, alloc::vec::Vec (34 samples, 0.05%)</title><rect x="4.0712%" y="997" width="0.0456%" height="15" fill="rgb(234,111,31)" fg:x="3034" fg:w="34"/><text x="4.3212%" y="1007.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::instance::impl$5::enumerate_adapters (10 samples, 0.01%)</title><rect x="4.1034%" y="981" width="0.0134%" height="15" fill="rgb(241,149,10)" fg:x="3058" fg:w="10"/><text x="4.3534%" y="991.50"></text></g><g><title>gbemu.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::PhysicalDevice,ash::instance::impl$4::enumerate_physical_devices::closure_env$0&gt; (9 samples, 0.01%)</title><rect x="4.1048%" y="965" width="0.0121%" height="15" fill="rgb(249,206,44)" fg:x="3059" fg:w="9"/><text x="4.3548%" y="975.50"></text></g><g><title>gbemu.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;ultraviolet::mat::Mat4,wgpu_types::Extent3d,wgpu::Texture,pixels::renderers::ScalingRenderer,usize&gt;,enum2$ (10 samples, 0.01%)</title><rect x="4.1168%" y="1077" width="0.0134%" height="15" fill="rgb(251,153,30)" fg:x="3068" fg:w="10"/><text x="4.3668%" y="1087.50"></text></g><g><title>gbemu.exe`pixels::builder::create_backing_texture(wgpu::Device*, unsigned int, unsigned int, enum2$&lt;wgpu_types::TextureFormat&gt;, pixels::SurfaceSize*, enum2$ (10 samples, 0.01%)</title><rect x="4.1168%" y="1061" width="0.0134%" height="15" fill="rgb(239,152,38)" fg:x="3068" fg:w="10"/><text x="4.3668%" y="1071.50"></text></g><g><title>gbemu.exe`pixels::renderers::ScalingRenderer::new(wgpu::Device*, wgpu::TextureView*, wgpu_types::Extent3d*, pixels::SurfaceSize*, enum2$ (10 samples, 0.01%)</title><rect x="4.1168%" y="1045" width="0.0134%" height="15" fill="rgb(249,139,47)" fg:x="3068" fg:w="10"/><text x="4.3668%" y="1055.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::adapter::impl$9::surface_capabilities (12 samples, 0.02%)</title><rect x="4.1303%" y="997" width="0.0161%" height="15" fill="rgb(244,64,35)" fg:x="3078" fg:w="12"/><text x="4.3803%" y="1007.50"></text></g><g><title>gbemu.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::SurfaceFormatKHR,ash::extensions::khr::surface::impl$0::get_physical_device_surface_formats::closure_env$0&gt; (12 samples, 0.02%)</title><rect x="4.1303%" y="981" width="0.0161%" height="15" fill="rgb(216,46,15)" fg:x="3078" fg:w="12"/><text x="4.3803%" y="991.50"></text></g><g><title>`0x7FF85DCD21B2 (14 samples, 0.02%)</title><rect x="4.1719%" y="453" width="0.0188%" height="15" fill="rgb(250,74,19)" fg:x="3109" fg:w="14"/><text x="4.4219%" y="463.50"></text></g><g><title>`0x7FF85DCD21BE (11 samples, 0.01%)</title><rect x="4.1987%" y="453" width="0.0148%" height="15" fill="rgb(249,42,33)" fg:x="3129" fg:w="11"/><text x="4.4487%" y="463.50"></text></g><g><title>`0x7FF85DCD21D4 (44 samples, 0.06%)</title><rect x="4.2161%" y="453" width="0.0590%" height="15" fill="rgb(242,149,17)" fg:x="3142" fg:w="44"/><text x="4.4661%" y="463.50"></text></g><g><title>`0x7FF85DCD21DE (80 samples, 0.11%)</title><rect x="4.2779%" y="453" width="0.1073%" height="15" fill="rgb(244,29,21)" fg:x="3188" fg:w="80"/><text x="4.5279%" y="463.50"></text></g><g><title>`0x7FF85DCD15A6 (165 samples, 0.22%)</title><rect x="4.1678%" y="501" width="0.2214%" height="15" fill="rgb(220,130,37)" fg:x="3106" fg:w="165"/><text x="4.4178%" y="511.50"></text></g><g><title>`0x7FF85DCD1B79 (165 samples, 0.22%)</title><rect x="4.1678%" y="485" width="0.2214%" height="15" fill="rgb(211,67,2)" fg:x="3106" fg:w="165"/><text x="4.4178%" y="495.50"></text></g><g><title>`0x7FF85DCD2073 (165 samples, 0.22%)</title><rect x="4.1678%" y="469" width="0.2214%" height="15" fill="rgb(235,68,52)" fg:x="3106" fg:w="165"/><text x="4.4178%" y="479.50"></text></g><g><title>`0x7FF85C76239B (166 samples, 0.22%)</title><rect x="4.1678%" y="533" width="0.2228%" height="15" fill="rgb(246,142,3)" fg:x="3106" fg:w="166"/><text x="4.4178%" y="543.50"></text></g><g><title>`0x7FF85C76564D (166 samples, 0.22%)</title><rect x="4.1678%" y="517" width="0.2228%" height="15" fill="rgb(241,25,7)" fg:x="3106" fg:w="166"/><text x="4.4178%" y="527.50"></text></g><g><title>`0x7FF85C332B1F (169 samples, 0.23%)</title><rect x="4.1652%" y="597" width="0.2268%" height="15" fill="rgb(242,119,39)" fg:x="3104" fg:w="169"/><text x="4.4152%" y="607.50"></text></g><g><title>`0x7FF85C33351F (167 samples, 0.22%)</title><rect x="4.1678%" y="581" width="0.2241%" height="15" fill="rgb(241,98,45)" fg:x="3106" fg:w="167"/><text x="4.4178%" y="591.50"></text></g><g><title>`0x7FF85C3342F9 (167 samples, 0.22%)</title><rect x="4.1678%" y="565" width="0.2241%" height="15" fill="rgb(254,28,30)" fg:x="3106" fg:w="167"/><text x="4.4178%" y="575.50"></text></g><g><title>`0x7FF85C7501DA (167 samples, 0.22%)</title><rect x="4.1678%" y="549" width="0.2241%" height="15" fill="rgb(241,142,54)" fg:x="3106" fg:w="167"/><text x="4.4178%" y="559.50"></text></g><g><title>`0x7FF853690838 (173 samples, 0.23%)</title><rect x="4.1652%" y="629" width="0.2321%" height="15" fill="rgb(222,85,15)" fg:x="3104" fg:w="173"/><text x="4.4152%" y="639.50"></text></g><g><title>`0x7FF85C3346F5 (173 samples, 0.23%)</title><rect x="4.1652%" y="613" width="0.2321%" height="15" fill="rgb(210,85,47)" fg:x="3104" fg:w="173"/><text x="4.4152%" y="623.50"></text></g><g><title>`0x7FF853686C69 (179 samples, 0.24%)</title><rect x="4.1652%" y="677" width="0.2402%" height="15" fill="rgb(224,206,25)" fg:x="3104" fg:w="179"/><text x="4.4152%" y="687.50"></text></g><g><title>`0x7FF853694A2D (179 samples, 0.24%)</title><rect x="4.1652%" y="661" width="0.2402%" height="15" fill="rgb(243,201,19)" fg:x="3104" fg:w="179"/><text x="4.4152%" y="671.50"></text></g><g><title>`0x7FF85368FB2C (179 samples, 0.24%)</title><rect x="4.1652%" y="645" width="0.2402%" height="15" fill="rgb(236,59,4)" fg:x="3104" fg:w="179"/><text x="4.4152%" y="655.50"></text></g><g><title>`0x7FF85C332B1F (8 samples, 0.01%)</title><rect x="4.4121%" y="597" width="0.0107%" height="15" fill="rgb(254,179,45)" fg:x="3288" fg:w="8"/><text x="4.6621%" y="607.50"></text></g><g><title>`0x7FF85368FB2C (9 samples, 0.01%)</title><rect x="4.4121%" y="645" width="0.0121%" height="15" fill="rgb(226,14,10)" fg:x="3288" fg:w="9"/><text x="4.6621%" y="655.50"></text></g><g><title>`0x7FF853690838 (9 samples, 0.01%)</title><rect x="4.4121%" y="629" width="0.0121%" height="15" fill="rgb(244,27,41)" fg:x="3288" fg:w="9"/><text x="4.6621%" y="639.50"></text></g><g><title>`0x7FF85C3346F5 (9 samples, 0.01%)</title><rect x="4.4121%" y="613" width="0.0121%" height="15" fill="rgb(235,35,32)" fg:x="3288" fg:w="9"/><text x="4.6621%" y="623.50"></text></g><g><title>`0x7FF853686AB0 (200 samples, 0.27%)</title><rect x="4.1652%" y="693" width="0.2684%" height="15" fill="rgb(218,68,31)" fg:x="3104" fg:w="200"/><text x="4.4152%" y="703.50"></text></g><g><title>`0x7FF85368716E (17 samples, 0.02%)</title><rect x="4.4107%" y="677" width="0.0228%" height="15" fill="rgb(207,120,37)" fg:x="3287" fg:w="17"/><text x="4.6607%" y="687.50"></text></g><g><title>`0x7FF853694A2D (17 samples, 0.02%)</title><rect x="4.4107%" y="661" width="0.0228%" height="15" fill="rgb(227,98,0)" fg:x="3287" fg:w="17"/><text x="4.6607%" y="671.50"></text></g><g><title>`0x7FF85DCD21B2 (9 samples, 0.01%)</title><rect x="4.4362%" y="469" width="0.0121%" height="15" fill="rgb(207,7,3)" fg:x="3306" fg:w="9"/><text x="4.6862%" y="479.50"></text></g><g><title>`0x7FF85DCD21BE (27 samples, 0.04%)</title><rect x="4.4577%" y="469" width="0.0362%" height="15" fill="rgb(206,98,19)" fg:x="3322" fg:w="27"/><text x="4.7077%" y="479.50"></text></g><g><title>`0x7FF85DCD21D4 (59 samples, 0.08%)</title><rect x="4.5020%" y="469" width="0.0792%" height="15" fill="rgb(217,5,26)" fg:x="3355" fg:w="59"/><text x="4.7520%" y="479.50"></text></g><g><title>`0x7FF85DCD15A6 (238 samples, 0.32%)</title><rect x="4.4335%" y="517" width="0.3194%" height="15" fill="rgb(235,190,38)" fg:x="3304" fg:w="238"/><text x="4.6835%" y="527.50"></text></g><g><title>`0x7FF85DCD1B79 (238 samples, 0.32%)</title><rect x="4.4335%" y="501" width="0.3194%" height="15" fill="rgb(247,86,24)" fg:x="3304" fg:w="238"/><text x="4.6835%" y="511.50"></text></g><g><title>`0x7FF85DCD2073 (238 samples, 0.32%)</title><rect x="4.4335%" y="485" width="0.3194%" height="15" fill="rgb(205,101,16)" fg:x="3304" fg:w="238"/><text x="4.6835%" y="495.50"></text></g><g><title>`0x7FF85DCD21DE (128 samples, 0.17%)</title><rect x="4.5811%" y="469" width="0.1718%" height="15" fill="rgb(246,168,33)" fg:x="3414" fg:w="128"/><text x="4.8311%" y="479.50"></text></g><g><title>`0x7FF85C76239B (240 samples, 0.32%)</title><rect x="4.4335%" y="549" width="0.3220%" height="15" fill="rgb(231,114,1)" fg:x="3304" fg:w="240"/><text x="4.6835%" y="559.50"></text></g><g><title>`0x7FF85C76564D (240 samples, 0.32%)</title><rect x="4.4335%" y="533" width="0.3220%" height="15" fill="rgb(207,184,53)" fg:x="3304" fg:w="240"/><text x="4.6835%" y="543.50"></text></g><g><title>`0x7FF85C332B1F (241 samples, 0.32%)</title><rect x="4.4335%" y="613" width="0.3234%" height="15" fill="rgb(224,95,51)" fg:x="3304" fg:w="241"/><text x="4.6835%" y="623.50"></text></g><g><title>`0x7FF85C33351F (241 samples, 0.32%)</title><rect x="4.4335%" y="597" width="0.3234%" height="15" fill="rgb(212,188,45)" fg:x="3304" fg:w="241"/><text x="4.6835%" y="607.50"></text></g><g><title>`0x7FF85C3342F9 (241 samples, 0.32%)</title><rect x="4.4335%" y="581" width="0.3234%" height="15" fill="rgb(223,154,38)" fg:x="3304" fg:w="241"/><text x="4.6835%" y="591.50"></text></g><g><title>`0x7FF85C7501DA (241 samples, 0.32%)</title><rect x="4.4335%" y="565" width="0.3234%" height="15" fill="rgb(251,22,52)" fg:x="3304" fg:w="241"/><text x="4.6835%" y="575.50"></text></g><g><title>`0x7FF853690838 (246 samples, 0.33%)</title><rect x="4.4335%" y="645" width="0.3301%" height="15" fill="rgb(229,209,22)" fg:x="3304" fg:w="246"/><text x="4.6835%" y="655.50"></text></g><g><title>`0x7FF85C3346F5 (246 samples, 0.33%)</title><rect x="4.4335%" y="629" width="0.3301%" height="15" fill="rgb(234,138,34)" fg:x="3304" fg:w="246"/><text x="4.6835%" y="639.50"></text></g><g><title>`0x7FF85368FB2C (254 samples, 0.34%)</title><rect x="4.4335%" y="661" width="0.3408%" height="15" fill="rgb(212,95,11)" fg:x="3304" fg:w="254"/><text x="4.6835%" y="671.50"></text></g><g><title>`0x7FF853690A86 (8 samples, 0.01%)</title><rect x="4.7636%" y="645" width="0.0107%" height="15" fill="rgb(240,179,47)" fg:x="3550" fg:w="8"/><text x="5.0136%" y="655.50"></text></g><g><title>`0x7FF84735E3F0 (13 samples, 0.02%)</title><rect x="4.7784%" y="501" width="0.0174%" height="15" fill="rgb(240,163,11)" fg:x="3561" fg:w="13"/><text x="5.0284%" y="511.50"></text></g><g><title>`0x7FF84817F702 (12 samples, 0.02%)</title><rect x="4.7797%" y="485" width="0.0161%" height="15" fill="rgb(236,37,12)" fg:x="3562" fg:w="12"/><text x="5.0297%" y="495.50"></text></g><g><title>`0x7FF8481A9F29 (12 samples, 0.02%)</title><rect x="4.7797%" y="469" width="0.0161%" height="15" fill="rgb(232,164,16)" fg:x="3562" fg:w="12"/><text x="5.0297%" y="479.50"></text></g><g><title>`0x7FF853689D46 (477 samples, 0.64%)</title><rect x="4.1652%" y="725" width="0.6401%" height="15" fill="rgb(244,205,15)" fg:x="3104" fg:w="477"/><text x="4.4152%" y="735.50"></text></g><g><title>`0x7FF8536873C4 (477 samples, 0.64%)</title><rect x="4.1652%" y="709" width="0.6401%" height="15" fill="rgb(223,117,47)" fg:x="3104" fg:w="477"/><text x="4.4152%" y="719.50"></text></g><g><title>`0x7FF853686B53 (277 samples, 0.37%)</title><rect x="4.4335%" y="693" width="0.3717%" height="15" fill="rgb(244,107,35)" fg:x="3304" fg:w="277"/><text x="4.6835%" y="703.50"></text></g><g><title>`0x7FF853694A2D (277 samples, 0.37%)</title><rect x="4.4335%" y="677" width="0.3717%" height="15" fill="rgb(205,140,8)" fg:x="3304" fg:w="277"/><text x="4.6835%" y="687.50"></text></g><g><title>`0x7FF85368FB5C (23 samples, 0.03%)</title><rect x="4.7744%" y="661" width="0.0309%" height="15" fill="rgb(228,84,46)" fg:x="3558" fg:w="23"/><text x="5.0244%" y="671.50"></text></g><g><title>`0x7FF85BBC28E6 (23 samples, 0.03%)</title><rect x="4.7744%" y="645" width="0.0309%" height="15" fill="rgb(254,188,9)" fg:x="3558" fg:w="23"/><text x="5.0244%" y="655.50"></text></g><g><title>`0x7FF85EAB5D80 (23 samples, 0.03%)</title><rect x="4.7744%" y="629" width="0.0309%" height="15" fill="rgb(206,112,54)" fg:x="3558" fg:w="23"/><text x="5.0244%" y="639.50"></text></g><g><title>`0x7FF85EA684E0 (23 samples, 0.03%)</title><rect x="4.7744%" y="613" width="0.0309%" height="15" fill="rgb(216,84,49)" fg:x="3558" fg:w="23"/><text x="5.0244%" y="623.50"></text></g><g><title>`0x7FF85EA688D4 (20 samples, 0.03%)</title><rect x="4.7784%" y="597" width="0.0268%" height="15" fill="rgb(214,194,35)" fg:x="3561" fg:w="20"/><text x="5.0284%" y="607.50"></text></g><g><title>`0x7FF85EA9AE03 (20 samples, 0.03%)</title><rect x="4.7784%" y="581" width="0.0268%" height="15" fill="rgb(249,28,3)" fg:x="3561" fg:w="20"/><text x="5.0284%" y="591.50"></text></g><g><title>`0x7FF85EA9BC7A (20 samples, 0.03%)</title><rect x="4.7784%" y="565" width="0.0268%" height="15" fill="rgb(222,56,52)" fg:x="3561" fg:w="20"/><text x="5.0284%" y="575.50"></text></g><g><title>`0x7FF85EAD193C (20 samples, 0.03%)</title><rect x="4.7784%" y="549" width="0.0268%" height="15" fill="rgb(245,217,50)" fg:x="3561" fg:w="20"/><text x="5.0284%" y="559.50"></text></g><g><title>`0x7FF85EAD2983 (20 samples, 0.03%)</title><rect x="4.7784%" y="533" width="0.0268%" height="15" fill="rgb(213,201,24)" fg:x="3561" fg:w="20"/><text x="5.0284%" y="543.50"></text></g><g><title>`0x7FF84735EF38 (20 samples, 0.03%)</title><rect x="4.7784%" y="517" width="0.0268%" height="15" fill="rgb(248,116,28)" fg:x="3561" fg:w="20"/><text x="5.0284%" y="527.50"></text></g><g><title>`0x7FFFDC2D0C30 (493 samples, 0.66%)</title><rect x="4.1558%" y="821" width="0.6615%" height="15" fill="rgb(219,72,43)" fg:x="3097" fg:w="493"/><text x="4.4058%" y="831.50"></text></g><g><title>`0x7FFFDC2CFDF8 (493 samples, 0.66%)</title><rect x="4.1558%" y="805" width="0.6615%" height="15" fill="rgb(209,138,14)" fg:x="3097" fg:w="493"/><text x="4.4058%" y="815.50"></text></g><g><title>`0x7FFFDC2CFFB1 (493 samples, 0.66%)</title><rect x="4.1558%" y="789" width="0.6615%" height="15" fill="rgb(222,18,33)" fg:x="3097" fg:w="493"/><text x="4.4058%" y="799.50"></text></g><g><title>`0x7FFFDC30C813 (493 samples, 0.66%)</title><rect x="4.1558%" y="773" width="0.6615%" height="15" fill="rgb(213,199,7)" fg:x="3097" fg:w="493"/><text x="4.4058%" y="783.50"></text></g><g><title>`0x7FFFDC2B57BA (486 samples, 0.65%)</title><rect x="4.1652%" y="757" width="0.6521%" height="15" fill="rgb(250,110,10)" fg:x="3104" fg:w="486"/><text x="4.4152%" y="767.50"></text></g><g><title>`0x7FFFDC2B5BB7 (486 samples, 0.65%)</title><rect x="4.1652%" y="741" width="0.6521%" height="15" fill="rgb(248,123,6)" fg:x="3104" fg:w="486"/><text x="4.4152%" y="751.50"></text></g><g><title>`0x7FF853689D5D (9 samples, 0.01%)</title><rect x="4.8052%" y="725" width="0.0121%" height="15" fill="rgb(206,91,31)" fg:x="3581" fg:w="9"/><text x="5.0552%" y="735.50"></text></g><g><title>`0x7FF847A42B9B (9 samples, 0.01%)</title><rect x="4.8052%" y="709" width="0.0121%" height="15" fill="rgb(211,154,13)" fg:x="3581" fg:w="9"/><text x="5.0552%" y="719.50"></text></g><g><title>`0x7FF8473AEF91 (10 samples, 0.01%)</title><rect x="4.8240%" y="629" width="0.0134%" height="15" fill="rgb(225,148,7)" fg:x="3595" fg:w="10"/><text x="5.0740%" y="639.50"></text></g><g><title>`0x7FF8473B10F0 (10 samples, 0.01%)</title><rect x="4.8240%" y="613" width="0.0134%" height="15" fill="rgb(220,160,43)" fg:x="3595" fg:w="10"/><text x="5.0740%" y="623.50"></text></g><g><title>`0x7FF8473AF33F (12 samples, 0.02%)</title><rect x="4.8509%" y="629" width="0.0161%" height="15" fill="rgb(213,52,39)" fg:x="3615" fg:w="12"/><text x="5.1009%" y="639.50"></text></g><g><title>`0x7FF8474E1288 (12 samples, 0.02%)</title><rect x="4.8509%" y="613" width="0.0161%" height="15" fill="rgb(243,137,7)" fg:x="3615" fg:w="12"/><text x="5.1009%" y="623.50"></text></g><g><title>`0x7FF847714E48 (12 samples, 0.02%)</title><rect x="4.8509%" y="597" width="0.0161%" height="15" fill="rgb(230,79,13)" fg:x="3615" fg:w="12"/><text x="5.1009%" y="607.50"></text></g><g><title>`0x7FF84775310B (15 samples, 0.02%)</title><rect x="4.8884%" y="613" width="0.0201%" height="15" fill="rgb(247,105,23)" fg:x="3643" fg:w="15"/><text x="5.1384%" y="623.50"></text></g><g><title>`0x7FF847A242E5 (10 samples, 0.01%)</title><rect x="4.8951%" y="597" width="0.0134%" height="15" fill="rgb(223,179,41)" fg:x="3648" fg:w="10"/><text x="5.1451%" y="607.50"></text></g><g><title>`0x7FF847A23AE4 (10 samples, 0.01%)</title><rect x="4.8951%" y="581" width="0.0134%" height="15" fill="rgb(218,9,34)" fg:x="3648" fg:w="10"/><text x="5.1451%" y="591.50"></text></g><g><title>`0x7FF84767EFFB (10 samples, 0.01%)</title><rect x="4.8951%" y="565" width="0.0134%" height="15" fill="rgb(222,106,8)" fg:x="3648" fg:w="10"/><text x="5.1451%" y="575.50"></text></g><g><title>`0x7FF847624A69 (10 samples, 0.01%)</title><rect x="4.8951%" y="549" width="0.0134%" height="15" fill="rgb(211,220,0)" fg:x="3648" fg:w="10"/><text x="5.1451%" y="559.50"></text></g><g><title>`0x7FF8474AA025 (10 samples, 0.01%)</title><rect x="4.8951%" y="533" width="0.0134%" height="15" fill="rgb(229,52,16)" fg:x="3648" fg:w="10"/><text x="5.1451%" y="543.50"></text></g><g><title>`0x7FF847680EA3 (10 samples, 0.01%)</title><rect x="4.8951%" y="517" width="0.0134%" height="15" fill="rgb(212,155,18)" fg:x="3648" fg:w="10"/><text x="5.1451%" y="527.50"></text></g><g><title>`0x7FF847C40045 (10 samples, 0.01%)</title><rect x="4.8951%" y="501" width="0.0134%" height="15" fill="rgb(242,21,14)" fg:x="3648" fg:w="10"/><text x="5.1451%" y="511.50"></text></g><g><title>`0x7FF847C3FB7D (10 samples, 0.01%)</title><rect x="4.8951%" y="485" width="0.0134%" height="15" fill="rgb(222,19,48)" fg:x="3648" fg:w="10"/><text x="5.1451%" y="495.50"></text></g><g><title>`0x7FF847C51433 (10 samples, 0.01%)</title><rect x="4.8951%" y="469" width="0.0134%" height="15" fill="rgb(232,45,27)" fg:x="3648" fg:w="10"/><text x="5.1451%" y="479.50"></text></g><g><title>`0x7FF847D4C522 (10 samples, 0.01%)</title><rect x="4.8951%" y="453" width="0.0134%" height="15" fill="rgb(249,103,42)" fg:x="3648" fg:w="10"/><text x="5.1451%" y="463.50"></text></g><g><title>`0x7FF8473AF7CC (32 samples, 0.04%)</title><rect x="4.8683%" y="629" width="0.0429%" height="15" fill="rgb(246,81,33)" fg:x="3628" fg:w="32"/><text x="5.1183%" y="639.50"></text></g><g><title>`0x7FF8474F8951 (11 samples, 0.01%)</title><rect x="4.9193%" y="549" width="0.0148%" height="15" fill="rgb(252,33,42)" fg:x="3666" fg:w="11"/><text x="5.1693%" y="559.50"></text></g><g><title>`0x7FF85C3346F5 (11 samples, 0.01%)</title><rect x="4.9193%" y="533" width="0.0148%" height="15" fill="rgb(209,212,41)" fg:x="3666" fg:w="11"/><text x="5.1693%" y="543.50"></text></g><g><title>`0x7FF85C332B1F (11 samples, 0.01%)</title><rect x="4.9193%" y="517" width="0.0148%" height="15" fill="rgb(207,154,6)" fg:x="3666" fg:w="11"/><text x="5.1693%" y="527.50"></text></g><g><title>`0x7FF85C33351F (10 samples, 0.01%)</title><rect x="4.9206%" y="501" width="0.0134%" height="15" fill="rgb(223,64,47)" fg:x="3667" fg:w="10"/><text x="5.1706%" y="511.50"></text></g><g><title>`0x7FF85C3342F9 (10 samples, 0.01%)</title><rect x="4.9206%" y="485" width="0.0134%" height="15" fill="rgb(211,161,38)" fg:x="3667" fg:w="10"/><text x="5.1706%" y="495.50"></text></g><g><title>`0x7FF85C7501DA (10 samples, 0.01%)</title><rect x="4.9206%" y="469" width="0.0134%" height="15" fill="rgb(219,138,40)" fg:x="3667" fg:w="10"/><text x="5.1706%" y="479.50"></text></g><g><title>`0x7FF85C76239B (10 samples, 0.01%)</title><rect x="4.9206%" y="453" width="0.0134%" height="15" fill="rgb(241,228,46)" fg:x="3667" fg:w="10"/><text x="5.1706%" y="463.50"></text></g><g><title>`0x7FF85C76564D (10 samples, 0.01%)</title><rect x="4.9206%" y="437" width="0.0134%" height="15" fill="rgb(223,209,38)" fg:x="3667" fg:w="10"/><text x="5.1706%" y="447.50"></text></g><g><title>`0x7FF85DCD15A6 (10 samples, 0.01%)</title><rect x="4.9206%" y="421" width="0.0134%" height="15" fill="rgb(236,164,45)" fg:x="3667" fg:w="10"/><text x="5.1706%" y="431.50"></text></g><g><title>`0x7FF85DCD1B79 (10 samples, 0.01%)</title><rect x="4.9206%" y="405" width="0.0134%" height="15" fill="rgb(231,15,5)" fg:x="3667" fg:w="10"/><text x="5.1706%" y="415.50"></text></g><g><title>`0x7FF85DCD2073 (10 samples, 0.01%)</title><rect x="4.9206%" y="389" width="0.0134%" height="15" fill="rgb(252,35,15)" fg:x="3667" fg:w="10"/><text x="5.1706%" y="399.50"></text></g><g><title>`0x7FF8473AFCE5 (15 samples, 0.02%)</title><rect x="4.9153%" y="629" width="0.0201%" height="15" fill="rgb(248,181,18)" fg:x="3663" fg:w="15"/><text x="5.1653%" y="639.50"></text></g><g><title>`0x7FF84741F72A (13 samples, 0.02%)</title><rect x="4.9179%" y="613" width="0.0174%" height="15" fill="rgb(233,39,42)" fg:x="3665" fg:w="13"/><text x="5.1679%" y="623.50"></text></g><g><title>`0x7FF847500BD9 (13 samples, 0.02%)</title><rect x="4.9179%" y="597" width="0.0174%" height="15" fill="rgb(238,110,33)" fg:x="3665" fg:w="13"/><text x="5.1679%" y="607.50"></text></g><g><title>`0x7FF847694944 (12 samples, 0.02%)</title><rect x="4.9193%" y="581" width="0.0161%" height="15" fill="rgb(233,195,10)" fg:x="3666" fg:w="12"/><text x="5.1693%" y="591.50"></text></g><g><title>`0x7FF8474F7DFB (12 samples, 0.02%)</title><rect x="4.9193%" y="565" width="0.0161%" height="15" fill="rgb(254,105,3)" fg:x="3666" fg:w="12"/><text x="5.1693%" y="575.50"></text></g><g><title>`0x7FF8473B04A6 (24 samples, 0.03%)</title><rect x="4.9367%" y="629" width="0.0322%" height="15" fill="rgb(221,225,9)" fg:x="3679" fg:w="24"/><text x="5.1867%" y="639.50"></text></g><g><title>`0x7FF84774F1A2 (24 samples, 0.03%)</title><rect x="4.9367%" y="613" width="0.0322%" height="15" fill="rgb(224,227,45)" fg:x="3679" fg:w="24"/><text x="5.1867%" y="623.50"></text></g><g><title>`0x7FF84740BBCA (24 samples, 0.03%)</title><rect x="4.9367%" y="597" width="0.0322%" height="15" fill="rgb(229,198,43)" fg:x="3679" fg:w="24"/><text x="5.1867%" y="607.50"></text></g><g><title>`0x7FFFDC320CA5 (113 samples, 0.15%)</title><rect x="4.8186%" y="725" width="0.1516%" height="15" fill="rgb(206,209,35)" fg:x="3591" fg:w="113"/><text x="5.0686%" y="735.50"></text></g><g><title>`0x7FFFDC309D1E (112 samples, 0.15%)</title><rect x="4.8200%" y="709" width="0.1503%" height="15" fill="rgb(245,195,53)" fg:x="3592" fg:w="112"/><text x="5.0700%" y="719.50"></text></g><g><title>`0x7FF847A71456 (112 samples, 0.15%)</title><rect x="4.8200%" y="693" width="0.1503%" height="15" fill="rgb(240,92,26)" fg:x="3592" fg:w="112"/><text x="5.0700%" y="703.50"></text></g><g><title>`0x7FF847A70D9D (112 samples, 0.15%)</title><rect x="4.8200%" y="677" width="0.1503%" height="15" fill="rgb(207,40,23)" fg:x="3592" fg:w="112"/><text x="5.0700%" y="687.50"></text></g><g><title>`0x7FF847715309 (112 samples, 0.15%)</title><rect x="4.8200%" y="661" width="0.1503%" height="15" fill="rgb(223,111,35)" fg:x="3592" fg:w="112"/><text x="5.0700%" y="671.50"></text></g><g><title>`0x7FF8474E6B2C (112 samples, 0.15%)</title><rect x="4.8200%" y="645" width="0.1503%" height="15" fill="rgb(229,147,28)" fg:x="3592" fg:w="112"/><text x="5.0700%" y="655.50"></text></g><g><title>`0x7FFFDC322CCB (15 samples, 0.02%)</title><rect x="4.9743%" y="725" width="0.0201%" height="15" fill="rgb(211,29,28)" fg:x="3707" fg:w="15"/><text x="5.2243%" y="735.50"></text></g><g><title>`0x7FFFD8648637 (630 samples, 0.85%)</title><rect x="4.1504%" y="901" width="0.8454%" height="15" fill="rgb(228,72,33)" fg:x="3093" fg:w="630"/><text x="4.4004%" y="911.50"></text></g><g><title>`0x7FF82E8C8B0B (630 samples, 0.85%)</title><rect x="4.1504%" y="885" width="0.8454%" height="15" fill="rgb(205,214,31)" fg:x="3093" fg:w="630"/><text x="4.4004%" y="895.50"></text></g><g><title>`0x7FF82E8C69D3 (630 samples, 0.85%)</title><rect x="4.1504%" y="869" width="0.8454%" height="15" fill="rgb(224,111,15)" fg:x="3093" fg:w="630"/><text x="4.4004%" y="879.50"></text></g><g><title>`0x7FFFDC3133C8 (630 samples, 0.85%)</title><rect x="4.1504%" y="853" width="0.8454%" height="15" fill="rgb(253,21,26)" fg:x="3093" fg:w="630"/><text x="4.4004%" y="863.50"></text></g><g><title>`0x7FFFDC3135A5 (630 samples, 0.85%)</title><rect x="4.1504%" y="837" width="0.8454%" height="15" fill="rgb(245,139,43)" fg:x="3093" fg:w="630"/><text x="4.4004%" y="847.50"></text></g><g><title>`0x7FFFDC2D12ED (133 samples, 0.18%)</title><rect x="4.8173%" y="821" width="0.1785%" height="15" fill="rgb(252,170,7)" fg:x="3590" fg:w="133"/><text x="5.0673%" y="831.50"></text></g><g><title>`0x7FFFDC2D25C2 (133 samples, 0.18%)</title><rect x="4.8173%" y="805" width="0.1785%" height="15" fill="rgb(231,118,14)" fg:x="3590" fg:w="133"/><text x="5.0673%" y="815.50"></text></g><g><title>`0x7FF82E8C1C6B (133 samples, 0.18%)</title><rect x="4.8173%" y="789" width="0.1785%" height="15" fill="rgb(238,83,0)" fg:x="3590" fg:w="133"/><text x="5.0673%" y="799.50"></text></g><g><title>`0x7FF82E8C1DDA (133 samples, 0.18%)</title><rect x="4.8173%" y="773" width="0.1785%" height="15" fill="rgb(221,39,39)" fg:x="3590" fg:w="133"/><text x="5.0673%" y="783.50"></text></g><g><title>`0x7FF82E8C1F98 (132 samples, 0.18%)</title><rect x="4.8186%" y="757" width="0.1771%" height="15" fill="rgb(222,119,46)" fg:x="3591" fg:w="132"/><text x="5.0686%" y="767.50"></text></g><g><title>`0x7FFFDC2B6B3A (132 samples, 0.18%)</title><rect x="4.8186%" y="741" width="0.1771%" height="15" fill="rgb(222,165,49)" fg:x="3591" fg:w="132"/><text x="5.0686%" y="751.50"></text></g><g><title>`0x7FFFD863DC5C (636 samples, 0.85%)</title><rect x="4.1464%" y="917" width="0.8534%" height="15" fill="rgb(219,113,52)" fg:x="3090" fg:w="636"/><text x="4.3964%" y="927.50"></text></g><g><title>`0x7FF85C332B1F (10 samples, 0.01%)</title><rect x="5.0038%" y="789" width="0.0134%" height="15" fill="rgb(214,7,15)" fg:x="3729" fg:w="10"/><text x="5.2538%" y="799.50"></text></g><g><title>`0x7FF85C33351F (10 samples, 0.01%)</title><rect x="5.0038%" y="773" width="0.0134%" height="15" fill="rgb(235,32,4)" fg:x="3729" fg:w="10"/><text x="5.2538%" y="783.50"></text></g><g><title>`0x7FF85C3342F9 (10 samples, 0.01%)</title><rect x="5.0038%" y="757" width="0.0134%" height="15" fill="rgb(238,90,54)" fg:x="3729" fg:w="10"/><text x="5.2538%" y="767.50"></text></g><g><title>`0x7FF85C7501DA (10 samples, 0.01%)</title><rect x="5.0038%" y="741" width="0.0134%" height="15" fill="rgb(213,208,19)" fg:x="3729" fg:w="10"/><text x="5.2538%" y="751.50"></text></g><g><title>`0x7FF85C76239B (10 samples, 0.01%)</title><rect x="5.0038%" y="725" width="0.0134%" height="15" fill="rgb(233,156,4)" fg:x="3729" fg:w="10"/><text x="5.2538%" y="735.50"></text></g><g><title>`0x7FF85C76564D (10 samples, 0.01%)</title><rect x="5.0038%" y="709" width="0.0134%" height="15" fill="rgb(207,194,5)" fg:x="3729" fg:w="10"/><text x="5.2538%" y="719.50"></text></g><g><title>`0x7FF85DCD15A6 (10 samples, 0.01%)</title><rect x="5.0038%" y="693" width="0.0134%" height="15" fill="rgb(206,111,30)" fg:x="3729" fg:w="10"/><text x="5.2538%" y="703.50"></text></g><g><title>`0x7FF85DCD1B79 (10 samples, 0.01%)</title><rect x="5.0038%" y="677" width="0.0134%" height="15" fill="rgb(243,70,54)" fg:x="3729" fg:w="10"/><text x="5.2538%" y="687.50"></text></g><g><title>`0x7FF85DCD2073 (10 samples, 0.01%)</title><rect x="5.0038%" y="661" width="0.0134%" height="15" fill="rgb(242,28,8)" fg:x="3729" fg:w="10"/><text x="5.2538%" y="671.50"></text></g><g><title>`0x7FFFD863EAD8 (12 samples, 0.02%)</title><rect x="5.0025%" y="885" width="0.0161%" height="15" fill="rgb(219,106,18)" fg:x="3728" fg:w="12"/><text x="5.2525%" y="895.50"></text></g><g><title>`0x7FFFD860EC6B (12 samples, 0.02%)</title><rect x="5.0025%" y="869" width="0.0161%" height="15" fill="rgb(244,222,10)" fg:x="3728" fg:w="12"/><text x="5.2525%" y="879.50"></text></g><g><title>`0x7FFFD8610334 (12 samples, 0.02%)</title><rect x="5.0025%" y="853" width="0.0161%" height="15" fill="rgb(236,179,52)" fg:x="3728" fg:w="12"/><text x="5.2525%" y="863.50"></text></g><g><title>`0x7FFFD888F168 (11 samples, 0.01%)</title><rect x="5.0038%" y="837" width="0.0148%" height="15" fill="rgb(213,23,39)" fg:x="3729" fg:w="11"/><text x="5.2538%" y="847.50"></text></g><g><title>`0x7FFFD888F519 (11 samples, 0.01%)</title><rect x="5.0038%" y="821" width="0.0148%" height="15" fill="rgb(238,48,10)" fg:x="3729" fg:w="11"/><text x="5.2538%" y="831.50"></text></g><g><title>`0x7FF85C3346F5 (11 samples, 0.01%)</title><rect x="5.0038%" y="805" width="0.0148%" height="15" fill="rgb(251,196,23)" fg:x="3729" fg:w="11"/><text x="5.2538%" y="815.50"></text></g><g><title>`0x7FF8473AEF91 (10 samples, 0.01%)</title><rect x="5.0240%" y="581" width="0.0134%" height="15" fill="rgb(250,152,24)" fg:x="3744" fg:w="10"/><text x="5.2740%" y="591.50"></text></g><g><title>`0x7FF8473B10F0 (10 samples, 0.01%)</title><rect x="5.0240%" y="565" width="0.0134%" height="15" fill="rgb(209,150,17)" fg:x="3744" fg:w="10"/><text x="5.2740%" y="575.50"></text></g><g><title>`0x7FF8473AF7CC (11 samples, 0.01%)</title><rect x="5.0441%" y="581" width="0.0148%" height="15" fill="rgb(234,202,34)" fg:x="3759" fg:w="11"/><text x="5.2941%" y="591.50"></text></g><g><title>`0x7FF847A0BA36 (38 samples, 0.05%)</title><rect x="5.0213%" y="629" width="0.0510%" height="15" fill="rgb(253,148,53)" fg:x="3742" fg:w="38"/><text x="5.2713%" y="639.50"></text></g><g><title>`0x7FF8479689B6 (38 samples, 0.05%)</title><rect x="5.0213%" y="613" width="0.0510%" height="15" fill="rgb(218,129,16)" fg:x="3742" fg:w="38"/><text x="5.2713%" y="623.50"></text></g><g><title>`0x7FF8474E6B2C (37 samples, 0.05%)</title><rect x="5.0226%" y="597" width="0.0496%" height="15" fill="rgb(216,85,19)" fg:x="3743" fg:w="37"/><text x="5.2726%" y="607.50"></text></g><g><title>`0x7FF847A69171 (40 samples, 0.05%)</title><rect x="5.0213%" y="725" width="0.0537%" height="15" fill="rgb(235,228,7)" fg:x="3742" fg:w="40"/><text x="5.2713%" y="735.50"></text></g><g><title>`0x7FF847A71EA0 (40 samples, 0.05%)</title><rect x="5.0213%" y="709" width="0.0537%" height="15" fill="rgb(245,175,0)" fg:x="3742" fg:w="40"/><text x="5.2713%" y="719.50"></text></g><g><title>`0x7FF8479736A5 (40 samples, 0.05%)</title><rect x="5.0213%" y="693" width="0.0537%" height="15" fill="rgb(208,168,36)" fg:x="3742" fg:w="40"/><text x="5.2713%" y="703.50"></text></g><g><title>`0x7FF847A53D7F (40 samples, 0.05%)</title><rect x="5.0213%" y="677" width="0.0537%" height="15" fill="rgb(246,171,24)" fg:x="3742" fg:w="40"/><text x="5.2713%" y="687.50"></text></g><g><title>`0x7FF847A4DC62 (40 samples, 0.05%)</title><rect x="5.0213%" y="661" width="0.0537%" height="15" fill="rgb(215,142,24)" fg:x="3742" fg:w="40"/><text x="5.2713%" y="671.50"></text></g><g><title>`0x7FF847A06655 (40 samples, 0.05%)</title><rect x="5.0213%" y="645" width="0.0537%" height="15" fill="rgb(250,187,7)" fg:x="3742" fg:w="40"/><text x="5.2713%" y="655.50"></text></g><g><title>`0x7FFFDC30B371 (44 samples, 0.06%)</title><rect x="5.0186%" y="837" width="0.0590%" height="15" fill="rgb(228,66,33)" fg:x="3740" fg:w="44"/><text x="5.2686%" y="847.50"></text></g><g><title>`0x7FF82E8C1697 (44 samples, 0.06%)</title><rect x="5.0186%" y="821" width="0.0590%" height="15" fill="rgb(234,215,21)" fg:x="3740" fg:w="44"/><text x="5.2686%" y="831.50"></text></g><g><title>`0x7FFFDC2F849B (44 samples, 0.06%)</title><rect x="5.0186%" y="805" width="0.0590%" height="15" fill="rgb(222,191,20)" fg:x="3740" fg:w="44"/><text x="5.2686%" y="815.50"></text></g><g><title>`0x7FFFDC2A62CE (44 samples, 0.06%)</title><rect x="5.0186%" y="789" width="0.0590%" height="15" fill="rgb(245,79,54)" fg:x="3740" fg:w="44"/><text x="5.2686%" y="799.50"></text></g><g><title>`0x7FFFDC2EBA2A (44 samples, 0.06%)</title><rect x="5.0186%" y="773" width="0.0590%" height="15" fill="rgb(240,10,37)" fg:x="3740" fg:w="44"/><text x="5.2686%" y="783.50"></text></g><g><title>`0x7FFFDC2EBD64 (44 samples, 0.06%)</title><rect x="5.0186%" y="757" width="0.0590%" height="15" fill="rgb(214,192,32)" fg:x="3740" fg:w="44"/><text x="5.2686%" y="767.50"></text></g><g><title>`0x7FFFDC349C25 (44 samples, 0.06%)</title><rect x="5.0186%" y="741" width="0.0590%" height="15" fill="rgb(209,36,54)" fg:x="3740" fg:w="44"/><text x="5.2686%" y="751.50"></text></g><g><title>`0x7FFFD86494AD (47 samples, 0.06%)</title><rect x="5.0186%" y="869" width="0.0631%" height="15" fill="rgb(220,10,11)" fg:x="3740" fg:w="47"/><text x="5.2686%" y="879.50"></text></g><g><title>`0x7FFFDC30B0DE (47 samples, 0.06%)</title><rect x="5.0186%" y="853" width="0.0631%" height="15" fill="rgb(221,106,17)" fg:x="3740" fg:w="47"/><text x="5.2686%" y="863.50"></text></g><g><title>`0x7FF85900F822 (8 samples, 0.01%)</title><rect x="5.0830%" y="773" width="0.0107%" height="15" fill="rgb(251,142,44)" fg:x="3788" fg:w="8"/><text x="5.3330%" y="783.50"></text></g><g><title>`0x7FF85902321C (18 samples, 0.02%)</title><rect x="5.0817%" y="837" width="0.0242%" height="15" fill="rgb(238,13,15)" fg:x="3787" fg:w="18"/><text x="5.3317%" y="847.50"></text></g><g><title>`0x7FF8590244B3 (18 samples, 0.02%)</title><rect x="5.0817%" y="821" width="0.0242%" height="15" fill="rgb(208,107,27)" fg:x="3787" fg:w="18"/><text x="5.3317%" y="831.50"></text></g><g><title>`0x7FF85900D236 (18 samples, 0.02%)</title><rect x="5.0817%" y="805" width="0.0242%" height="15" fill="rgb(205,136,37)" fg:x="3787" fg:w="18"/><text x="5.3317%" y="815.50"></text></g><g><title>`0x7FF85900D31E (17 samples, 0.02%)</title><rect x="5.0830%" y="789" width="0.0228%" height="15" fill="rgb(250,205,27)" fg:x="3788" fg:w="17"/><text x="5.3330%" y="799.50"></text></g><g><title>`0x7FF8590236F4 (19 samples, 0.03%)</title><rect x="5.0817%" y="853" width="0.0255%" height="15" fill="rgb(210,80,43)" fg:x="3787" fg:w="19"/><text x="5.3317%" y="863.50"></text></g><g><title>`0x7FFFD8649536 (20 samples, 0.03%)</title><rect x="5.0817%" y="869" width="0.0268%" height="15" fill="rgb(247,160,36)" fg:x="3787" fg:w="20"/><text x="5.3317%" y="879.50"></text></g><g><title>`0x7FFFD863EDF2 (68 samples, 0.09%)</title><rect x="5.0186%" y="885" width="0.0912%" height="15" fill="rgb(234,13,49)" fg:x="3740" fg:w="68"/><text x="5.2686%" y="895.50"></text></g><g><title>`0x7FF82F43DE1D (723 samples, 0.97%)</title><rect x="4.1464%" y="949" width="0.9702%" height="15" fill="rgb(234,122,0)" fg:x="3090" fg:w="723"/><text x="4.3964%" y="959.50"></text></g><g><title>`0x7FF813C57E32 (723 samples, 0.97%)</title><rect x="4.1464%" y="933" width="0.9702%" height="15" fill="rgb(207,146,38)" fg:x="3090" fg:w="723"/><text x="4.3964%" y="943.50"></text></g><g><title>`0x7FFFD863DC71 (87 samples, 0.12%)</title><rect x="4.9998%" y="917" width="0.1167%" height="15" fill="rgb(207,177,25)" fg:x="3726" fg:w="87"/><text x="5.2498%" y="927.50"></text></g><g><title>`0x7FFFD8646F0B (85 samples, 0.11%)</title><rect x="5.0025%" y="901" width="0.1141%" height="15" fill="rgb(211,178,42)" fg:x="3728" fg:w="85"/><text x="5.2525%" y="911.50"></text></g><g><title>gbemu.exe`pixels::Pixels::reconfigure_surface (736 samples, 0.99%)</title><rect x="4.1303%" y="1077" width="0.9876%" height="15" fill="rgb(230,69,54)" fg:x="3078" fg:w="736"/><text x="4.3803%" y="1087.50"></text></g><g><title>gbemu.exe`wgpu::Surface::configure(wgpu::Device*, wgpu_types::SurfaceConfiguration&lt;alloc::vec::Vec&lt;enum2$ (736 samples, 0.99%)</title><rect x="4.1303%" y="1061" width="0.9876%" height="15" fill="rgb(214,135,41)" fg:x="3078" fg:w="736"/><text x="4.3803%" y="1071.50"></text></g><g><title>gbemu.exe`wgpu::context::impl$5::surface_configure&lt;wgpu::backend::wgpu_core::ContextWgpuCore&gt;(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu::context::ObjectId*, ref$&lt;dyn$&lt;core::any::Any,core::marker::Send,core::marker::Sync&gt; &gt;, wgpu::context::ObjectId*, ref$&lt;dyn$&lt;core::any::Any,core::marker::Send,core::marker::Sync&gt; &gt;, wgpu_types::SurfaceConfiguration&lt;alloc::vec::Vec&lt;enum2$ (736 samples, 0.99%)</title><rect x="4.1303%" y="1045" width="0.9876%" height="15" fill="rgb(237,67,25)" fg:x="3078" fg:w="736"/><text x="4.3803%" y="1055.50"></text></g><g><title>gbemu.exe`wgpu::backend::wgpu_core::impl$7::surface_configure(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;*, wgpu::backend::wgpu_core::Surface*, wgpu_core::id::Id&lt;wgpu_core::device::resource::Device&lt;wgpu_hal::empty::Api&gt; &gt;*, wgpu::backend::wgpu_core::Device*, wgpu_types::SurfaceConfiguration&lt;alloc::vec::Vec&lt;enum2$ (736 samples, 0.99%)</title><rect x="4.1303%" y="1029" width="0.9876%" height="15" fill="rgb(222,189,50)" fg:x="3078" fg:w="736"/><text x="4.3803%" y="1039.50"></text></g><g><title>gbemu.exe`wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;::surface_configure&lt;wgpu_core::identity::IdentityManagerFactory,wgpu_hal::vulkan::Api&gt;(wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;, wgpu_core::id::Id&lt;wgpu_core::device::resource::Device&lt;wgpu_hal::empty::Api&gt; &gt;, wgpu_types::SurfaceConfiguration&lt;alloc::vec::Vec&lt;enum2$ (736 samples, 0.99%)</title><rect x="4.1303%" y="1013" width="0.9876%" height="15" fill="rgb(245,148,34)" fg:x="3078" fg:w="736"/><text x="4.3803%" y="1023.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::instance::impl$6::configure (724 samples, 0.97%)</title><rect x="4.1464%" y="997" width="0.9715%" height="15" fill="rgb(222,29,6)" fg:x="3090" fg:w="724"/><text x="4.3964%" y="1007.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::Device::create_swapchain(wgpu_hal::vulkan::Surface*, wgpu_hal::SurfaceConfiguration*, enum2$&lt;core::option::Option (724 samples, 0.97%)</title><rect x="4.1464%" y="981" width="0.9715%" height="15" fill="rgb(221,189,43)" fg:x="3090" fg:w="724"/><text x="4.3964%" y="991.50"></text></g><g><title>gbemu.exe`ash::extensions::khr::swapchain::Swapchain::create_swapchain(ash::vk::definitions::SwapchainCreateInfoKHR*, enum2$&lt;core::option::Option&lt;ref$ (724 samples, 0.97%)</title><rect x="4.1464%" y="965" width="0.9715%" height="15" fill="rgb(207,36,27)" fg:x="3090" fg:w="724"/><text x="4.3964%" y="975.50"></text></g><g><title>`0x7FFFD8324436 (13 samples, 0.02%)</title><rect x="5.1380%" y="693" width="0.0174%" height="15" fill="rgb(217,90,24)" fg:x="3829" fg:w="13"/><text x="5.3880%" y="703.50"></text></g><g><title>`0x7FFFD832866B (8 samples, 0.01%)</title><rect x="5.1447%" y="677" width="0.0107%" height="15" fill="rgb(224,66,35)" fg:x="3834" fg:w="8"/><text x="5.3947%" y="687.50"></text></g><g><title>`0x7FFFD82C35EE (8 samples, 0.01%)</title><rect x="5.1742%" y="581" width="0.0107%" height="15" fill="rgb(221,13,50)" fg:x="3856" fg:w="8"/><text x="5.4242%" y="591.50"></text></g><g><title>`0x7FFFD82BE9C4 (8 samples, 0.01%)</title><rect x="5.1742%" y="565" width="0.0107%" height="15" fill="rgb(236,68,49)" fg:x="3856" fg:w="8"/><text x="5.4242%" y="575.50"></text></g><g><title>`0x7FF85C7D5044 (8 samples, 0.01%)</title><rect x="5.1742%" y="549" width="0.0107%" height="15" fill="rgb(229,146,28)" fg:x="3856" fg:w="8"/><text x="5.4242%" y="559.50"></text></g><g><title>`0x7FFFD82C390E (9 samples, 0.01%)</title><rect x="5.1742%" y="597" width="0.0121%" height="15" fill="rgb(225,31,38)" fg:x="3856" fg:w="9"/><text x="5.4242%" y="607.50"></text></g><g><title>`0x7FFFD83E674B (32 samples, 0.04%)</title><rect x="5.1742%" y="613" width="0.0429%" height="15" fill="rgb(250,208,3)" fg:x="3856" fg:w="32"/><text x="5.4242%" y="623.50"></text></g><g><title>`0x7FFFD82C3976 (23 samples, 0.03%)</title><rect x="5.1863%" y="597" width="0.0309%" height="15" fill="rgb(246,54,23)" fg:x="3865" fg:w="23"/><text x="5.4363%" y="607.50"></text></g><g><title>`0x7FFFD82BE82C (23 samples, 0.03%)</title><rect x="5.1863%" y="581" width="0.0309%" height="15" fill="rgb(243,76,11)" fg:x="3865" fg:w="23"/><text x="5.4363%" y="591.50"></text></g><g><title>`0x7FFFD82BE43E (23 samples, 0.03%)</title><rect x="5.1863%" y="565" width="0.0309%" height="15" fill="rgb(245,21,50)" fg:x="3865" fg:w="23"/><text x="5.4363%" y="575.50"></text></g><g><title>`0x7FF85C7D4EE4 (23 samples, 0.03%)</title><rect x="5.1863%" y="549" width="0.0309%" height="15" fill="rgb(228,9,43)" fg:x="3865" fg:w="23"/><text x="5.4363%" y="559.50"></text></g><g><title>`0x7FFFD83251F0 (41 samples, 0.06%)</title><rect x="5.1662%" y="693" width="0.0550%" height="15" fill="rgb(208,100,47)" fg:x="3850" fg:w="41"/><text x="5.4162%" y="703.50"></text></g><g><title>`0x7FFFD8445B11 (39 samples, 0.05%)</title><rect x="5.1689%" y="677" width="0.0523%" height="15" fill="rgb(232,26,8)" fg:x="3852" fg:w="39"/><text x="5.4189%" y="687.50"></text></g><g><title>`0x7FFFD8449582 (39 samples, 0.05%)</title><rect x="5.1689%" y="661" width="0.0523%" height="15" fill="rgb(216,166,38)" fg:x="3852" fg:w="39"/><text x="5.4189%" y="671.50"></text></g><g><title>`0x7FFFD83687E7 (38 samples, 0.05%)</title><rect x="5.1702%" y="645" width="0.0510%" height="15" fill="rgb(251,202,51)" fg:x="3853" fg:w="38"/><text x="5.4202%" y="655.50"></text></g><g><title>`0x7FFFD83ED41B (35 samples, 0.05%)</title><rect x="5.1742%" y="629" width="0.0470%" height="15" fill="rgb(254,216,34)" fg:x="3856" fg:w="35"/><text x="5.4242%" y="639.50"></text></g><g><title>`0x7FFFD826769E (69 samples, 0.09%)</title><rect x="5.1380%" y="741" width="0.0926%" height="15" fill="rgb(251,32,27)" fg:x="3829" fg:w="69"/><text x="5.3880%" y="751.50"></text></g><g><title>`0x7FFFD83062E3 (69 samples, 0.09%)</title><rect x="5.1380%" y="725" width="0.0926%" height="15" fill="rgb(208,127,28)" fg:x="3829" fg:w="69"/><text x="5.3880%" y="735.50"></text></g><g><title>`0x7FFFD8305467 (69 samples, 0.09%)</title><rect x="5.1380%" y="709" width="0.0926%" height="15" fill="rgb(224,137,22)" fg:x="3829" fg:w="69"/><text x="5.3880%" y="719.50"></text></g><g><title>`0x7FFFD82677DA (12 samples, 0.02%)</title><rect x="5.2306%" y="741" width="0.0161%" height="15" fill="rgb(254,70,32)" fg:x="3898" fg:w="12"/><text x="5.4806%" y="751.50"></text></g><g><title>`0x7FFFD826C68B (11 samples, 0.01%)</title><rect x="5.2319%" y="725" width="0.0148%" height="15" fill="rgb(229,75,37)" fg:x="3899" fg:w="11"/><text x="5.4819%" y="735.50"></text></g><g><title>`0x7FFFD8251DF8 (11 samples, 0.01%)</title><rect x="5.2319%" y="709" width="0.0148%" height="15" fill="rgb(252,64,23)" fg:x="3899" fg:w="11"/><text x="5.4819%" y="719.50"></text></g><g><title>`0x7FFFD826BECE (11 samples, 0.01%)</title><rect x="5.2319%" y="693" width="0.0148%" height="15" fill="rgb(232,162,48)" fg:x="3899" fg:w="11"/><text x="5.4819%" y="703.50"></text></g><g><title>`0x7FFFD8251D0D (11 samples, 0.01%)</title><rect x="5.2319%" y="677" width="0.0148%" height="15" fill="rgb(246,160,12)" fg:x="3899" fg:w="11"/><text x="5.4819%" y="687.50"></text></g><g><title>`0x7FFFD824FBD0 (11 samples, 0.01%)</title><rect x="5.2319%" y="661" width="0.0148%" height="15" fill="rgb(247,166,0)" fg:x="3899" fg:w="11"/><text x="5.4819%" y="671.50"></text></g><g><title>`0x7FFFD82661DD (86 samples, 0.12%)</title><rect x="5.1367%" y="757" width="0.1154%" height="15" fill="rgb(249,219,21)" fg:x="3828" fg:w="86"/><text x="5.3867%" y="767.50"></text></g><g><title>gbemu.exe`wgpu_hal::gles::wgl::WglContext::make_current(enum2$ (87 samples, 0.12%)</title><rect x="5.1367%" y="805" width="0.1167%" height="15" fill="rgb(205,209,3)" fg:x="3828" fg:w="87"/><text x="5.3867%" y="815.50"></text></g><g><title>`0x7FF832BD51CC (87 samples, 0.12%)</title><rect x="5.1367%" y="789" width="0.1167%" height="15" fill="rgb(243,44,1)" fg:x="3828" fg:w="87"/><text x="5.3867%" y="799.50"></text></g><g><title>`0x7FF832BD565D (87 samples, 0.12%)</title><rect x="5.1367%" y="773" width="0.1167%" height="15" fill="rgb(206,159,16)" fg:x="3828" fg:w="87"/><text x="5.3867%" y="783.50"></text></g><g><title>gbemu.exe`wgpu_hal::gles::wgl::impl$11::init (99 samples, 0.13%)</title><rect x="5.1219%" y="821" width="0.1328%" height="15" fill="rgb(244,77,30)" fg:x="3817" fg:w="99"/><text x="5.3719%" y="831.50"></text></g><g><title>`0x7FFFD83794CE (8 samples, 0.01%)</title><rect x="5.2735%" y="581" width="0.0107%" height="15" fill="rgb(218,69,12)" fg:x="3930" fg:w="8"/><text x="5.5235%" y="591.50"></text></g><g><title>`0x7FFFD8274099 (8 samples, 0.01%)</title><rect x="5.2735%" y="565" width="0.0107%" height="15" fill="rgb(212,87,7)" fg:x="3930" fg:w="8"/><text x="5.5235%" y="575.50"></text></g><g><title>`0x7FFFD82A0E3F (8 samples, 0.01%)</title><rect x="5.2735%" y="549" width="0.0107%" height="15" fill="rgb(245,114,25)" fg:x="3930" fg:w="8"/><text x="5.5235%" y="559.50"></text></g><g><title>`0x7FFFD82579C5 (10 samples, 0.01%)</title><rect x="5.2722%" y="613" width="0.0134%" height="15" fill="rgb(210,61,42)" fg:x="3929" fg:w="10"/><text x="5.5222%" y="623.50"></text></g><g><title>`0x7FFFD8345847 (9 samples, 0.01%)</title><rect x="5.2735%" y="597" width="0.0121%" height="15" fill="rgb(211,52,33)" fg:x="3930" fg:w="9"/><text x="5.5235%" y="607.50"></text></g><g><title>`0x7FFFD889121F (9 samples, 0.01%)</title><rect x="5.2883%" y="533" width="0.0121%" height="15" fill="rgb(234,58,33)" fg:x="3941" fg:w="9"/><text x="5.5383%" y="543.50"></text></g><g><title>`0x7FFFD8257A0B (18 samples, 0.02%)</title><rect x="5.2856%" y="613" width="0.0242%" height="15" fill="rgb(220,115,36)" fg:x="3939" fg:w="18"/><text x="5.5356%" y="623.50"></text></g><g><title>`0x7FFFD82A29D3 (17 samples, 0.02%)</title><rect x="5.2870%" y="597" width="0.0228%" height="15" fill="rgb(243,153,54)" fg:x="3940" fg:w="17"/><text x="5.5370%" y="607.50"></text></g><g><title>`0x7FFFD82A4CCC (17 samples, 0.02%)</title><rect x="5.2870%" y="581" width="0.0228%" height="15" fill="rgb(251,47,18)" fg:x="3940" fg:w="17"/><text x="5.5370%" y="591.50"></text></g><g><title>`0x7FFFD82A58C5 (17 samples, 0.02%)</title><rect x="5.2870%" y="565" width="0.0228%" height="15" fill="rgb(242,102,42)" fg:x="3940" fg:w="17"/><text x="5.5370%" y="575.50"></text></g><g><title>`0x7FFFD82A7DDD (17 samples, 0.02%)</title><rect x="5.2870%" y="549" width="0.0228%" height="15" fill="rgb(234,31,38)" fg:x="3940" fg:w="17"/><text x="5.5370%" y="559.50"></text></g><g><title>`0x7FFFD87276A0 (33 samples, 0.04%)</title><rect x="5.2682%" y="645" width="0.0443%" height="15" fill="rgb(221,117,51)" fg:x="3926" fg:w="33"/><text x="5.5182%" y="655.50"></text></g><g><title>`0x7FFFD8258948 (33 samples, 0.04%)</title><rect x="5.2682%" y="629" width="0.0443%" height="15" fill="rgb(212,20,18)" fg:x="3926" fg:w="33"/><text x="5.5182%" y="639.50"></text></g><g><title>`0x7FFFD8256ADA (14 samples, 0.02%)</title><rect x="5.3178%" y="517" width="0.0188%" height="15" fill="rgb(245,133,36)" fg:x="3963" fg:w="14"/><text x="5.5678%" y="527.50"></text></g><g><title>`0x7FFFD82834C6 (9 samples, 0.01%)</title><rect x="5.3245%" y="501" width="0.0121%" height="15" fill="rgb(212,6,19)" fg:x="3968" fg:w="9"/><text x="5.5745%" y="511.50"></text></g><g><title>`0x7FFFD8283C6E (9 samples, 0.01%)</title><rect x="5.3366%" y="485" width="0.0121%" height="15" fill="rgb(218,1,36)" fg:x="3977" fg:w="9"/><text x="5.5866%" y="495.50"></text></g><g><title>`0x7FFFD8256C24 (13 samples, 0.02%)</title><rect x="5.3366%" y="517" width="0.0174%" height="15" fill="rgb(246,84,54)" fg:x="3977" fg:w="13"/><text x="5.5866%" y="527.50"></text></g><g><title>`0x7FFFD82824B2 (13 samples, 0.02%)</title><rect x="5.3366%" y="501" width="0.0174%" height="15" fill="rgb(242,110,6)" fg:x="3977" fg:w="13"/><text x="5.5866%" y="511.50"></text></g><g><title>`0x7FFFD828B323 (10 samples, 0.01%)</title><rect x="5.3541%" y="485" width="0.0134%" height="15" fill="rgb(214,47,5)" fg:x="3990" fg:w="10"/><text x="5.6041%" y="495.50"></text></g><g><title>`0x7FFFD872B65B (45 samples, 0.06%)</title><rect x="5.3151%" y="597" width="0.0604%" height="15" fill="rgb(218,159,25)" fg:x="3961" fg:w="45"/><text x="5.5651%" y="607.50"></text></g><g><title>`0x7FFFD87272DE (45 samples, 0.06%)</title><rect x="5.3151%" y="581" width="0.0604%" height="15" fill="rgb(215,211,28)" fg:x="3961" fg:w="45"/><text x="5.5651%" y="591.50"></text></g><g><title>`0x7FFFD8642B6C (45 samples, 0.06%)</title><rect x="5.3151%" y="565" width="0.0604%" height="15" fill="rgb(238,59,32)" fg:x="3961" fg:w="45"/><text x="5.5651%" y="575.50"></text></g><g><title>`0x7FFFD8643806 (43 samples, 0.06%)</title><rect x="5.3178%" y="549" width="0.0577%" height="15" fill="rgb(226,82,3)" fg:x="3963" fg:w="43"/><text x="5.5678%" y="559.50"></text></g><g><title>`0x7FFFD8258443 (43 samples, 0.06%)</title><rect x="5.3178%" y="533" width="0.0577%" height="15" fill="rgb(240,164,32)" fg:x="3963" fg:w="43"/><text x="5.5678%" y="543.50"></text></g><g><title>`0x7FFFD8256C7A (16 samples, 0.02%)</title><rect x="5.3541%" y="517" width="0.0215%" height="15" fill="rgb(232,46,7)" fg:x="3990" fg:w="16"/><text x="5.6041%" y="527.50"></text></g><g><title>`0x7FFFD82C899D (16 samples, 0.02%)</title><rect x="5.3541%" y="501" width="0.0215%" height="15" fill="rgb(229,129,53)" fg:x="3990" fg:w="16"/><text x="5.6041%" y="511.50"></text></g><g><title>gbemu.exe`ash::entry::Entry::create_instance(ash::vk::definitions::InstanceCreateInfo*, enum2$&lt;core::option::Option&lt;ref$ (98 samples, 0.13%)</title><rect x="5.2548%" y="805" width="0.1315%" height="15" fill="rgb(234,188,29)" fg:x="3916" fg:w="98"/><text x="5.5048%" y="815.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result (98 samples, 0.13%)</title><rect x="5.2548%" y="789" width="0.1315%" height="15" fill="rgb(246,141,4)" fg:x="3916" fg:w="98"/><text x="5.5048%" y="799.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result_with_success(ash::vk::enums::Result, tuple$ (98 samples, 0.13%)</title><rect x="5.2548%" y="773" width="0.1315%" height="15" fill="rgb(229,23,39)" fg:x="3916" fg:w="98"/><text x="5.5048%" y="783.50"></text></g><g><title>`0x7FF813C51E88 (93 samples, 0.12%)</title><rect x="5.2615%" y="757" width="0.1248%" height="15" fill="rgb(206,12,3)" fg:x="3921" fg:w="93"/><text x="5.5115%" y="767.50"></text></g><g><title>`0x7FF813C30382 (88 samples, 0.12%)</title><rect x="5.2682%" y="741" width="0.1181%" height="15" fill="rgb(252,226,20)" fg:x="3926" fg:w="88"/><text x="5.5182%" y="751.50"></text></g><g><title>`0x7FFFD8604462 (88 samples, 0.12%)</title><rect x="5.2682%" y="725" width="0.1181%" height="15" fill="rgb(216,123,35)" fg:x="3926" fg:w="88"/><text x="5.5182%" y="735.50"></text></g><g><title>`0x7FFFD860A8DD (88 samples, 0.12%)</title><rect x="5.2682%" y="709" width="0.1181%" height="15" fill="rgb(212,68,40)" fg:x="3926" fg:w="88"/><text x="5.5182%" y="719.50"></text></g><g><title>`0x7FF82F43CB4B (88 samples, 0.12%)</title><rect x="5.2682%" y="693" width="0.1181%" height="15" fill="rgb(254,125,32)" fg:x="3926" fg:w="88"/><text x="5.5182%" y="703.50"></text></g><g><title>`0x7FF813C47D9D (88 samples, 0.12%)</title><rect x="5.2682%" y="677" width="0.1181%" height="15" fill="rgb(253,97,22)" fg:x="3926" fg:w="88"/><text x="5.5182%" y="687.50"></text></g><g><title>`0x7FFFD8726401 (88 samples, 0.12%)</title><rect x="5.2682%" y="661" width="0.1181%" height="15" fill="rgb(241,101,14)" fg:x="3926" fg:w="88"/><text x="5.5182%" y="671.50"></text></g><g><title>`0x7FFFD8727854 (54 samples, 0.07%)</title><rect x="5.3138%" y="645" width="0.0725%" height="15" fill="rgb(238,103,29)" fg:x="3960" fg:w="54"/><text x="5.5638%" y="655.50"></text></g><g><title>`0x7FFFD87267CC (54 samples, 0.07%)</title><rect x="5.3138%" y="629" width="0.0725%" height="15" fill="rgb(233,195,47)" fg:x="3960" fg:w="54"/><text x="5.5638%" y="639.50"></text></g><g><title>`0x7FFFD872A39F (54 samples, 0.07%)</title><rect x="5.3138%" y="613" width="0.0725%" height="15" fill="rgb(246,218,30)" fg:x="3960" fg:w="54"/><text x="5.5638%" y="623.50"></text></g><g><title>`0x7FFFD872B9C6 (8 samples, 0.01%)</title><rect x="5.3755%" y="597" width="0.0107%" height="15" fill="rgb(219,145,47)" fg:x="4006" fg:w="8"/><text x="5.6255%" y="607.50"></text></g><g><title>`0x7FFFD7D2ADCA (8 samples, 0.01%)</title><rect x="5.3755%" y="581" width="0.0107%" height="15" fill="rgb(243,12,26)" fg:x="4006" fg:w="8"/><text x="5.6255%" y="591.50"></text></g><g><title>`0x7FFFD7D2F11E (8 samples, 0.01%)</title><rect x="5.3755%" y="565" width="0.0107%" height="15" fill="rgb(214,87,16)" fg:x="4006" fg:w="8"/><text x="5.6255%" y="575.50"></text></g><g><title>`0x7FFFD7D2FF81 (8 samples, 0.01%)</title><rect x="5.3755%" y="549" width="0.0107%" height="15" fill="rgb(208,99,42)" fg:x="4006" fg:w="8"/><text x="5.6255%" y="559.50"></text></g><g><title>`0x7FF813C53CB0 (18 samples, 0.02%)</title><rect x="5.3863%" y="773" width="0.0242%" height="15" fill="rgb(253,99,2)" fg:x="4014" fg:w="18"/><text x="5.6363%" y="783.50"></text></g><g><title>`0x7FF85BC4EFF1 (18 samples, 0.02%)</title><rect x="5.3863%" y="757" width="0.0242%" height="15" fill="rgb(220,168,23)" fg:x="4014" fg:w="18"/><text x="5.6363%" y="767.50"></text></g><g><title>`0x7FF85EA96E75 (18 samples, 0.02%)</title><rect x="5.3863%" y="741" width="0.0242%" height="15" fill="rgb(242,38,24)" fg:x="4014" fg:w="18"/><text x="5.6363%" y="751.50"></text></g><g><title>`0x7FF813C39340 (18 samples, 0.02%)</title><rect x="5.3863%" y="725" width="0.0242%" height="15" fill="rgb(225,182,9)" fg:x="4014" fg:w="18"/><text x="5.6363%" y="735.50"></text></g><g><title>`0x7FF813C5CF88 (18 samples, 0.02%)</title><rect x="5.3863%" y="709" width="0.0242%" height="15" fill="rgb(243,178,37)" fg:x="4014" fg:w="18"/><text x="5.6363%" y="719.50"></text></g><g><title>`0x7FF85BBC28E6 (18 samples, 0.02%)</title><rect x="5.3863%" y="693" width="0.0242%" height="15" fill="rgb(232,139,19)" fg:x="4014" fg:w="18"/><text x="5.6363%" y="703.50"></text></g><g><title>`0x7FF85EAB5D80 (18 samples, 0.02%)</title><rect x="5.3863%" y="677" width="0.0242%" height="15" fill="rgb(225,201,24)" fg:x="4014" fg:w="18"/><text x="5.6363%" y="687.50"></text></g><g><title>`0x7FF85EA684E0 (18 samples, 0.02%)</title><rect x="5.3863%" y="661" width="0.0242%" height="15" fill="rgb(221,47,46)" fg:x="4014" fg:w="18"/><text x="5.6363%" y="671.50"></text></g><g><title>`0x7FF85EA688D4 (17 samples, 0.02%)</title><rect x="5.3876%" y="645" width="0.0228%" height="15" fill="rgb(249,23,13)" fg:x="4015" fg:w="17"/><text x="5.6376%" y="655.50"></text></g><g><title>`0x7FF85EA9AE03 (16 samples, 0.02%)</title><rect x="5.3889%" y="629" width="0.0215%" height="15" fill="rgb(219,9,5)" fg:x="4016" fg:w="16"/><text x="5.6389%" y="639.50"></text></g><g><title>`0x7FF85EA9BC7A (16 samples, 0.02%)</title><rect x="5.3889%" y="613" width="0.0215%" height="15" fill="rgb(254,171,16)" fg:x="4016" fg:w="16"/><text x="5.6389%" y="623.50"></text></g><g><title>`0x7FF85EAD193C (16 samples, 0.02%)</title><rect x="5.3889%" y="597" width="0.0215%" height="15" fill="rgb(230,171,20)" fg:x="4016" fg:w="16"/><text x="5.6389%" y="607.50"></text></g><g><title>`0x7FF85EAD2983 (16 samples, 0.02%)</title><rect x="5.3889%" y="581" width="0.0215%" height="15" fill="rgb(210,71,41)" fg:x="4016" fg:w="16"/><text x="5.6389%" y="591.50"></text></g><g><title>`0x7FF85905D13B (16 samples, 0.02%)</title><rect x="5.3889%" y="565" width="0.0215%" height="15" fill="rgb(206,173,20)" fg:x="4016" fg:w="16"/><text x="5.6389%" y="575.50"></text></g><g><title>`0x7FF85905CFC2 (16 samples, 0.02%)</title><rect x="5.3889%" y="549" width="0.0215%" height="15" fill="rgb(233,88,34)" fg:x="4016" fg:w="16"/><text x="5.6389%" y="559.50"></text></g><g><title>`0x7FF85C65E716 (16 samples, 0.02%)</title><rect x="5.3889%" y="533" width="0.0215%" height="15" fill="rgb(223,209,46)" fg:x="4016" fg:w="16"/><text x="5.6389%" y="543.50"></text></g><g><title>`0x7FF85904C7E9 (16 samples, 0.02%)</title><rect x="5.3889%" y="517" width="0.0215%" height="15" fill="rgb(250,43,18)" fg:x="4016" fg:w="16"/><text x="5.6389%" y="527.50"></text></g><g><title>`0x7FF85904CBD0 (16 samples, 0.02%)</title><rect x="5.3889%" y="501" width="0.0215%" height="15" fill="rgb(208,13,10)" fg:x="4016" fg:w="16"/><text x="5.6389%" y="511.50"></text></g><g><title>`0x7FF859055B03 (9 samples, 0.01%)</title><rect x="5.3983%" y="485" width="0.0121%" height="15" fill="rgb(212,200,36)" fg:x="4023" fg:w="9"/><text x="5.6483%" y="495.50"></text></g><g><title>`0x7FF8590556CD (9 samples, 0.01%)</title><rect x="5.3983%" y="469" width="0.0121%" height="15" fill="rgb(225,90,30)" fg:x="4023" fg:w="9"/><text x="5.6483%" y="479.50"></text></g><g><title>gbemu.exe`ash::entry::Entry::try_enumerate_instance_version (24 samples, 0.03%)</title><rect x="5.3863%" y="805" width="0.0322%" height="15" fill="rgb(236,182,39)" fg:x="4014" fg:w="24"/><text x="5.6363%" y="815.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result_with_success(ash::vk::enums::Result, enum2$&lt;core::option::Option (24 samples, 0.03%)</title><rect x="5.3863%" y="789" width="0.0322%" height="15" fill="rgb(212,144,35)" fg:x="4014" fg:w="24"/><text x="5.6363%" y="799.50"></text></g><g><title>`0x7FF85BBEA2C5 (9 samples, 0.01%)</title><rect x="5.4533%" y="85" width="0.0121%" height="15" fill="rgb(228,63,44)" fg:x="4064" fg:w="9"/><text x="5.7033%" y="95.50"></text></g><g><title>`0x7FF85EBC1D44 (9 samples, 0.01%)</title><rect x="5.4533%" y="69" width="0.0121%" height="15" fill="rgb(228,109,6)" fg:x="4064" fg:w="9"/><text x="5.7033%" y="79.50"></text></g><g><title>`0x7FF85BBEA612 (16 samples, 0.02%)</title><rect x="5.4708%" y="85" width="0.0215%" height="15" fill="rgb(238,117,24)" fg:x="4077" fg:w="16"/><text x="5.7208%" y="95.50"></text></g><g><title>`0x7FF85EBC1D44 (16 samples, 0.02%)</title><rect x="5.4708%" y="69" width="0.0215%" height="15" fill="rgb(242,26,26)" fg:x="4077" fg:w="16"/><text x="5.7208%" y="79.50"></text></g><g><title>`0x7FF85BBEA683 (8 samples, 0.01%)</title><rect x="5.4923%" y="85" width="0.0107%" height="15" fill="rgb(221,92,48)" fg:x="4093" fg:w="8"/><text x="5.7423%" y="95.50"></text></g><g><title>`0x7FF85EBC1DE4 (8 samples, 0.01%)</title><rect x="5.4923%" y="69" width="0.0107%" height="15" fill="rgb(209,209,32)" fg:x="4093" fg:w="8"/><text x="5.7423%" y="79.50"></text></g><g><title>`0x7FF85BBEA2C5 (12 samples, 0.02%)</title><rect x="5.5030%" y="53" width="0.0161%" height="15" fill="rgb(221,70,22)" fg:x="4101" fg:w="12"/><text x="5.7530%" y="63.50"></text></g><g><title>`0x7FF85EBC1D44 (12 samples, 0.02%)</title><rect x="5.5030%" y="37" width="0.0161%" height="15" fill="rgb(248,145,5)" fg:x="4101" fg:w="12"/><text x="5.7530%" y="47.50"></text></g><g><title>`0x7FF85BC1261E (60 samples, 0.08%)</title><rect x="5.4533%" y="117" width="0.0805%" height="15" fill="rgb(226,116,26)" fg:x="4064" fg:w="60"/><text x="5.7033%" y="127.50"></text></g><g><title>`0x7FF85BBFC776 (60 samples, 0.08%)</title><rect x="5.4533%" y="101" width="0.0805%" height="15" fill="rgb(244,5,17)" fg:x="4064" fg:w="60"/><text x="5.7033%" y="111.50"></text></g><g><title>`0x7FF85BBEADD7 (23 samples, 0.03%)</title><rect x="5.5030%" y="85" width="0.0309%" height="15" fill="rgb(252,159,33)" fg:x="4101" fg:w="23"/><text x="5.7530%" y="95.50"></text></g><g><title>`0x7FF85BBFC776 (23 samples, 0.03%)</title><rect x="5.5030%" y="69" width="0.0309%" height="15" fill="rgb(206,71,0)" fg:x="4101" fg:w="23"/><text x="5.7530%" y="79.50"></text></g><g><title>`0x7FFFD890F994 (62 samples, 0.08%)</title><rect x="5.4533%" y="149" width="0.0832%" height="15" fill="rgb(233,118,54)" fg:x="4064" fg:w="62"/><text x="5.7033%" y="159.50"></text></g><g><title>`0x7FFFD8906F82 (62 samples, 0.08%)</title><rect x="5.4533%" y="133" width="0.0832%" height="15" fill="rgb(234,83,48)" fg:x="4064" fg:w="62"/><text x="5.7033%" y="143.50"></text></g><g><title>`0x7FFFD890369F (67 samples, 0.09%)</title><rect x="5.4507%" y="261" width="0.0899%" height="15" fill="rgb(228,3,54)" fg:x="4062" fg:w="67"/><text x="5.7007%" y="271.50"></text></g><g><title>`0x7FFFD8902DE0 (67 samples, 0.09%)</title><rect x="5.4507%" y="245" width="0.0899%" height="15" fill="rgb(226,155,13)" fg:x="4062" fg:w="67"/><text x="5.7007%" y="255.50"></text></g><g><title>`0x7FFFD890FF51 (67 samples, 0.09%)</title><rect x="5.4507%" y="229" width="0.0899%" height="15" fill="rgb(241,28,37)" fg:x="4062" fg:w="67"/><text x="5.7007%" y="239.50"></text></g><g><title>`0x7FFFD890F874 (67 samples, 0.09%)</title><rect x="5.4507%" y="213" width="0.0899%" height="15" fill="rgb(233,93,10)" fg:x="4062" fg:w="67"/><text x="5.7007%" y="223.50"></text></g><g><title>`0x7FFFD8906E01 (67 samples, 0.09%)</title><rect x="5.4507%" y="197" width="0.0899%" height="15" fill="rgb(225,113,19)" fg:x="4062" fg:w="67"/><text x="5.7007%" y="207.50"></text></g><g><title>`0x7FF85BC317DF (67 samples, 0.09%)</title><rect x="5.4507%" y="181" width="0.0899%" height="15" fill="rgb(241,2,18)" fg:x="4062" fg:w="67"/><text x="5.7007%" y="191.50"></text></g><g><title>`0x7FF85BC32578 (66 samples, 0.09%)</title><rect x="5.4520%" y="165" width="0.0886%" height="15" fill="rgb(228,207,21)" fg:x="4063" fg:w="66"/><text x="5.7020%" y="175.50"></text></g><g><title>`0x7FFFD82A16BE (68 samples, 0.09%)</title><rect x="5.4507%" y="421" width="0.0912%" height="15" fill="rgb(213,211,35)" fg:x="4062" fg:w="68"/><text x="5.7007%" y="431.50"></text></g><g><title>`0x7FFFD7D2C764 (68 samples, 0.09%)</title><rect x="5.4507%" y="405" width="0.0912%" height="15" fill="rgb(209,83,10)" fg:x="4062" fg:w="68"/><text x="5.7007%" y="415.50"></text></g><g><title>`0x7FFFD88F6252 (68 samples, 0.09%)</title><rect x="5.4507%" y="389" width="0.0912%" height="15" fill="rgb(209,164,1)" fg:x="4062" fg:w="68"/><text x="5.7007%" y="399.50"></text></g><g><title>`0x7FFFD88F5F55 (68 samples, 0.09%)</title><rect x="5.4507%" y="373" width="0.0912%" height="15" fill="rgb(213,184,43)" fg:x="4062" fg:w="68"/><text x="5.7007%" y="383.50"></text></g><g><title>`0x7FFFD88F604D (68 samples, 0.09%)</title><rect x="5.4507%" y="357" width="0.0912%" height="15" fill="rgb(231,61,34)" fg:x="4062" fg:w="68"/><text x="5.7007%" y="367.50"></text></g><g><title>`0x7FFFD89031A7 (68 samples, 0.09%)</title><rect x="5.4507%" y="341" width="0.0912%" height="15" fill="rgb(235,75,3)" fg:x="4062" fg:w="68"/><text x="5.7007%" y="351.50"></text></g><g><title>`0x7FFFD890277D (68 samples, 0.09%)</title><rect x="5.4507%" y="325" width="0.0912%" height="15" fill="rgb(220,106,47)" fg:x="4062" fg:w="68"/><text x="5.7007%" y="335.50"></text></g><g><title>`0x7FFFD8902817 (68 samples, 0.09%)</title><rect x="5.4507%" y="309" width="0.0912%" height="15" fill="rgb(210,196,33)" fg:x="4062" fg:w="68"/><text x="5.7007%" y="319.50"></text></g><g><title>`0x7FFFD890260A (68 samples, 0.09%)</title><rect x="5.4507%" y="293" width="0.0912%" height="15" fill="rgb(229,154,42)" fg:x="4062" fg:w="68"/><text x="5.7007%" y="303.50"></text></g><g><title>`0x7FFFD89033E0 (68 samples, 0.09%)</title><rect x="5.4507%" y="277" width="0.0912%" height="15" fill="rgb(228,114,26)" fg:x="4062" fg:w="68"/><text x="5.7007%" y="287.50"></text></g><g><title>`0x7FFFD82A1551 (69 samples, 0.09%)</title><rect x="5.4507%" y="437" width="0.0926%" height="15" fill="rgb(208,144,1)" fg:x="4062" fg:w="69"/><text x="5.7007%" y="447.50"></text></g><g><title>`0x7FFFD82BEDD4 (16 samples, 0.02%)</title><rect x="5.5433%" y="421" width="0.0215%" height="15" fill="rgb(239,112,37)" fg:x="4131" fg:w="16"/><text x="5.7933%" y="431.50"></text></g><g><title>`0x7FFFD888F296 (16 samples, 0.02%)</title><rect x="5.5433%" y="405" width="0.0215%" height="15" fill="rgb(210,96,50)" fg:x="4131" fg:w="16"/><text x="5.7933%" y="415.50"></text></g><g><title>`0x7FFFD888C9C7 (16 samples, 0.02%)</title><rect x="5.5433%" y="389" width="0.0215%" height="15" fill="rgb(222,178,2)" fg:x="4131" fg:w="16"/><text x="5.7933%" y="399.50"></text></g><g><title>`0x7FFFD888CBE1 (16 samples, 0.02%)</title><rect x="5.5433%" y="373" width="0.0215%" height="15" fill="rgb(226,74,18)" fg:x="4131" fg:w="16"/><text x="5.7933%" y="383.50"></text></g><g><title>`0x7FFFD8276E7A (88 samples, 0.12%)</title><rect x="5.4507%" y="453" width="0.1181%" height="15" fill="rgb(225,67,54)" fg:x="4062" fg:w="88"/><text x="5.7007%" y="463.50"></text></g><g><title>`0x7FFFD82A156E (19 samples, 0.03%)</title><rect x="5.5433%" y="437" width="0.0255%" height="15" fill="rgb(251,92,32)" fg:x="4131" fg:w="19"/><text x="5.7933%" y="447.50"></text></g><g><title>`0x7FFFD8276EB6 (13 samples, 0.02%)</title><rect x="5.5755%" y="453" width="0.0174%" height="15" fill="rgb(228,149,22)" fg:x="4155" fg:w="13"/><text x="5.8255%" y="463.50"></text></g><g><title>`0x7FF85EA9BC7A (122 samples, 0.16%)</title><rect x="5.4413%" y="533" width="0.1637%" height="15" fill="rgb(243,54,13)" fg:x="4055" fg:w="122"/><text x="5.6913%" y="543.50"></text></g><g><title>`0x7FF85EAD193C (122 samples, 0.16%)</title><rect x="5.4413%" y="517" width="0.1637%" height="15" fill="rgb(243,180,28)" fg:x="4055" fg:w="122"/><text x="5.6913%" y="527.50"></text></g><g><title>`0x7FF85EAD2983 (122 samples, 0.16%)</title><rect x="5.4413%" y="501" width="0.1637%" height="15" fill="rgb(208,167,24)" fg:x="4055" fg:w="122"/><text x="5.6913%" y="511.50"></text></g><g><title>`0x7FFFD88AC6A3 (117 samples, 0.16%)</title><rect x="5.4480%" y="485" width="0.1570%" height="15" fill="rgb(245,73,45)" fg:x="4060" fg:w="117"/><text x="5.6980%" y="495.50"></text></g><g><title>`0x7FFFD827851E (117 samples, 0.16%)</title><rect x="5.4480%" y="469" width="0.1570%" height="15" fill="rgb(237,203,48)" fg:x="4060" fg:w="117"/><text x="5.6980%" y="479.50"></text></g><g><title>`0x7FF85EA688D4 (123 samples, 0.17%)</title><rect x="5.4413%" y="565" width="0.1650%" height="15" fill="rgb(211,197,16)" fg:x="4055" fg:w="123"/><text x="5.6913%" y="575.50"></text></g><g><title>`0x7FF85EA9AE03 (123 samples, 0.17%)</title><rect x="5.4413%" y="549" width="0.1650%" height="15" fill="rgb(243,99,51)" fg:x="4055" fg:w="123"/><text x="5.6913%" y="559.50"></text></g><g><title>`0x7FF813C443B2 (128 samples, 0.17%)</title><rect x="5.4359%" y="645" width="0.1718%" height="15" fill="rgb(215,123,29)" fg:x="4051" fg:w="128"/><text x="5.6859%" y="655.50"></text></g><g><title>`0x7FF813C42508 (128 samples, 0.17%)</title><rect x="5.4359%" y="629" width="0.1718%" height="15" fill="rgb(239,186,37)" fg:x="4051" fg:w="128"/><text x="5.6859%" y="639.50"></text></g><g><title>`0x7FF85BBC28E6 (128 samples, 0.17%)</title><rect x="5.4359%" y="613" width="0.1718%" height="15" fill="rgb(252,136,39)" fg:x="4051" fg:w="128"/><text x="5.6859%" y="623.50"></text></g><g><title>`0x7FF85EAB5D80 (128 samples, 0.17%)</title><rect x="5.4359%" y="597" width="0.1718%" height="15" fill="rgb(223,213,32)" fg:x="4051" fg:w="128"/><text x="5.6859%" y="607.50"></text></g><g><title>`0x7FF85EA684E0 (128 samples, 0.17%)</title><rect x="5.4359%" y="581" width="0.1718%" height="15" fill="rgb(233,115,5)" fg:x="4051" fg:w="128"/><text x="5.6859%" y="591.50"></text></g><g><title>`0x7FF85DCD21B6 (8 samples, 0.01%)</title><rect x="5.6305%" y="357" width="0.0107%" height="15" fill="rgb(207,226,44)" fg:x="4196" fg:w="8"/><text x="5.8805%" y="367.50"></text></g><g><title>`0x7FF85DCD21BE (16 samples, 0.02%)</title><rect x="5.6412%" y="357" width="0.0215%" height="15" fill="rgb(208,126,0)" fg:x="4204" fg:w="16"/><text x="5.8912%" y="367.50"></text></g><g><title>`0x7FF85DCD21D4 (44 samples, 0.06%)</title><rect x="5.6654%" y="357" width="0.0590%" height="15" fill="rgb(244,66,21)" fg:x="4222" fg:w="44"/><text x="5.9154%" y="367.50"></text></g><g><title>`0x7FF85DCD21DE (79 samples, 0.11%)</title><rect x="5.7298%" y="357" width="0.1060%" height="15" fill="rgb(222,97,12)" fg:x="4270" fg:w="79"/><text x="5.9798%" y="367.50"></text></g><g><title>`0x7FF85C332B1F (172 samples, 0.23%)</title><rect x="5.6090%" y="501" width="0.2308%" height="15" fill="rgb(219,213,19)" fg:x="4180" fg:w="172"/><text x="5.8590%" y="511.50"></text></g><g><title>`0x7FF85C33351F (163 samples, 0.22%)</title><rect x="5.6211%" y="485" width="0.2187%" height="15" fill="rgb(252,169,30)" fg:x="4189" fg:w="163"/><text x="5.8711%" y="495.50"></text></g><g><title>`0x7FF85C3342F9 (163 samples, 0.22%)</title><rect x="5.6211%" y="469" width="0.2187%" height="15" fill="rgb(206,32,51)" fg:x="4189" fg:w="163"/><text x="5.8711%" y="479.50"></text></g><g><title>`0x7FF85C7501DA (163 samples, 0.22%)</title><rect x="5.6211%" y="453" width="0.2187%" height="15" fill="rgb(250,172,42)" fg:x="4189" fg:w="163"/><text x="5.8711%" y="463.50"></text></g><g><title>`0x7FF85C76239B (163 samples, 0.22%)</title><rect x="5.6211%" y="437" width="0.2187%" height="15" fill="rgb(209,34,43)" fg:x="4189" fg:w="163"/><text x="5.8711%" y="447.50"></text></g><g><title>`0x7FF85C76564D (163 samples, 0.22%)</title><rect x="5.6211%" y="421" width="0.2187%" height="15" fill="rgb(223,11,35)" fg:x="4189" fg:w="163"/><text x="5.8711%" y="431.50"></text></g><g><title>`0x7FF85DCD15A6 (163 samples, 0.22%)</title><rect x="5.6211%" y="405" width="0.2187%" height="15" fill="rgb(251,219,26)" fg:x="4189" fg:w="163"/><text x="5.8711%" y="415.50"></text></g><g><title>`0x7FF85DCD1B79 (163 samples, 0.22%)</title><rect x="5.6211%" y="389" width="0.2187%" height="15" fill="rgb(231,119,3)" fg:x="4189" fg:w="163"/><text x="5.8711%" y="399.50"></text></g><g><title>`0x7FF85DCD2073 (163 samples, 0.22%)</title><rect x="5.6211%" y="373" width="0.2187%" height="15" fill="rgb(216,97,11)" fg:x="4189" fg:w="163"/><text x="5.8711%" y="383.50"></text></g><g><title>`0x7FF85C31B69E (9 samples, 0.01%)</title><rect x="5.8465%" y="453" width="0.0121%" height="15" fill="rgb(223,59,9)" fg:x="4357" fg:w="9"/><text x="6.0965%" y="463.50"></text></g><g><title>`0x7FF85C31A65B (9 samples, 0.01%)</title><rect x="5.8465%" y="437" width="0.0121%" height="15" fill="rgb(233,93,31)" fg:x="4357" fg:w="9"/><text x="6.0965%" y="447.50"></text></g><g><title>`0x7FF85C332C0D (13 samples, 0.02%)</title><rect x="5.8438%" y="501" width="0.0174%" height="15" fill="rgb(239,81,33)" fg:x="4355" fg:w="13"/><text x="6.0938%" y="511.50"></text></g><g><title>`0x7FF85C319BAA (13 samples, 0.02%)</title><rect x="5.8438%" y="485" width="0.0174%" height="15" fill="rgb(213,120,34)" fg:x="4355" fg:w="13"/><text x="6.0938%" y="495.50"></text></g><g><title>`0x7FF85C317482 (11 samples, 0.01%)</title><rect x="5.8465%" y="469" width="0.0148%" height="15" fill="rgb(243,49,53)" fg:x="4357" fg:w="11"/><text x="6.0965%" y="479.50"></text></g><g><title>`0x7FFFD888F519 (192 samples, 0.26%)</title><rect x="5.6090%" y="533" width="0.2576%" height="15" fill="rgb(247,216,33)" fg:x="4180" fg:w="192"/><text x="5.8590%" y="543.50"></text></g><g><title>`0x7FF85C3346F5 (192 samples, 0.26%)</title><rect x="5.6090%" y="517" width="0.2576%" height="15" fill="rgb(226,26,14)" fg:x="4180" fg:w="192"/><text x="5.8590%" y="527.50"></text></g><g><title>`0x7FFFD888F168 (199 samples, 0.27%)</title><rect x="5.6090%" y="549" width="0.2670%" height="15" fill="rgb(215,49,53)" fg:x="4180" fg:w="199"/><text x="5.8590%" y="559.50"></text></g><g><title>`0x7FFFD831EB0E (215 samples, 0.29%)</title><rect x="5.6077%" y="597" width="0.2885%" height="15" fill="rgb(245,162,40)" fg:x="4179" fg:w="215"/><text x="5.8577%" y="607.50"></text></g><g><title>`0x7FFFD82FEFD9 (215 samples, 0.29%)</title><rect x="5.6077%" y="581" width="0.2885%" height="15" fill="rgb(229,68,17)" fg:x="4179" fg:w="215"/><text x="5.8577%" y="591.50"></text></g><g><title>`0x7FFFD82FC923 (215 samples, 0.29%)</title><rect x="5.6077%" y="565" width="0.2885%" height="15" fill="rgb(213,182,10)" fg:x="4179" fg:w="215"/><text x="5.8577%" y="575.50"></text></g><g><title>`0x7FFFD888F198 (15 samples, 0.02%)</title><rect x="5.8760%" y="549" width="0.0201%" height="15" fill="rgb(245,125,30)" fg:x="4379" fg:w="15"/><text x="6.1260%" y="559.50"></text></g><g><title>`0x7FF85BBC28E6 (15 samples, 0.02%)</title><rect x="5.8760%" y="533" width="0.0201%" height="15" fill="rgb(232,202,2)" fg:x="4379" fg:w="15"/><text x="6.1260%" y="543.50"></text></g><g><title>`0x7FF85EAB5D80 (15 samples, 0.02%)</title><rect x="5.8760%" y="517" width="0.0201%" height="15" fill="rgb(237,140,51)" fg:x="4379" fg:w="15"/><text x="6.1260%" y="527.50"></text></g><g><title>`0x7FF85EA684E0 (15 samples, 0.02%)</title><rect x="5.8760%" y="501" width="0.0201%" height="15" fill="rgb(236,157,25)" fg:x="4379" fg:w="15"/><text x="6.1260%" y="511.50"></text></g><g><title>`0x7FF85EA688D4 (13 samples, 0.02%)</title><rect x="5.8787%" y="485" width="0.0174%" height="15" fill="rgb(219,209,0)" fg:x="4381" fg:w="13"/><text x="6.1287%" y="495.50"></text></g><g><title>`0x7FF85EA9AE03 (13 samples, 0.02%)</title><rect x="5.8787%" y="469" width="0.0174%" height="15" fill="rgb(240,116,54)" fg:x="4381" fg:w="13"/><text x="6.1287%" y="479.50"></text></g><g><title>`0x7FF85EA9BC7A (13 samples, 0.02%)</title><rect x="5.8787%" y="453" width="0.0174%" height="15" fill="rgb(216,10,36)" fg:x="4381" fg:w="13"/><text x="6.1287%" y="463.50"></text></g><g><title>`0x7FF85EAD193C (13 samples, 0.02%)</title><rect x="5.8787%" y="437" width="0.0174%" height="15" fill="rgb(222,72,44)" fg:x="4381" fg:w="13"/><text x="6.1287%" y="447.50"></text></g><g><title>`0x7FF85EAD2983 (13 samples, 0.02%)</title><rect x="5.8787%" y="421" width="0.0174%" height="15" fill="rgb(232,159,9)" fg:x="4381" fg:w="13"/><text x="6.1287%" y="431.50"></text></g><g><title>`0x7FF84EC8C3F4 (13 samples, 0.02%)</title><rect x="5.8787%" y="405" width="0.0174%" height="15" fill="rgb(210,39,32)" fg:x="4381" fg:w="13"/><text x="6.1287%" y="415.50"></text></g><g><title>`0x7FF84EC8C27E (11 samples, 0.01%)</title><rect x="5.8814%" y="389" width="0.0148%" height="15" fill="rgb(216,194,45)" fg:x="4383" fg:w="11"/><text x="6.1314%" y="399.50"></text></g><g><title>`0x7FF84ECA3885 (11 samples, 0.01%)</title><rect x="5.8814%" y="373" width="0.0148%" height="15" fill="rgb(218,18,35)" fg:x="4383" fg:w="11"/><text x="6.1314%" y="383.50"></text></g><g><title>`0x7FF813C48605 (356 samples, 0.48%)</title><rect x="5.4265%" y="693" width="0.4777%" height="15" fill="rgb(207,83,51)" fg:x="4044" fg:w="356"/><text x="5.6765%" y="703.50"></text></g><g><title>`0x7FF813C425CF (356 samples, 0.48%)</title><rect x="5.4265%" y="677" width="0.4777%" height="15" fill="rgb(225,63,43)" fg:x="4044" fg:w="356"/><text x="5.6765%" y="687.50"></text></g><g><title>`0x7FF813C33502 (349 samples, 0.47%)</title><rect x="5.4359%" y="661" width="0.4683%" height="15" fill="rgb(207,57,36)" fg:x="4051" fg:w="349"/><text x="5.6859%" y="671.50"></text></g><g><title>`0x7FF813C44578 (221 samples, 0.30%)</title><rect x="5.6077%" y="645" width="0.2966%" height="15" fill="rgb(216,99,33)" fg:x="4179" fg:w="221"/><text x="5.8577%" y="655.50"></text></g><g><title>`0x7FFFD87C4A58 (221 samples, 0.30%)</title><rect x="5.6077%" y="629" width="0.2966%" height="15" fill="rgb(225,42,16)" fg:x="4179" fg:w="221"/><text x="5.8577%" y="639.50"></text></g><g><title>`0x7FFFD87C4730 (221 samples, 0.30%)</title><rect x="5.6077%" y="613" width="0.2966%" height="15" fill="rgb(220,201,45)" fg:x="4179" fg:w="221"/><text x="5.8577%" y="623.50"></text></g><g><title>gbemu.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;ref$ (372 samples, 0.50%)</title><rect x="5.4185%" y="805" width="0.4992%" height="15" fill="rgb(225,33,4)" fg:x="4038" fg:w="372"/><text x="5.6685%" y="815.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::Instance::desired_extensions (372 samples, 0.50%)</title><rect x="5.4185%" y="789" width="0.4992%" height="15" fill="rgb(224,33,50)" fg:x="4038" fg:w="372"/><text x="5.6685%" y="799.50"></text></g><g><title>gbemu.exe`ash::entry::Entry::enumerate_instance_extension_properties(enum2$&lt;core::option::Option&lt;ref$ (372 samples, 0.50%)</title><rect x="5.4185%" y="773" width="0.4992%" height="15" fill="rgb(246,198,51)" fg:x="4038" fg:w="372"/><text x="5.6685%" y="783.50"></text></g><g><title>gbemu.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::ExtensionProperties,ash::entry::impl$0::enumerate_instance_extension_properties::closure_env$0&gt; (372 samples, 0.50%)</title><rect x="5.4185%" y="757" width="0.4992%" height="15" fill="rgb(205,22,4)" fg:x="4038" fg:w="372"/><text x="5.6685%" y="767.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result (368 samples, 0.49%)</title><rect x="5.4238%" y="741" width="0.4938%" height="15" fill="rgb(206,3,8)" fg:x="4042" fg:w="368"/><text x="5.6738%" y="751.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result_with_success(ash::vk::enums::Result, tuple$ (368 samples, 0.49%)</title><rect x="5.4238%" y="725" width="0.4938%" height="15" fill="rgb(251,23,15)" fg:x="4042" fg:w="368"/><text x="5.6738%" y="735.50"></text></g><g><title>`0x7FF813C5383C (366 samples, 0.49%)</title><rect x="5.4265%" y="709" width="0.4911%" height="15" fill="rgb(252,88,28)" fg:x="4044" fg:w="366"/><text x="5.6765%" y="719.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;ash::vk::definitions::LayerProperties,alloc::alloc::Global&gt;,ash::vk::enums::Result&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;alloc::vec::Vec (9 samples, 0.01%)</title><rect x="5.9176%" y="805" width="0.0121%" height="15" fill="rgb(212,127,14)" fg:x="4410" fg:w="9"/><text x="6.1676%" y="815.50"></text></g><g><title>gbemu.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::LayerProperties,ash::entry::impl$0::enumerate_instance_layer_properties::closure_env$0&gt; (9 samples, 0.01%)</title><rect x="5.9176%" y="789" width="0.0121%" height="15" fill="rgb(247,145,37)" fg:x="4410" fg:w="9"/><text x="6.1676%" y="799.50"></text></g><g><title>gbemu.exe`wgpu::Instance::new (613 samples, 0.82%)</title><rect x="5.1179%" y="1077" width="0.8226%" height="15" fill="rgb(209,117,53)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="1087.50"></text></g><g><title>gbemu.exe`alloc::sync::impl$63::from (613 samples, 0.82%)</title><rect x="5.1179%" y="1061" width="0.8226%" height="15" fill="rgb(212,90,42)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="1071.50"></text></g><g><title>gbemu.exe`alloc::sync::Arc&lt;wgpu::backend::wgpu_core::ContextWgpuCore,alloc::alloc::Global&gt;::new (613 samples, 0.82%)</title><rect x="5.1179%" y="1045" width="0.8226%" height="15" fill="rgb(218,164,37)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="1055.50"></text></g><g><title>gbemu.exe`wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;::new&lt;wgpu_core::identity::IdentityManagerFactory&gt;(ref$ (613 samples, 0.82%)</title><rect x="5.1179%" y="1029" width="0.8226%" height="15" fill="rgb(246,65,34)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="1039.50"></text></g><g><title>gbemu.exe`wgpu_core::registry::Registry&lt;wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;,wgpu_core::instance::Surface&gt;::without_backend (613 samples, 0.82%)</title><rect x="5.1179%" y="1013" width="0.8226%" height="15" fill="rgb(231,100,33)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="1023.50"></text></g><g><title>gbemu.exe`wgpu_core::registry::Registry&lt;wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;,wgpu_core::instance::Surface&gt;::new (613 samples, 0.82%)</title><rect x="5.1179%" y="997" width="0.8226%" height="15" fill="rgb(228,126,14)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="1007.50"></text></g><g><title>gbemu.exe`wgpu_core::identity::IdentityHandlerFactory::spawn (613 samples, 0.82%)</title><rect x="5.1179%" y="981" width="0.8226%" height="15" fill="rgb(215,173,21)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="991.50"></text></g><g><title>gbemu.exe`alloc::sync::Arc&lt;wgpu_core::identity::IdentityManager&lt;wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt; &gt;,alloc::alloc::Global&gt;::new(wgpu_core::identity::IdentityManager&lt;wgpu_core::id::Id (613 samples, 0.82%)</title><rect x="5.1179%" y="965" width="0.8226%" height="15" fill="rgb(210,6,40)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="975.50"></text></g><g><title>gbemu.exe`alloc::boxed::impl$0::new(alloc::sync::ArcInner&lt;wgpu_core::identity::IdentityManager&lt;wgpu_core::id::Id (613 samples, 0.82%)</title><rect x="5.1179%" y="949" width="0.8226%" height="15" fill="rgb(212,48,18)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="959.50"></text></g><g><title>gbemu.exe`alloc::alloc::exchange_malloc (613 samples, 0.82%)</title><rect x="5.1179%" y="933" width="0.8226%" height="15" fill="rgb(230,214,11)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="943.50"></text></g><g><title>gbemu.exe`alloc::alloc::impl$1::allocate (613 samples, 0.82%)</title><rect x="5.1179%" y="917" width="0.8226%" height="15" fill="rgb(254,105,39)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="927.50"></text></g><g><title>gbemu.exe`alloc::alloc::Global::alloc_impl (613 samples, 0.82%)</title><rect x="5.1179%" y="901" width="0.8226%" height="15" fill="rgb(245,158,5)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="911.50"></text></g><g><title>gbemu.exe`alloc::alloc::alloc (613 samples, 0.82%)</title><rect x="5.1179%" y="885" width="0.8226%" height="15" fill="rgb(249,208,11)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="895.50"></text></g><g><title>gbemu.exe`core::ptr::read_volatile (613 samples, 0.82%)</title><rect x="5.1179%" y="869" width="0.8226%" height="15" fill="rgb(210,39,28)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="879.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::Instance::new(ref$ (613 samples, 0.82%)</title><rect x="5.1179%" y="853" width="0.8226%" height="15" fill="rgb(211,56,53)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="863.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::impl$0::new::init (613 samples, 0.82%)</title><rect x="5.1179%" y="837" width="0.8226%" height="15" fill="rgb(226,201,30)" fg:x="3814" fg:w="613"/><text x="5.3679%" y="847.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::instance::impl$5::init (511 samples, 0.69%)</title><rect x="5.2548%" y="821" width="0.6857%" height="15" fill="rgb(239,101,34)" fg:x="3916" fg:w="511"/><text x="5.5048%" y="831.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::result::Result&lt;pixels::Pixels,enum2$&lt;pixels::Error&gt; &gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;pixels::Pixels,enum2$ (2,243 samples, 3.01%)</title><rect x="2.9481%" y="1125" width="3.0098%" height="15" fill="rgb(226,209,5)" fg:x="2197" fg:w="2243"/><text x="3.1981%" y="1135.50">gbe..</text></g><g><title>gbemu.exe`pollster::block_on&lt;enum2$&lt;pixels::builder::impl$0::build_impl::async_fn_env$0&lt;alloc::sync::Arc&lt;winit::window::Window,alloc::alloc::Global&gt; &gt; &gt; &gt;(enum2$&lt;pixels::builder::impl$0::build_impl::async_fn_env$0&lt;alloc::sync::Arc (2,243 samples, 3.01%)</title><rect x="2.9481%" y="1109" width="3.0098%" height="15" fill="rgb(250,105,47)" fg:x="2197" fg:w="2243"/><text x="3.1981%" y="1119.50">gbe..</text></g><g><title>gbemu.exe`pixels::builder::impl$0::build_impl::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;pixels::builder::impl$0::build_impl::async_fn_env$0&lt;alloc::sync::Arc (2,243 samples, 3.01%)</title><rect x="2.9481%" y="1093" width="3.0098%" height="15" fill="rgb(230,72,3)" fg:x="2197" fg:w="2243"/><text x="3.1981%" y="1103.50">gbe..</text></g><g><title>gbemu.exe`wgpu::Surface::get_capabilities (13 samples, 0.02%)</title><rect x="5.9404%" y="1077" width="0.0174%" height="15" fill="rgb(232,218,39)" fg:x="4427" fg:w="13"/><text x="6.1904%" y="1087.50"></text></g><g><title>gbemu.exe`wgpu::context::impl$5::surface_get_capabilities&lt;wgpu::backend::wgpu_core::ContextWgpuCore&gt;(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu::context::ObjectId*, ref$&lt;dyn$&lt;core::any::Any,core::marker::Send,core::marker::Sync&gt; &gt;, wgpu::context::ObjectId*, ref$&lt;dyn$ (13 samples, 0.02%)</title><rect x="5.9404%" y="1061" width="0.0174%" height="15" fill="rgb(248,166,6)" fg:x="4427" fg:w="13"/><text x="6.1904%" y="1071.50"></text></g><g><title>gbemu.exe`wgpu::backend::wgpu_core::impl$7::surface_get_capabilities(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;*, wgpu::backend::wgpu_core::Surface*, wgpu_core::id::Id&lt;wgpu_core::instance::Adapter&lt;wgpu_hal::empty::Api&gt; &gt;*, tuple$ (13 samples, 0.02%)</title><rect x="5.9404%" y="1045" width="0.0174%" height="15" fill="rgb(247,89,20)" fg:x="4427" fg:w="13"/><text x="6.1904%" y="1055.50"></text></g><g><title>gbemu.exe`wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;::surface_get_capabilities(wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;, wgpu_core::id::Id&lt;wgpu_core::instance::Adapter (13 samples, 0.02%)</title><rect x="5.9404%" y="1029" width="0.0174%" height="15" fill="rgb(248,130,54)" fg:x="4427" fg:w="13"/><text x="6.1904%" y="1039.50"></text></g><g><title>gbemu.exe`wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;::fetch_adapter_and_surface&lt;wgpu_core::identity::IdentityManagerFactory,wgpu_hal::vulkan::Api,wgpu_core::device::global::impl$0::surface_get_capabilities::closure_env$0&lt;wgpu_core::identity::IdentityManagerFactory,wgpu_hal::vulkan::Api&gt;,wgpu_types::SurfaceCapabilities&gt;(wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;, wgpu_core::id::Id&lt;wgpu_core::instance::Adapter&lt;wgpu_hal::empty::Api&gt; &gt;, wgpu_core::device::global::impl$0::surface_get_capabilities::closure_env$0 (13 samples, 0.02%)</title><rect x="5.9404%" y="1013" width="0.0174%" height="15" fill="rgb(234,196,4)" fg:x="4427" fg:w="13"/><text x="6.1904%" y="1023.50"></text></g><g><title>gbemu.exe`wgpu_core::device::global::impl$0::surface_get_capabilities::closure$0(wgpu_core::device::global::impl$0::surface_get_capabilities::closure_env$0&lt;wgpu_core::identity::IdentityManagerFactory,wgpu_hal::vulkan::Api&gt;, wgpu_core::instance::Adapter (13 samples, 0.02%)</title><rect x="5.9404%" y="997" width="0.0174%" height="15" fill="rgb(250,143,31)" fg:x="4427" fg:w="13"/><text x="6.1904%" y="1007.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::Surface::get_capabilities(wgpu_core::instance::Adapter (13 samples, 0.02%)</title><rect x="5.9404%" y="981" width="0.0174%" height="15" fill="rgb(211,110,34)" fg:x="4427" fg:w="13"/><text x="6.1904%" y="991.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::option::Option&lt;wgpu_hal::SurfaceCapabilities&gt; &gt;::ok_or(enum2$&lt;core::option::Option (13 samples, 0.02%)</title><rect x="5.9404%" y="965" width="0.0174%" height="15" fill="rgb(215,124,48)" fg:x="4427" fg:w="13"/><text x="6.1904%" y="975.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::adapter::impl$9::surface_capabilities (13 samples, 0.02%)</title><rect x="5.9404%" y="949" width="0.0174%" height="15" fill="rgb(216,46,13)" fg:x="4427" fg:w="13"/><text x="6.1904%" y="959.50"></text></g><g><title>gbemu.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::SurfaceFormatKHR,ash::extensions::khr::surface::impl$0::get_physical_device_surface_formats::closure_env$0&gt; (13 samples, 0.02%)</title><rect x="5.9404%" y="933" width="0.0174%" height="15" fill="rgb(205,184,25)" fg:x="4427" fg:w="13"/><text x="6.1904%" y="943.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result (8 samples, 0.01%)</title><rect x="5.9472%" y="917" width="0.0107%" height="15" fill="rgb(228,1,10)" fg:x="4432" fg:w="8"/><text x="6.1972%" y="927.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result_with_success(ash::vk::enums::Result, tuple$ (8 samples, 0.01%)</title><rect x="5.9472%" y="901" width="0.0107%" height="15" fill="rgb(213,116,27)" fg:x="4432" fg:w="8"/><text x="6.1972%" y="911.50"></text></g><g><title>`0x7FF813C5A1C0 (8 samples, 0.01%)</title><rect x="5.9472%" y="885" width="0.0107%" height="15" fill="rgb(241,95,50)" fg:x="4432" fg:w="8"/><text x="6.1972%" y="895.50"></text></g><g><title>`0x7FF813C592BD (8 samples, 0.01%)</title><rect x="5.9472%" y="869" width="0.0107%" height="15" fill="rgb(238,48,32)" fg:x="4432" fg:w="8"/><text x="6.1972%" y="879.50"></text></g><g><title>`0x7FFFD863BAF6 (8 samples, 0.01%)</title><rect x="5.9472%" y="853" width="0.0107%" height="15" fill="rgb(235,113,49)" fg:x="4432" fg:w="8"/><text x="6.1972%" y="863.50"></text></g><g><title>`0x7FF85E143021 (9 samples, 0.01%)</title><rect x="5.9914%" y="469" width="0.0121%" height="15" fill="rgb(205,127,43)" fg:x="4465" fg:w="9"/><text x="6.2414%" y="479.50"></text></g><g><title>`0x7FF85E145C84 (9 samples, 0.01%)</title><rect x="5.9914%" y="453" width="0.0121%" height="15" fill="rgb(250,162,2)" fg:x="4465" fg:w="9"/><text x="6.2414%" y="463.50"></text></g><g><title>`0x7FF85CEF271F (9 samples, 0.01%)</title><rect x="5.9914%" y="437" width="0.0121%" height="15" fill="rgb(220,13,41)" fg:x="4465" fg:w="9"/><text x="6.2414%" y="447.50"></text></g><g><title>`0x7FF85CC37C98 (20 samples, 0.03%)</title><rect x="5.9874%" y="549" width="0.0268%" height="15" fill="rgb(249,221,25)" fg:x="4462" fg:w="20"/><text x="6.2374%" y="559.50"></text></g><g><title>`0x7FF85CC37E20 (20 samples, 0.03%)</title><rect x="5.9874%" y="533" width="0.0268%" height="15" fill="rgb(215,208,19)" fg:x="4462" fg:w="20"/><text x="6.2374%" y="543.50"></text></g><g><title>`0x7FF85CC38F05 (20 samples, 0.03%)</title><rect x="5.9874%" y="517" width="0.0268%" height="15" fill="rgb(236,175,2)" fg:x="4462" fg:w="20"/><text x="6.2374%" y="527.50"></text></g><g><title>`0x7FF85CC395B4 (20 samples, 0.03%)</title><rect x="5.9874%" y="501" width="0.0268%" height="15" fill="rgb(241,52,2)" fg:x="4462" fg:w="20"/><text x="6.2374%" y="511.50"></text></g><g><title>`0x7FF85E14592D (17 samples, 0.02%)</title><rect x="5.9914%" y="485" width="0.0228%" height="15" fill="rgb(248,140,14)" fg:x="4465" fg:w="17"/><text x="6.2414%" y="495.50"></text></g><g><title>`0x7FF85E143059 (8 samples, 0.01%)</title><rect x="6.0035%" y="469" width="0.0107%" height="15" fill="rgb(253,22,42)" fg:x="4474" fg:w="8"/><text x="6.2535%" y="479.50"></text></g><g><title>`0x7FF85E1481BD (8 samples, 0.01%)</title><rect x="6.0035%" y="453" width="0.0107%" height="15" fill="rgb(234,61,47)" fg:x="4474" fg:w="8"/><text x="6.2535%" y="463.50"></text></g><g><title>`0x7FF85E1447E9 (8 samples, 0.01%)</title><rect x="6.0035%" y="437" width="0.0107%" height="15" fill="rgb(208,226,15)" fg:x="4474" fg:w="8"/><text x="6.2535%" y="447.50"></text></g><g><title>`0x7FF85C7D1D44 (12 samples, 0.02%)</title><rect x="6.0143%" y="277" width="0.0161%" height="15" fill="rgb(217,221,4)" fg:x="4482" fg:w="12"/><text x="6.2643%" y="287.50"></text></g><g><title>`0x7FF85CC80A2D (10 samples, 0.01%)</title><rect x="6.0330%" y="261" width="0.0134%" height="15" fill="rgb(212,174,34)" fg:x="4496" fg:w="10"/><text x="6.2830%" y="271.50"></text></g><g><title>`0x7FF85C7D20E4 (10 samples, 0.01%)</title><rect x="6.0330%" y="245" width="0.0134%" height="15" fill="rgb(253,83,4)" fg:x="4496" fg:w="10"/><text x="6.2830%" y="255.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::keyboard::KeyEventBuilder::synthesize_kbd_state (25 samples, 0.03%)</title><rect x="6.0143%" y="325" width="0.0335%" height="15" fill="rgb(250,195,49)" fg:x="4482" fg:w="25"/><text x="6.2643%" y="335.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::keyboard_layout::LayoutCache::get_current_layout (25 samples, 0.03%)</title><rect x="6.0143%" y="309" width="0.0335%" height="15" fill="rgb(241,192,25)" fg:x="4482" fg:w="25"/><text x="6.2643%" y="319.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::keyboard_layout::LayoutCache::prepare_layout (25 samples, 0.03%)</title><rect x="6.0143%" y="293" width="0.0335%" height="15" fill="rgb(208,124,10)" fg:x="4482" fg:w="25"/><text x="6.2643%" y="303.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::keyboard_layout::LayoutCache::to_unicode_string (11 samples, 0.01%)</title><rect x="6.0330%" y="277" width="0.0148%" height="15" fill="rgb(222,33,0)" fg:x="4496" fg:w="11"/><text x="6.2830%" y="287.50"></text></g><g><title>`0x7FF85CC6BB73 (51 samples, 0.07%)</title><rect x="5.9807%" y="741" width="0.0684%" height="15" fill="rgb(234,209,28)" fg:x="4457" fg:w="51"/><text x="6.2307%" y="751.50"></text></g><g><title>`0x7FF85CC3C74C (51 samples, 0.07%)</title><rect x="5.9807%" y="725" width="0.0684%" height="15" fill="rgb(224,11,23)" fg:x="4457" fg:w="51"/><text x="6.2307%" y="735.50"></text></g><g><title>`0x7FF85CC3D159 (51 samples, 0.07%)</title><rect x="5.9807%" y="709" width="0.0684%" height="15" fill="rgb(232,99,1)" fg:x="4457" fg:w="51"/><text x="6.2307%" y="719.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::public_window_callback&lt;tuple$&lt;&gt; &gt; (50 samples, 0.07%)</title><rect x="5.9820%" y="693" width="0.0671%" height="15" fill="rgb(237,95,45)" fg:x="4458" fg:w="50"/><text x="6.2320%" y="703.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::public_window_callback_inner(long long, unsigned int, unsigned long long, long long, winit::platform_impl::platform::event_loop::WindowData&lt;tuple$ (50 samples, 0.07%)</title><rect x="5.9820%" y="677" width="0.0671%" height="15" fill="rgb(208,109,11)" fg:x="4458" fg:w="50"/><text x="6.2320%" y="687.50"></text></g><g><title>`0x7FF85CC406DF (46 samples, 0.06%)</title><rect x="5.9874%" y="661" width="0.0617%" height="15" fill="rgb(216,190,48)" fg:x="4462" fg:w="46"/><text x="6.2374%" y="671.50"></text></g><g><title>`0x7FF85CC3EE4B (46 samples, 0.06%)</title><rect x="5.9874%" y="645" width="0.0617%" height="15" fill="rgb(251,171,36)" fg:x="4462" fg:w="46"/><text x="6.2374%" y="655.50"></text></g><g><title>`0x7FF85C7D1344 (46 samples, 0.06%)</title><rect x="5.9874%" y="629" width="0.0617%" height="15" fill="rgb(230,62,22)" fg:x="4462" fg:w="46"/><text x="6.2374%" y="639.50"></text></g><g><title>`0x7FF85EBC5B24 (46 samples, 0.06%)</title><rect x="5.9874%" y="613" width="0.0617%" height="15" fill="rgb(225,114,35)" fg:x="4462" fg:w="46"/><text x="6.2374%" y="623.50"></text></g><g><title>`0x7FF85CC6BB73 (46 samples, 0.06%)</title><rect x="5.9874%" y="597" width="0.0617%" height="15" fill="rgb(215,118,42)" fg:x="4462" fg:w="46"/><text x="6.2374%" y="607.50"></text></g><g><title>`0x7FF85CC3C74C (46 samples, 0.06%)</title><rect x="5.9874%" y="581" width="0.0617%" height="15" fill="rgb(243,119,21)" fg:x="4462" fg:w="46"/><text x="6.2374%" y="591.50"></text></g><g><title>`0x7FF85CC3D159 (46 samples, 0.06%)</title><rect x="5.9874%" y="565" width="0.0617%" height="15" fill="rgb(252,177,53)" fg:x="4462" fg:w="46"/><text x="6.2374%" y="575.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::public_window_callback&lt;tuple$&lt;&gt; &gt; (26 samples, 0.03%)</title><rect x="6.0143%" y="549" width="0.0349%" height="15" fill="rgb(237,209,29)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="559.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::public_window_callback_inner(long long, unsigned int, unsigned long long, long long, winit::platform_impl::platform::event_loop::WindowData&lt;tuple$ (26 samples, 0.03%)</title><rect x="6.0143%" y="533" width="0.0349%" height="15" fill="rgb(212,65,23)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="543.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt;::unwrap_or_else(enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt;, winit::platform_impl::platform::event_loop::public_window_callback_inner::closure_env$3&lt;tuple$ (26 samples, 0.03%)</title><rect x="6.0143%" y="517" width="0.0349%" height="15" fill="rgb(230,222,46)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="527.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::runner::EventLoopRunner&lt;tuple$&lt;&gt; &gt;::catch_unwind&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,winit::platform_impl::platform::event_loop::public_window_callback_inner::closure_env$2&lt;tuple$&lt;&gt; &gt; &gt;(winit::platform_impl::platform::event_loop::public_window_callback_inner::closure_env$2&lt;tuple$ (26 samples, 0.03%)</title><rect x="6.0143%" y="501" width="0.0349%" height="15" fill="rgb(215,135,32)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="511.50"></text></g><g><title>gbemu.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::platform::event_loop::public_window_callback_inner::closure_env$2&lt;tuple$ (26 samples, 0.03%)</title><rect x="6.0143%" y="485" width="0.0349%" height="15" fill="rgb(246,101,22)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="495.50"></text></g><g><title>gbemu.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::platform::event_loop::public_window_callback_inner::closure_env$2&lt;tuple$ (26 samples, 0.03%)</title><rect x="6.0143%" y="469" width="0.0349%" height="15" fill="rgb(206,107,13)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="479.50"></text></g><g><title>gbemu.exe`std::panicking::try::do_call (26 samples, 0.03%)</title><rect x="6.0143%" y="453" width="0.0349%" height="15" fill="rgb(250,100,44)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="463.50"></text></g><g><title>gbemu.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::platform::event_loop::public_window_callback_inner::closure_env$2&lt;tuple$ (26 samples, 0.03%)</title><rect x="6.0143%" y="437" width="0.0349%" height="15" fill="rgb(231,147,38)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="447.50"></text></g><g><title>gbemu.exe`core::ops::function::FnOnce::call_once(winit::platform_impl::platform::event_loop::public_window_callback_inner::closure_env$2&lt;tuple$ (26 samples, 0.03%)</title><rect x="6.0143%" y="421" width="0.0349%" height="15" fill="rgb(229,8,40)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="431.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::public_window_callback_inner::closure$2(winit::platform_impl::platform::event_loop::public_window_callback_inner::closure_env$2&lt;tuple$ (26 samples, 0.03%)</title><rect x="6.0143%" y="405" width="0.0349%" height="15" fill="rgb(221,135,30)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="415.50"></text></g><g><title>gbemu.exe`alloc::vec::impl$16::into_iter(alloc::vec::Vec (26 samples, 0.03%)</title><rect x="6.0143%" y="389" width="0.0349%" height="15" fill="rgb(249,193,18)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="399.50"></text></g><g><title>gbemu.exe`core::mem::manually_drop::ManuallyDrop&lt;alloc::vec::Vec&lt;winit::platform_impl::platform::keyboard::MessageAsKeyEvent,alloc::alloc::Global&gt; &gt;::new(alloc::vec::Vec (26 samples, 0.03%)</title><rect x="6.0143%" y="373" width="0.0349%" height="15" fill="rgb(209,133,39)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="383.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::keyboard::KeyEventBuilder::process_message(long long, unsigned int, unsigned long long, long long, enum2$ (26 samples, 0.03%)</title><rect x="6.0143%" y="357" width="0.0349%" height="15" fill="rgb(232,100,14)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="367.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::keyboard::impl$1::process_message::closure$0 (26 samples, 0.03%)</title><rect x="6.0143%" y="341" width="0.0349%" height="15" fill="rgb(224,185,1)" fg:x="4482" fg:w="26"/><text x="6.2643%" y="351.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::EventLoopThreadExecutor::execute_in_thread&lt;winit::platform_impl::platform::window::impl$0::set_visible::closure_env$0&gt; (58 samples, 0.08%)</title><rect x="5.9740%" y="917" width="0.0778%" height="15" fill="rgb(223,139,8)" fg:x="4452" fg:w="58"/><text x="6.2240%" y="927.50"></text></g><g><title>gbemu.exe`core::ptr::drop_in_place (58 samples, 0.08%)</title><rect x="5.9740%" y="901" width="0.0778%" height="15" fill="rgb(232,213,38)" fg:x="4452" fg:w="58"/><text x="6.2240%" y="911.50"></text></g><g><title>gbemu.exe`core::ptr::drop_in_place(alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (58 samples, 0.08%)</title><rect x="5.9740%" y="885" width="0.0778%" height="15" fill="rgb(207,94,22)" fg:x="4452" fg:w="58"/><text x="6.2240%" y="895.50"></text></g><g><title>gbemu.exe`alloc::sync::impl$38::drop(alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (58 samples, 0.08%)</title><rect x="5.9740%" y="869" width="0.0778%" height="15" fill="rgb(219,183,54)" fg:x="4452" fg:w="58"/><text x="6.2240%" y="879.50"></text></g><g><title>gbemu.exe`alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;winit::platform_impl::platform::window_state::WindowState&gt;,alloc::alloc::Global&gt;::inner (58 samples, 0.08%)</title><rect x="5.9740%" y="853" width="0.0778%" height="15" fill="rgb(216,185,54)" fg:x="4452" fg:w="58"/><text x="6.2240%" y="863.50"></text></g><g><title>gbemu.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::sync::poison::mutex::Mutex&lt;winit::platform_impl::platform::window_state::WindowState&gt; &gt; &gt;::as_ref (58 samples, 0.08%)</title><rect x="5.9740%" y="837" width="0.0778%" height="15" fill="rgb(254,217,39)" fg:x="4452" fg:w="58"/><text x="6.2240%" y="847.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window_state::WindowFlags::apply_diff (58 samples, 0.08%)</title><rect x="5.9740%" y="821" width="0.0778%" height="15" fill="rgb(240,178,23)" fg:x="4452" fg:w="58"/><text x="6.2240%" y="831.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window_state::WindowFlags::intersects (56 samples, 0.08%)</title><rect x="5.9767%" y="805" width="0.0751%" height="15" fill="rgb(218,11,47)" fg:x="4454" fg:w="56"/><text x="6.2267%" y="815.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window_state::_::InternalBitFlags::intersects (56 samples, 0.08%)</title><rect x="5.9767%" y="789" width="0.0751%" height="15" fill="rgb(218,51,51)" fg:x="4454" fg:w="56"/><text x="6.2267%" y="799.50"></text></g><g><title>`0x7FF85C7D1CE4 (56 samples, 0.08%)</title><rect x="5.9767%" y="773" width="0.0751%" height="15" fill="rgb(238,126,27)" fg:x="4454" fg:w="56"/><text x="6.2267%" y="783.50"></text></g><g><title>`0x7FF85EBC5B24 (53 samples, 0.07%)</title><rect x="5.9807%" y="757" width="0.0711%" height="15" fill="rgb(249,202,22)" fg:x="4457" fg:w="53"/><text x="6.2307%" y="767.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window::InitData&lt;tuple$&lt;&gt; &gt;::on_create&lt;tuple$&lt;&gt; &gt; (70 samples, 0.09%)</title><rect x="5.9619%" y="933" width="0.0939%" height="15" fill="rgb(254,195,49)" fg:x="4443" fg:w="70"/><text x="6.2119%" y="943.50"></text></g><g><title>`0x7FF85D3D99DF (10 samples, 0.01%)</title><rect x="6.0639%" y="773" width="0.0134%" height="15" fill="rgb(208,123,14)" fg:x="4519" fg:w="10"/><text x="6.3139%" y="783.50"></text></g><g><title>`0x7FF85D3D9B8A (10 samples, 0.01%)</title><rect x="6.0639%" y="757" width="0.0134%" height="15" fill="rgb(224,200,8)" fg:x="4519" fg:w="10"/><text x="6.3139%" y="767.50"></text></g><g><title>`0x7FF85D3DA70C (10 samples, 0.01%)</title><rect x="6.0639%" y="741" width="0.0134%" height="15" fill="rgb(217,61,36)" fg:x="4519" fg:w="10"/><text x="6.3139%" y="751.50"></text></g><g><title>`0x7FF85D0E6F78 (10 samples, 0.01%)</title><rect x="6.0639%" y="725" width="0.0134%" height="15" fill="rgb(206,35,45)" fg:x="4519" fg:w="10"/><text x="6.3139%" y="735.50"></text></g><g><title>`0x7FF85D057D95 (10 samples, 0.01%)</title><rect x="6.0639%" y="709" width="0.0134%" height="15" fill="rgb(217,65,33)" fg:x="4519" fg:w="10"/><text x="6.3139%" y="719.50"></text></g><g><title>`0x7FF85D0DADF1 (10 samples, 0.01%)</title><rect x="6.0639%" y="693" width="0.0134%" height="15" fill="rgb(222,158,48)" fg:x="4519" fg:w="10"/><text x="6.3139%" y="703.50"></text></g><g><title>`0x7FF85D0DAF54 (10 samples, 0.01%)</title><rect x="6.0639%" y="677" width="0.0134%" height="15" fill="rgb(254,2,54)" fg:x="4519" fg:w="10"/><text x="6.3139%" y="687.50"></text></g><g><title>`0x7FF85D3D984F (22 samples, 0.03%)</title><rect x="6.0639%" y="789" width="0.0295%" height="15" fill="rgb(250,143,38)" fg:x="4519" fg:w="22"/><text x="6.3139%" y="799.50"></text></g><g><title>`0x7FF85CC5B88E (104 samples, 0.14%)</title><rect x="5.9619%" y="997" width="0.1396%" height="15" fill="rgb(248,25,0)" fg:x="4443" fg:w="104"/><text x="6.2119%" y="1007.50"></text></g><g><title>`0x7FF85CC3C74C (104 samples, 0.14%)</title><rect x="5.9619%" y="981" width="0.1396%" height="15" fill="rgb(206,152,27)" fg:x="4443" fg:w="104"/><text x="6.2119%" y="991.50"></text></g><g><title>`0x7FF85CC3D159 (104 samples, 0.14%)</title><rect x="5.9619%" y="965" width="0.1396%" height="15" fill="rgb(240,77,30)" fg:x="4443" fg:w="104"/><text x="6.2119%" y="975.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::public_window_callback&lt;tuple$&lt;&gt; &gt; (104 samples, 0.14%)</title><rect x="5.9619%" y="949" width="0.1396%" height="15" fill="rgb(231,5,3)" fg:x="4443" fg:w="104"/><text x="6.2119%" y="959.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window::InitData&lt;tuple$&lt;&gt; &gt;::on_nccreate&lt;tuple$&lt;&gt; &gt; (34 samples, 0.05%)</title><rect x="6.0558%" y="933" width="0.0456%" height="15" fill="rgb(207,226,32)" fg:x="4513" fg:w="34"/><text x="6.3058%" y="943.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;winit::platform_impl::platform::window::Window,winit::platform_impl::platform::event_loop::WindowData&lt;tuple$&lt;&gt; &gt; &gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;tuple$&lt;winit::platform_impl::platform::window::Window,winit::platform_impl::platform::event_loop::WindowData&lt;tuple$&lt;&gt; &gt; &gt; &gt; &gt;, winit::platform_impl::platform::window::impl$2::on_nccreate::closure_env$1&lt;tuple$ (34 samples, 0.05%)</title><rect x="6.0558%" y="917" width="0.0456%" height="15" fill="rgb(222,207,47)" fg:x="4513" fg:w="34"/><text x="6.3058%" y="927.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::runner::EventLoopRunner&lt;tuple$&lt;&gt; &gt;::catch_unwind&lt;tuple$&lt;&gt;,tuple$&lt;winit::platform_impl::platform::window::Window,winit::platform_impl::platform::event_loop::WindowData&lt;tuple$&lt;&gt; &gt; &gt;,winit::platform_impl::platform::window::impl$2::on_nccreate::closure_env$0&lt;tuple$&lt;&gt; &gt; &gt;(winit::platform_impl::platform::window::impl$2::on_nccreate::closure_env$0&lt;tuple$ (34 samples, 0.05%)</title><rect x="6.0558%" y="901" width="0.0456%" height="15" fill="rgb(229,115,45)" fg:x="4513" fg:w="34"/><text x="6.3058%" y="911.50"></text></g><g><title>gbemu.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::platform::window::impl$2::on_nccreate::closure_env$0&lt;tuple$ (34 samples, 0.05%)</title><rect x="6.0558%" y="885" width="0.0456%" height="15" fill="rgb(224,191,6)" fg:x="4513" fg:w="34"/><text x="6.3058%" y="895.50"></text></g><g><title>gbemu.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::platform::window::impl$2::on_nccreate::closure_env$0&lt;tuple$ (34 samples, 0.05%)</title><rect x="6.0558%" y="869" width="0.0456%" height="15" fill="rgb(230,227,24)" fg:x="4513" fg:w="34"/><text x="6.3058%" y="879.50"></text></g><g><title>gbemu.exe`std::panicking::try::do_call (34 samples, 0.05%)</title><rect x="6.0558%" y="853" width="0.0456%" height="15" fill="rgb(228,80,19)" fg:x="4513" fg:w="34"/><text x="6.3058%" y="863.50"></text></g><g><title>gbemu.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::platform::window::impl$2::on_nccreate::closure_env$0&lt;tuple$ (34 samples, 0.05%)</title><rect x="6.0558%" y="837" width="0.0456%" height="15" fill="rgb(247,229,0)" fg:x="4513" fg:w="34"/><text x="6.3058%" y="847.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window::impl$2::on_nccreate::closure$0(winit::platform_impl::platform::window::impl$2::on_nccreate::closure_env$0&lt;tuple$ (34 samples, 0.05%)</title><rect x="6.0558%" y="821" width="0.0456%" height="15" fill="rgb(237,194,15)" fg:x="4513" fg:w="34"/><text x="6.3058%" y="831.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window::InitData&lt;tuple$&lt;&gt; &gt;::create_window_data&lt;tuple$&lt;&gt; &gt; (28 samples, 0.04%)</title><rect x="6.0639%" y="805" width="0.0376%" height="15" fill="rgb(219,203,20)" fg:x="4519" fg:w="28"/><text x="6.3139%" y="815.50"></text></g><g><title>gbemu.exe`gbemu::gb::gbwindow::GBWindow::new(gbemu::gb::gbwindow::WindowType, winit::event_loop::EventLoop&lt;tuple$ (2,351 samples, 3.15%)</title><rect x="2.9481%" y="1141" width="3.1547%" height="15" fill="rgb(234,128,8)" fg:x="2197" fg:w="2351"/><text x="3.1981%" y="1151.50">gbe..</text></g><g><title>gbemu.exe`winit::window::WindowBuilder::build(winit::window::WindowBuilder, winit::event_loop::EventLoopWindowTarget&lt;tuple$ (107 samples, 0.14%)</title><rect x="5.9592%" y="1125" width="0.1436%" height="15" fill="rgb(248,202,8)" fg:x="4441" fg:w="107"/><text x="6.2092%" y="1135.50"></text></g><g><title>gbemu.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result (107 samples, 0.14%)</title><rect x="5.9592%" y="1109" width="0.1436%" height="15" fill="rgb(206,104,37)" fg:x="4441" fg:w="107"/><text x="6.2092%" y="1119.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window::init&lt;tuple$&lt;&gt; &gt;(winit::window::WindowAttributes, winit::platform_impl::platform::PlatformSpecificWindowBuilderAttributes, winit::platform_impl::platform::event_loop::EventLoopWindowTarget&lt;tuple$ (107 samples, 0.14%)</title><rect x="5.9592%" y="1093" width="0.1436%" height="15" fill="rgb(223,8,27)" fg:x="4441" fg:w="107"/><text x="6.2092%" y="1103.50"></text></g><g><title>`0x7FF85CC435C2 (107 samples, 0.14%)</title><rect x="5.9592%" y="1077" width="0.1436%" height="15" fill="rgb(216,217,28)" fg:x="4441" fg:w="107"/><text x="6.2092%" y="1087.50"></text></g><g><title>`0x7FF85CC437B7 (107 samples, 0.14%)</title><rect x="5.9592%" y="1061" width="0.1436%" height="15" fill="rgb(249,199,1)" fg:x="4441" fg:w="107"/><text x="6.2092%" y="1071.50"></text></g><g><title>`0x7FF85CC43C2A (107 samples, 0.14%)</title><rect x="5.9592%" y="1045" width="0.1436%" height="15" fill="rgb(240,85,17)" fg:x="4441" fg:w="107"/><text x="6.2092%" y="1055.50"></text></g><g><title>`0x7FF85C7D2084 (107 samples, 0.14%)</title><rect x="5.9592%" y="1029" width="0.1436%" height="15" fill="rgb(206,108,45)" fg:x="4441" fg:w="107"/><text x="6.2092%" y="1039.50"></text></g><g><title>`0x7FF85EBC5B24 (105 samples, 0.14%)</title><rect x="5.9619%" y="1013" width="0.1409%" height="15" fill="rgb(245,210,41)" fg:x="4443" fg:w="105"/><text x="6.2119%" y="1023.50"></text></g><g><title>`0x7FFFD871EA4B (12 samples, 0.02%)</title><rect x="6.1055%" y="725" width="0.0161%" height="15" fill="rgb(206,13,37)" fg:x="4550" fg:w="12"/><text x="6.3555%" y="735.50"></text></g><g><title>`0x7FFFD871D127 (12 samples, 0.02%)</title><rect x="6.1055%" y="709" width="0.0161%" height="15" fill="rgb(250,61,18)" fg:x="4550" fg:w="12"/><text x="6.3555%" y="719.50"></text></g><g><title>`0x7FFFD8666A5B (12 samples, 0.02%)</title><rect x="6.1055%" y="693" width="0.0161%" height="15" fill="rgb(235,172,48)" fg:x="4550" fg:w="12"/><text x="6.3555%" y="703.50"></text></g><g><title>`0x7FFFD86668C0 (12 samples, 0.02%)</title><rect x="6.1055%" y="677" width="0.0161%" height="15" fill="rgb(249,201,17)" fg:x="4550" fg:w="12"/><text x="6.3555%" y="687.50"></text></g><g><title>`0x7FFFD866B179 (12 samples, 0.02%)</title><rect x="6.1055%" y="661" width="0.0161%" height="15" fill="rgb(219,208,6)" fg:x="4550" fg:w="12"/><text x="6.3555%" y="671.50"></text></g><g><title>`0x7FFFABDE5D58 (11 samples, 0.01%)</title><rect x="6.1068%" y="645" width="0.0148%" height="15" fill="rgb(248,31,23)" fg:x="4551" fg:w="11"/><text x="6.3568%" y="655.50"></text></g><g><title>`0x7FFFABDE2B42 (11 samples, 0.01%)</title><rect x="6.1068%" y="629" width="0.0148%" height="15" fill="rgb(245,15,42)" fg:x="4551" fg:w="11"/><text x="6.3568%" y="639.50"></text></g><g><title>`0x7FFFD8324436 (9 samples, 0.01%)</title><rect x="6.1364%" y="677" width="0.0121%" height="15" fill="rgb(222,217,39)" fg:x="4573" fg:w="9"/><text x="6.3864%" y="687.50"></text></g><g><title>`0x7FFFD8751917 (22 samples, 0.03%)</title><rect x="6.1364%" y="709" width="0.0295%" height="15" fill="rgb(210,219,27)" fg:x="4573" fg:w="22"/><text x="6.3864%" y="719.50"></text></g><g><title>`0x7FFFD8305467 (22 samples, 0.03%)</title><rect x="6.1364%" y="693" width="0.0295%" height="15" fill="rgb(252,166,36)" fg:x="4573" fg:w="22"/><text x="6.3864%" y="703.50"></text></g><g><title>`0x7FFFD871EC32 (23 samples, 0.03%)</title><rect x="6.1364%" y="725" width="0.0309%" height="15" fill="rgb(245,132,34)" fg:x="4573" fg:w="23"/><text x="6.3864%" y="735.50"></text></g><g><title>`0x7FFFD8305467 (10 samples, 0.01%)</title><rect x="6.1686%" y="661" width="0.0134%" height="15" fill="rgb(236,54,3)" fg:x="4597" fg:w="10"/><text x="6.4186%" y="671.50"></text></g><g><title>`0x7FFFD871EC97 (13 samples, 0.02%)</title><rect x="6.1672%" y="725" width="0.0174%" height="15" fill="rgb(241,173,43)" fg:x="4596" fg:w="13"/><text x="6.4172%" y="735.50"></text></g><g><title>`0x7FFFD875CE39 (13 samples, 0.02%)</title><rect x="6.1672%" y="709" width="0.0174%" height="15" fill="rgb(215,190,9)" fg:x="4596" fg:w="13"/><text x="6.4172%" y="719.50"></text></g><g><title>`0x7FFFD875C911 (13 samples, 0.02%)</title><rect x="6.1672%" y="693" width="0.0174%" height="15" fill="rgb(242,101,16)" fg:x="4596" fg:w="13"/><text x="6.4172%" y="703.50"></text></g><g><title>`0x7FFFD877331F (13 samples, 0.02%)</title><rect x="6.1672%" y="677" width="0.0174%" height="15" fill="rgb(223,190,21)" fg:x="4596" fg:w="13"/><text x="6.4172%" y="687.50"></text></g><g><title>`0x7FFFD8324436 (10 samples, 0.01%)</title><rect x="6.1967%" y="629" width="0.0134%" height="15" fill="rgb(215,228,25)" fg:x="4618" fg:w="10"/><text x="6.4467%" y="639.50"></text></g><g><title>`0x7FFFD832866B (8 samples, 0.01%)</title><rect x="6.1994%" y="613" width="0.0107%" height="15" fill="rgb(225,36,22)" fg:x="4620" fg:w="8"/><text x="6.4494%" y="623.50"></text></g><g><title>`0x7FFFD87B8ADC (22 samples, 0.03%)</title><rect x="6.1941%" y="661" width="0.0295%" height="15" fill="rgb(251,106,46)" fg:x="4616" fg:w="22"/><text x="6.4441%" y="671.50"></text></g><g><title>`0x7FFFD8305467 (21 samples, 0.03%)</title><rect x="6.1954%" y="645" width="0.0282%" height="15" fill="rgb(208,90,1)" fg:x="4617" fg:w="21"/><text x="6.4454%" y="655.50"></text></g><g><title>`0x7FFFD871EE33 (23 samples, 0.03%)</title><rect x="6.1941%" y="725" width="0.0309%" height="15" fill="rgb(243,10,4)" fg:x="4616" fg:w="23"/><text x="6.4441%" y="735.50"></text></g><g><title>`0x7FFFD8720781 (23 samples, 0.03%)</title><rect x="6.1941%" y="709" width="0.0309%" height="15" fill="rgb(212,137,27)" fg:x="4616" fg:w="23"/><text x="6.4441%" y="719.50"></text></g><g><title>`0x7FFFD872E565 (23 samples, 0.03%)</title><rect x="6.1941%" y="693" width="0.0309%" height="15" fill="rgb(231,220,49)" fg:x="4616" fg:w="23"/><text x="6.4441%" y="703.50"></text></g><g><title>`0x7FFFD872EAD6 (23 samples, 0.03%)</title><rect x="6.1941%" y="677" width="0.0309%" height="15" fill="rgb(237,96,20)" fg:x="4616" fg:w="23"/><text x="6.4441%" y="687.50"></text></g><g><title>`0x7FF813C2F74C (92 samples, 0.12%)</title><rect x="6.1042%" y="821" width="0.1235%" height="15" fill="rgb(239,229,30)" fg:x="4549" fg:w="92"/><text x="6.3542%" y="831.50"></text></g><g><title>`0x7FFFD86043A1 (92 samples, 0.12%)</title><rect x="6.1042%" y="805" width="0.1235%" height="15" fill="rgb(219,65,33)" fg:x="4549" fg:w="92"/><text x="6.3542%" y="815.50"></text></g><g><title>`0x7FFFD860A6FA (92 samples, 0.12%)</title><rect x="6.1042%" y="789" width="0.1235%" height="15" fill="rgb(243,134,7)" fg:x="4549" fg:w="92"/><text x="6.3542%" y="799.50"></text></g><g><title>`0x7FF82F43CFE6 (92 samples, 0.12%)</title><rect x="6.1042%" y="773" width="0.1235%" height="15" fill="rgb(216,177,54)" fg:x="4549" fg:w="92"/><text x="6.3542%" y="783.50"></text></g><g><title>`0x7FF813C476A4 (91 samples, 0.12%)</title><rect x="6.1055%" y="757" width="0.1221%" height="15" fill="rgb(211,160,20)" fg:x="4550" fg:w="91"/><text x="6.3555%" y="767.50"></text></g><g><title>`0x7FFFD871D727 (91 samples, 0.12%)</title><rect x="6.1055%" y="741" width="0.1221%" height="15" fill="rgb(239,85,39)" fg:x="4550" fg:w="91"/><text x="6.3555%" y="751.50"></text></g><g><title>`0x7FF813C3959A (93 samples, 0.12%)</title><rect x="6.1042%" y="837" width="0.1248%" height="15" fill="rgb(232,125,22)" fg:x="4549" fg:w="93"/><text x="6.3542%" y="847.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::result::Result&lt;wgpu_hal::OpenDevice&lt;wgpu_hal::vulkan::Api&gt;,wgpu_hal::DeviceError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;wgpu_hal::OpenDevice&lt;wgpu_hal::vulkan::Api&gt;,wgpu_hal::DeviceError&gt; &gt;, wgpu_core::instance::impl$3::create_device_and_queue::closure_env$0 (95 samples, 0.13%)</title><rect x="6.1028%" y="933" width="0.1275%" height="15" fill="rgb(244,57,34)" fg:x="4548" fg:w="95"/><text x="6.3528%" y="943.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::adapter::impl$9::open (95 samples, 0.13%)</title><rect x="6.1028%" y="917" width="0.1275%" height="15" fill="rgb(214,203,32)" fg:x="4548" fg:w="95"/><text x="6.3528%" y="927.50"></text></g><g><title>gbemu.exe`ash::instance::Instance::create_device(ash::vk::definitions::PhysicalDevice, ash::vk::definitions::DeviceCreateInfo*, enum2$&lt;core::option::Option&lt;ref$ (95 samples, 0.13%)</title><rect x="6.1028%" y="901" width="0.1275%" height="15" fill="rgb(207,58,43)" fg:x="4548" fg:w="95"/><text x="6.3528%" y="911.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result (95 samples, 0.13%)</title><rect x="6.1028%" y="885" width="0.1275%" height="15" fill="rgb(215,193,15)" fg:x="4548" fg:w="95"/><text x="6.3528%" y="895.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result_with_success(ash::vk::enums::Result, tuple$ (95 samples, 0.13%)</title><rect x="6.1028%" y="869" width="0.1275%" height="15" fill="rgb(232,15,44)" fg:x="4548" fg:w="95"/><text x="6.3528%" y="879.50"></text></g><g><title>`0x7FF813C51625 (95 samples, 0.13%)</title><rect x="6.1028%" y="853" width="0.1275%" height="15" fill="rgb(212,3,48)" fg:x="4548" fg:w="95"/><text x="6.3528%" y="863.50"></text></g><g><title>gbemu.exe`wgpu::Adapter::request_device(wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$ (99 samples, 0.13%)</title><rect x="6.1028%" y="1013" width="0.1328%" height="15" fill="rgb(218,128,7)" fg:x="4548" fg:w="99"/><text x="6.3528%" y="1023.50"></text></g><g><title>gbemu.exe`wgpu::context::impl$5::adapter_request_device&lt;wgpu::backend::wgpu_core::ContextWgpuCore&gt;(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu::context::ObjectId*, ref$&lt;dyn$&lt;core::any::Any,core::marker::Send,core::marker::Sync&gt; &gt;, wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$ (99 samples, 0.13%)</title><rect x="6.1028%" y="997" width="0.1328%" height="15" fill="rgb(226,216,39)" fg:x="4548" fg:w="99"/><text x="6.3528%" y="1007.50"></text></g><g><title>gbemu.exe`wgpu::backend::wgpu_core::impl$7::adapter_request_device(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu_core::id::Id&lt;wgpu_core::instance::Adapter&lt;wgpu_hal::empty::Api&gt; &gt;*, tuple$&lt;&gt;*, wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$ (99 samples, 0.13%)</title><rect x="6.1028%" y="981" width="0.1328%" height="15" fill="rgb(243,47,51)" fg:x="4548" fg:w="99"/><text x="6.3528%" y="991.50"></text></g><g><title>gbemu.exe`wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;::adapter_request_device&lt;wgpu_core::identity::IdentityManagerFactory,wgpu_hal::vulkan::Api&gt;(wgpu_core::id::Id&lt;wgpu_core::instance::Adapter&lt;wgpu_hal::empty::Api&gt; &gt;, wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$&lt;std::path::Path&gt; &gt; &gt;, tuple$&lt;&gt;, tuple$ (99 samples, 0.13%)</title><rect x="6.1028%" y="965" width="0.1328%" height="15" fill="rgb(241,183,40)" fg:x="4548" fg:w="99"/><text x="6.3528%" y="975.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::Adapter&lt;wgpu_hal::vulkan::Api&gt;::create_device_and_queue&lt;wgpu_hal::vulkan::Api&gt;(alloc::sync::Arc&lt;wgpu_core::instance::Adapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;*, wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt; &gt; &gt; &gt;*, wgpu_types::InstanceFlags, enum2$&lt;core::option::Option&lt;ref$ (99 samples, 0.13%)</title><rect x="6.1028%" y="949" width="0.1328%" height="15" fill="rgb(231,217,32)" fg:x="4548" fg:w="99"/><text x="6.3528%" y="959.50"></text></g><g><title>gbemu.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global&gt;*, core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (19 samples, 0.03%)</title><rect x="6.2437%" y="869" width="0.0255%" height="15" fill="rgb(229,61,38)" fg:x="4653" fg:w="19"/><text x="6.4937%" y="879.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (19 samples, 0.03%)</title><rect x="6.2437%" y="853" width="0.0255%" height="15" fill="rgb(225,210,5)" fg:x="4653" fg:w="19"/><text x="6.4937%" y="863.50"></text></g><g><title>gbemu.exe`core::iter::adapters::filter_map::impl$2::next(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (19 samples, 0.03%)</title><rect x="6.2437%" y="837" width="0.0255%" height="15" fill="rgb(231,79,45)" fg:x="4653" fg:w="19"/><text x="6.4937%" y="847.50"></text></g><g><title>gbemu.exe`core::iter::traits::iterator::Iterator::find_map(alloc::vec::into_iter::IntoIter&lt;enum2$ (19 samples, 0.03%)</title><rect x="6.2437%" y="821" width="0.0255%" height="15" fill="rgb(224,100,7)" fg:x="4653" fg:w="19"/><text x="6.4937%" y="831.50"></text></g><g><title>gbemu.exe`alloc::vec::into_iter::impl$5::try_fold(alloc::vec::into_iter::IntoIter&lt;enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;,alloc::alloc::Global&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;,wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,ref_mut$ (19 samples, 0.03%)</title><rect x="6.2437%" y="805" width="0.0255%" height="15" fill="rgb(241,198,18)" fg:x="4653" fg:w="19"/><text x="6.4937%" y="815.50"></text></g><g><title>gbemu.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;,wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,ref_mut$&lt;wgpu_hal::dx12::instance::impl$1::enumerate_adapters::closure_env$0&gt; &gt;*, tuple$&lt;&gt;, enum2$ (19 samples, 0.03%)</title><rect x="6.2437%" y="789" width="0.0255%" height="15" fill="rgb(252,97,53)" fg:x="4653" fg:w="19"/><text x="6.4937%" y="799.50"></text></g><g><title>gbemu.exe`wgpu_hal::dx12::Adapter::expose(enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;, alloc::sync::Arc&lt;d3d12::D3D12Lib,alloc::alloc::Global&gt;*, wgpu_types::InstanceFlags, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (19 samples, 0.03%)</title><rect x="6.2437%" y="773" width="0.0255%" height="15" fill="rgb(220,88,7)" fg:x="4653" fg:w="19"/><text x="6.4937%" y="783.50"></text></g><g><title>gbemu.exe`d3d12::D3D12Lib::create_device(d3d12::com::ComPtr (19 samples, 0.03%)</title><rect x="6.2437%" y="757" width="0.0255%" height="15" fill="rgb(213,176,14)" fg:x="4653" fg:w="19"/><text x="6.4937%" y="767.50"></text></g><g><title>`0x7FF82E8C8B0B (19 samples, 0.03%)</title><rect x="6.2437%" y="741" width="0.0255%" height="15" fill="rgb(246,73,7)" fg:x="4653" fg:w="19"/><text x="6.4937%" y="751.50"></text></g><g><title>`0x7FF82E8C69D3 (19 samples, 0.03%)</title><rect x="6.2437%" y="725" width="0.0255%" height="15" fill="rgb(245,64,36)" fg:x="4653" fg:w="19"/><text x="6.4937%" y="735.50"></text></g><g><title>`0x7FFFDC3133C8 (19 samples, 0.03%)</title><rect x="6.2437%" y="709" width="0.0255%" height="15" fill="rgb(245,80,10)" fg:x="4653" fg:w="19"/><text x="6.4937%" y="719.50"></text></g><g><title>`0x7FFFDC3135A5 (19 samples, 0.03%)</title><rect x="6.2437%" y="693" width="0.0255%" height="15" fill="rgb(232,107,50)" fg:x="4653" fg:w="19"/><text x="6.4937%" y="703.50"></text></g><g><title>`0x7FFFDC2D12ED (12 samples, 0.02%)</title><rect x="6.2531%" y="677" width="0.0161%" height="15" fill="rgb(253,3,0)" fg:x="4660" fg:w="12"/><text x="6.5031%" y="687.50"></text></g><g><title>`0x7FFFDC2D25C2 (12 samples, 0.02%)</title><rect x="6.2531%" y="661" width="0.0161%" height="15" fill="rgb(212,99,53)" fg:x="4660" fg:w="12"/><text x="6.5031%" y="671.50"></text></g><g><title>`0x7FF82E8C1C6B (12 samples, 0.02%)</title><rect x="6.2531%" y="645" width="0.0161%" height="15" fill="rgb(249,111,54)" fg:x="4660" fg:w="12"/><text x="6.5031%" y="655.50"></text></g><g><title>`0x7FF82E8C1DDA (12 samples, 0.02%)</title><rect x="6.2531%" y="629" width="0.0161%" height="15" fill="rgb(249,55,30)" fg:x="4660" fg:w="12"/><text x="6.5031%" y="639.50"></text></g><g><title>`0x7FF82E8C1F98 (12 samples, 0.02%)</title><rect x="6.2531%" y="613" width="0.0161%" height="15" fill="rgb(237,47,42)" fg:x="4660" fg:w="12"/><text x="6.5031%" y="623.50"></text></g><g><title>`0x7FFFDC2B6B3A (12 samples, 0.02%)</title><rect x="6.2531%" y="597" width="0.0161%" height="15" fill="rgb(211,20,18)" fg:x="4660" fg:w="12"/><text x="6.5031%" y="607.50"></text></g><g><title>`0x7FFFDC322CCB (9 samples, 0.01%)</title><rect x="6.2571%" y="581" width="0.0121%" height="15" fill="rgb(231,203,46)" fg:x="4663" fg:w="9"/><text x="6.5071%" y="591.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::impl$6::request_adapter::gather&lt;wgpu_hal::dx12::Api,tuple$&lt;&gt; &gt;(wgpu_hal::dx12::Api, enum2$&lt;core::option::Option&lt;ref$&lt;wgpu_hal::dx12::Instance&gt; &gt; &gt;, enum2$&lt;wgpu_core::instance::AdapterInputs&lt;tuple$&lt;&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$&lt;wgpu_core::instance::Surface&gt; &gt; &gt;, bool, alloc::vec::Vec (26 samples, 0.03%)</title><rect x="6.2357%" y="949" width="0.0349%" height="15" fill="rgb(237,142,3)" fg:x="4647" fg:w="26"/><text x="6.4857%" y="959.50"></text></g><g><title>gbemu.exe`wgpu_hal::dx12::instance::impl$1::enumerate_adapters (22 samples, 0.03%)</title><rect x="6.2410%" y="933" width="0.0295%" height="15" fill="rgb(241,107,1)" fg:x="4651" fg:w="22"/><text x="6.4910%" y="943.50"></text></g><g><title>gbemu.exe`alloc::vec::in_place_collect::impl$1::from_iter&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$&lt;d3d12::dxgi::DxgiAdapter&gt;,alloc::alloc::Global&gt;,wgpu_hal::dx12::instance::impl$1::enumerate_adapters::closure_env$0&gt; &gt;(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (20 samples, 0.03%)</title><rect x="6.2437%" y="917" width="0.0268%" height="15" fill="rgb(229,83,13)" fg:x="4653" fg:w="20"/><text x="6.4937%" y="927.50"></text></g><g><title>gbemu.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (20 samples, 0.03%)</title><rect x="6.2437%" y="901" width="0.0268%" height="15" fill="rgb(241,91,40)" fg:x="4653" fg:w="20"/><text x="6.4937%" y="911.50"></text></g><g><title>gbemu.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (20 samples, 0.03%)</title><rect x="6.2437%" y="885" width="0.0268%" height="15" fill="rgb(225,3,45)" fg:x="4653" fg:w="20"/><text x="6.4937%" y="895.50"></text></g><g><title>gbemu.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::SurfaceFormatKHR,ash::extensions::khr::surface::impl$0::get_physical_device_surface_formats::closure_env$0&gt; (10 samples, 0.01%)</title><rect x="6.2719%" y="725" width="0.0134%" height="15" fill="rgb(244,223,14)" fg:x="4674" fg:w="10"/><text x="6.5219%" y="735.50"></text></g><g><title>gbemu.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter (12 samples, 0.02%)</title><rect x="6.2719%" y="933" width="0.0161%" height="15" fill="rgb(224,124,37)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="943.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;::as_slice (12 samples, 0.02%)</title><rect x="6.2719%" y="917" width="0.0161%" height="15" fill="rgb(251,171,30)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="927.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;::as_ptr (12 samples, 0.02%)</title><rect x="6.2719%" y="901" width="0.0161%" height="15" fill="rgb(236,46,54)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="911.50"></text></g><g><title>gbemu.exe`alloc::raw_vec::RawVec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;::ptr (12 samples, 0.02%)</title><rect x="6.2719%" y="885" width="0.0161%" height="15" fill="rgb(245,213,5)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="895.50"></text></g><g><title>gbemu.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (12 samples, 0.02%)</title><rect x="6.2719%" y="869" width="0.0161%" height="15" fill="rgb(230,144,27)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="879.50"></text></g><g><title>gbemu.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (12 samples, 0.02%)</title><rect x="6.2719%" y="853" width="0.0161%" height="15" fill="rgb(220,86,6)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="863.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;::retain&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global,wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::vulkan::Api,tuple$&lt;&gt; &gt; &gt;(wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::vulkan::Api,tuple$ (12 samples, 0.02%)</title><rect x="6.2719%" y="837" width="0.0161%" height="15" fill="rgb(240,20,13)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="847.50"></text></g><g><title>gbemu.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global,wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::vulkan::Api,tuple$ (12 samples, 0.02%)</title><rect x="6.2719%" y="821" width="0.0161%" height="15" fill="rgb(217,89,34)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="831.50"></text></g><g><title>gbemu.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global,wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::vulkan::Api,tuple$&lt;&gt; &gt; &gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop&lt;wgpu_hal::ExposedAdapter (12 samples, 0.02%)</title><rect x="6.2719%" y="805" width="0.0161%" height="15" fill="rgb(229,13,5)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="815.50"></text></g><g><title>gbemu.exe`alloc::vec::impl$1::retain::closure$0(alloc::vec::impl$1::retain::closure_env$0&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global,wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::vulkan::Api,tuple$&lt;&gt; &gt; &gt;*, wgpu_hal::ExposedAdapter (12 samples, 0.02%)</title><rect x="6.2719%" y="789" width="0.0161%" height="15" fill="rgb(244,67,35)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="799.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::impl$6::request_adapter::gather::closure$1(wgpu_core::instance::impl$6::request_adapter::gather::closure_env$1&lt;wgpu_hal::vulkan::Api,tuple$&lt;&gt; &gt;*, wgpu_hal::ExposedAdapter (12 samples, 0.02%)</title><rect x="6.2719%" y="773" width="0.0161%" height="15" fill="rgb(221,40,2)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="783.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::option::Option&lt;wgpu_hal::SurfaceCapabilities&gt; &gt;::is_some (12 samples, 0.02%)</title><rect x="6.2719%" y="757" width="0.0161%" height="15" fill="rgb(237,157,21)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="767.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::adapter::impl$9::surface_capabilities (12 samples, 0.02%)</title><rect x="6.2719%" y="741" width="0.0161%" height="15" fill="rgb(222,94,11)" fg:x="4674" fg:w="12"/><text x="6.5219%" y="751.50"></text></g><g><title>gbemu.exe`core::future::into_future::impl$0::into_future(enum2$ (147 samples, 0.20%)</title><rect x="6.1028%" y="1029" width="0.1973%" height="15" fill="rgb(249,113,6)" fg:x="4548" fg:w="147"/><text x="6.3528%" y="1039.50"></text></g><g><title>gbemu.exe`wgpu::Instance::request_adapter(wgpu_types::RequestAdapterOptions&lt;ref$ (48 samples, 0.06%)</title><rect x="6.2357%" y="1013" width="0.0644%" height="15" fill="rgb(238,137,36)" fg:x="4647" fg:w="48"/><text x="6.4857%" y="1023.50"></text></g><g><title>gbemu.exe`wgpu::context::impl$5::instance_request_adapter&lt;wgpu::backend::wgpu_core::ContextWgpuCore&gt;(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu_types::RequestAdapterOptions&lt;ref$ (48 samples, 0.06%)</title><rect x="6.2357%" y="997" width="0.0644%" height="15" fill="rgb(210,102,26)" fg:x="4647" fg:w="48"/><text x="6.4857%" y="1007.50"></text></g><g><title>gbemu.exe`wgpu::backend::wgpu_core::impl$7::instance_request_adapter(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu_types::RequestAdapterOptions&lt;ref$ (48 samples, 0.06%)</title><rect x="6.2357%" y="981" width="0.0644%" height="15" fill="rgb(218,30,30)" fg:x="4647" fg:w="48"/><text x="6.4857%" y="991.50"></text></g><g><title>gbemu.exe`wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;::request_adapter&lt;wgpu_core::identity::IdentityManagerFactory&gt;(wgpu_types::RequestAdapterOptions&lt;wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt; &gt;*, enum2$&lt;wgpu_core::instance::AdapterInputs&lt;tuple$ (48 samples, 0.06%)</title><rect x="6.2357%" y="965" width="0.0644%" height="15" fill="rgb(214,67,26)" fg:x="4647" fg:w="48"/><text x="6.4857%" y="975.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::impl$6::request_adapter::gather&lt;wgpu_hal::vulkan::Api,tuple$&lt;&gt; &gt;(wgpu_hal::vulkan::Api, enum2$&lt;core::option::Option&lt;ref$&lt;wgpu_hal::vulkan::Instance&gt; &gt; &gt;, enum2$&lt;wgpu_core::instance::AdapterInputs&lt;tuple$&lt;&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$&lt;wgpu_core::instance::Surface&gt; &gt; &gt;, bool, alloc::vec::Vec (21 samples, 0.03%)</title><rect x="6.2719%" y="949" width="0.0282%" height="15" fill="rgb(251,9,53)" fg:x="4674" fg:w="21"/><text x="6.5219%" y="959.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::instance::impl$5::enumerate_adapters (9 samples, 0.01%)</title><rect x="6.2880%" y="933" width="0.0121%" height="15" fill="rgb(228,204,25)" fg:x="4686" fg:w="9"/><text x="6.5380%" y="943.50"></text></g><g><title>gbemu.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::PhysicalDevice,ash::instance::impl$4::enumerate_physical_devices::closure_env$0&gt; (9 samples, 0.01%)</title><rect x="6.2880%" y="917" width="0.0121%" height="15" fill="rgb(207,153,8)" fg:x="4686" fg:w="9"/><text x="6.5380%" y="927.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::adapter::impl$9::surface_capabilities (8 samples, 0.01%)</title><rect x="6.3054%" y="949" width="0.0107%" height="15" fill="rgb(242,9,16)" fg:x="4699" fg:w="8"/><text x="6.5554%" y="959.50"></text></g><g><title>gbemu.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::SurfaceFormatKHR,ash::extensions::khr::surface::impl$0::get_physical_device_surface_formats::closure_env$0&gt; (8 samples, 0.01%)</title><rect x="6.3054%" y="933" width="0.0107%" height="15" fill="rgb(217,211,10)" fg:x="4699" fg:w="8"/><text x="6.5554%" y="943.50"></text></g><g><title>`0x7FF8473AEF91 (12 samples, 0.02%)</title><rect x="6.3256%" y="533" width="0.0161%" height="15" fill="rgb(219,228,52)" fg:x="4714" fg:w="12"/><text x="6.5756%" y="543.50"></text></g><g><title>`0x7FF8473B10F0 (12 samples, 0.02%)</title><rect x="6.3256%" y="517" width="0.0161%" height="15" fill="rgb(231,92,29)" fg:x="4714" fg:w="12"/><text x="6.5756%" y="527.50"></text></g><g><title>`0x7FF847A0BA36 (37 samples, 0.05%)</title><rect x="6.3229%" y="581" width="0.0496%" height="15" fill="rgb(232,8,23)" fg:x="4712" fg:w="37"/><text x="6.5729%" y="591.50"></text></g><g><title>`0x7FF8479689B6 (37 samples, 0.05%)</title><rect x="6.3229%" y="565" width="0.0496%" height="15" fill="rgb(216,211,34)" fg:x="4712" fg:w="37"/><text x="6.5729%" y="575.50"></text></g><g><title>`0x7FF8474E6B2C (37 samples, 0.05%)</title><rect x="6.3229%" y="549" width="0.0496%" height="15" fill="rgb(236,151,0)" fg:x="4712" fg:w="37"/><text x="6.5729%" y="559.50"></text></g><g><title>`0x7FF847A69171 (40 samples, 0.05%)</title><rect x="6.3229%" y="677" width="0.0537%" height="15" fill="rgb(209,168,3)" fg:x="4712" fg:w="40"/><text x="6.5729%" y="687.50"></text></g><g><title>`0x7FF847A71EA0 (40 samples, 0.05%)</title><rect x="6.3229%" y="661" width="0.0537%" height="15" fill="rgb(208,129,28)" fg:x="4712" fg:w="40"/><text x="6.5729%" y="671.50"></text></g><g><title>`0x7FF8479736A5 (40 samples, 0.05%)</title><rect x="6.3229%" y="645" width="0.0537%" height="15" fill="rgb(229,78,22)" fg:x="4712" fg:w="40"/><text x="6.5729%" y="655.50"></text></g><g><title>`0x7FF847A53D7F (40 samples, 0.05%)</title><rect x="6.3229%" y="629" width="0.0537%" height="15" fill="rgb(228,187,13)" fg:x="4712" fg:w="40"/><text x="6.5729%" y="639.50"></text></g><g><title>`0x7FF847A4DC62 (40 samples, 0.05%)</title><rect x="6.3229%" y="613" width="0.0537%" height="15" fill="rgb(240,119,24)" fg:x="4712" fg:w="40"/><text x="6.5729%" y="623.50"></text></g><g><title>`0x7FF847A06655 (40 samples, 0.05%)</title><rect x="6.3229%" y="597" width="0.0537%" height="15" fill="rgb(209,194,42)" fg:x="4712" fg:w="40"/><text x="6.5729%" y="607.50"></text></g><g><title>`0x7FFFDC30B371 (43 samples, 0.06%)</title><rect x="6.3229%" y="789" width="0.0577%" height="15" fill="rgb(247,200,46)" fg:x="4712" fg:w="43"/><text x="6.5729%" y="799.50"></text></g><g><title>`0x7FF82E8C1697 (43 samples, 0.06%)</title><rect x="6.3229%" y="773" width="0.0577%" height="15" fill="rgb(218,76,16)" fg:x="4712" fg:w="43"/><text x="6.5729%" y="783.50"></text></g><g><title>`0x7FFFDC2F849B (43 samples, 0.06%)</title><rect x="6.3229%" y="757" width="0.0577%" height="15" fill="rgb(225,21,48)" fg:x="4712" fg:w="43"/><text x="6.5729%" y="767.50"></text></g><g><title>`0x7FFFDC2A62CE (43 samples, 0.06%)</title><rect x="6.3229%" y="741" width="0.0577%" height="15" fill="rgb(239,223,50)" fg:x="4712" fg:w="43"/><text x="6.5729%" y="751.50"></text></g><g><title>`0x7FFFDC2EBA2A (43 samples, 0.06%)</title><rect x="6.3229%" y="725" width="0.0577%" height="15" fill="rgb(244,45,21)" fg:x="4712" fg:w="43"/><text x="6.5729%" y="735.50"></text></g><g><title>`0x7FFFDC2EBD64 (43 samples, 0.06%)</title><rect x="6.3229%" y="709" width="0.0577%" height="15" fill="rgb(232,33,43)" fg:x="4712" fg:w="43"/><text x="6.5729%" y="719.50"></text></g><g><title>`0x7FFFDC349C25 (43 samples, 0.06%)</title><rect x="6.3229%" y="693" width="0.0577%" height="15" fill="rgb(209,8,3)" fg:x="4712" fg:w="43"/><text x="6.5729%" y="703.50"></text></g><g><title>`0x7FFFD86494AD (44 samples, 0.06%)</title><rect x="6.3229%" y="821" width="0.0590%" height="15" fill="rgb(214,25,53)" fg:x="4712" fg:w="44"/><text x="6.5729%" y="831.50"></text></g><g><title>`0x7FFFDC30B0DE (44 samples, 0.06%)</title><rect x="6.3229%" y="805" width="0.0590%" height="15" fill="rgb(254,186,54)" fg:x="4712" fg:w="44"/><text x="6.5729%" y="815.50"></text></g><g><title>`0x7FF85902321C (9 samples, 0.01%)</title><rect x="6.3819%" y="789" width="0.0121%" height="15" fill="rgb(208,174,49)" fg:x="4756" fg:w="9"/><text x="6.6319%" y="799.50"></text></g><g><title>`0x7FF8590244B3 (9 samples, 0.01%)</title><rect x="6.3819%" y="773" width="0.0121%" height="15" fill="rgb(233,191,51)" fg:x="4756" fg:w="9"/><text x="6.6319%" y="783.50"></text></g><g><title>`0x7FF85900D236 (9 samples, 0.01%)</title><rect x="6.3819%" y="757" width="0.0121%" height="15" fill="rgb(222,134,10)" fg:x="4756" fg:w="9"/><text x="6.6319%" y="767.50"></text></g><g><title>`0x7FF85900D31E (8 samples, 0.01%)</title><rect x="6.3833%" y="741" width="0.0107%" height="15" fill="rgb(230,226,20)" fg:x="4757" fg:w="8"/><text x="6.6333%" y="751.50"></text></g><g><title>`0x7FF8590236F4 (10 samples, 0.01%)</title><rect x="6.3819%" y="805" width="0.0134%" height="15" fill="rgb(251,111,25)" fg:x="4756" fg:w="10"/><text x="6.6319%" y="815.50"></text></g><g><title>`0x7FFFD863EDF2 (55 samples, 0.07%)</title><rect x="6.3229%" y="837" width="0.0738%" height="15" fill="rgb(224,40,46)" fg:x="4712" fg:w="55"/><text x="6.5729%" y="847.50"></text></g><g><title>`0x7FFFD8649536 (11 samples, 0.01%)</title><rect x="6.3819%" y="821" width="0.0148%" height="15" fill="rgb(236,108,47)" fg:x="4756" fg:w="11"/><text x="6.6319%" y="831.50"></text></g><g><title>gbemu.exe`pixels::Pixels::reconfigure_surface (73 samples, 0.10%)</title><rect x="6.3054%" y="1029" width="0.0980%" height="15" fill="rgb(234,93,0)" fg:x="4699" fg:w="73"/><text x="6.5554%" y="1039.50"></text></g><g><title>gbemu.exe`wgpu::Surface::configure(wgpu::Device*, wgpu_types::SurfaceConfiguration&lt;alloc::vec::Vec&lt;enum2$ (73 samples, 0.10%)</title><rect x="6.3054%" y="1013" width="0.0980%" height="15" fill="rgb(224,213,32)" fg:x="4699" fg:w="73"/><text x="6.5554%" y="1023.50"></text></g><g><title>gbemu.exe`wgpu::context::impl$5::surface_configure&lt;wgpu::backend::wgpu_core::ContextWgpuCore&gt;(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu::context::ObjectId*, ref$&lt;dyn$&lt;core::any::Any,core::marker::Send,core::marker::Sync&gt; &gt;, wgpu::context::ObjectId*, ref$&lt;dyn$&lt;core::any::Any,core::marker::Send,core::marker::Sync&gt; &gt;, wgpu_types::SurfaceConfiguration&lt;alloc::vec::Vec&lt;enum2$ (73 samples, 0.10%)</title><rect x="6.3054%" y="997" width="0.0980%" height="15" fill="rgb(251,11,48)" fg:x="4699" fg:w="73"/><text x="6.5554%" y="1007.50"></text></g><g><title>gbemu.exe`wgpu::backend::wgpu_core::impl$7::surface_configure(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;*, wgpu::backend::wgpu_core::Surface*, wgpu_core::id::Id&lt;wgpu_core::device::resource::Device&lt;wgpu_hal::empty::Api&gt; &gt;*, wgpu::backend::wgpu_core::Device*, wgpu_types::SurfaceConfiguration&lt;alloc::vec::Vec&lt;enum2$ (73 samples, 0.10%)</title><rect x="6.3054%" y="981" width="0.0980%" height="15" fill="rgb(236,173,5)" fg:x="4699" fg:w="73"/><text x="6.5554%" y="991.50"></text></g><g><title>gbemu.exe`wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;::surface_configure&lt;wgpu_core::identity::IdentityManagerFactory,wgpu_hal::vulkan::Api&gt;(wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;, wgpu_core::id::Id&lt;wgpu_core::device::resource::Device&lt;wgpu_hal::empty::Api&gt; &gt;, wgpu_types::SurfaceConfiguration&lt;alloc::vec::Vec&lt;enum2$ (73 samples, 0.10%)</title><rect x="6.3054%" y="965" width="0.0980%" height="15" fill="rgb(230,95,12)" fg:x="4699" fg:w="73"/><text x="6.5554%" y="975.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::instance::impl$6::configure (65 samples, 0.09%)</title><rect x="6.3162%" y="949" width="0.0872%" height="15" fill="rgb(232,209,1)" fg:x="4707" fg:w="65"/><text x="6.5662%" y="959.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::Device::create_swapchain(wgpu_hal::vulkan::Surface*, wgpu_hal::SurfaceConfiguration*, enum2$&lt;core::option::Option (64 samples, 0.09%)</title><rect x="6.3175%" y="933" width="0.0859%" height="15" fill="rgb(232,6,1)" fg:x="4708" fg:w="64"/><text x="6.5675%" y="943.50"></text></g><g><title>gbemu.exe`ash::extensions::khr::swapchain::Swapchain::create_swapchain(ash::vk::definitions::SwapchainCreateInfoKHR*, enum2$&lt;core::option::Option&lt;ref$ (64 samples, 0.09%)</title><rect x="6.3175%" y="917" width="0.0859%" height="15" fill="rgb(210,224,50)" fg:x="4708" fg:w="64"/><text x="6.5675%" y="927.50"></text></g><g><title>`0x7FF82F43DE1D (64 samples, 0.09%)</title><rect x="6.3175%" y="901" width="0.0859%" height="15" fill="rgb(228,127,35)" fg:x="4708" fg:w="64"/><text x="6.5675%" y="911.50"></text></g><g><title>`0x7FF813C57E32 (64 samples, 0.09%)</title><rect x="6.3175%" y="885" width="0.0859%" height="15" fill="rgb(245,102,45)" fg:x="4708" fg:w="64"/><text x="6.5675%" y="895.50"></text></g><g><title>`0x7FFFD863DC71 (61 samples, 0.08%)</title><rect x="6.3215%" y="869" width="0.0819%" height="15" fill="rgb(214,1,49)" fg:x="4711" fg:w="61"/><text x="6.5715%" y="879.50"></text></g><g><title>`0x7FFFD8646F0B (61 samples, 0.08%)</title><rect x="6.3215%" y="853" width="0.0819%" height="15" fill="rgb(226,163,40)" fg:x="4711" fg:w="61"/><text x="6.5715%" y="863.50"></text></g><g><title>gbemu.exe`wgpu_hal::gles::wgl::impl$11::init (19 samples, 0.03%)</title><rect x="6.4061%" y="773" width="0.0255%" height="15" fill="rgb(239,212,28)" fg:x="4774" fg:w="19"/><text x="6.6561%" y="783.50"></text></g><g><title>gbemu.exe`wgpu_hal::gles::wgl::WglContext::make_current(enum2$ (8 samples, 0.01%)</title><rect x="6.4208%" y="757" width="0.0107%" height="15" fill="rgb(220,20,13)" fg:x="4785" fg:w="8"/><text x="6.6708%" y="767.50"></text></g><g><title>`0x7FF832BD51CC (8 samples, 0.01%)</title><rect x="6.4208%" y="741" width="0.0107%" height="15" fill="rgb(210,164,35)" fg:x="4785" fg:w="8"/><text x="6.6708%" y="751.50"></text></g><g><title>`0x7FF832BD565D (8 samples, 0.01%)</title><rect x="6.4208%" y="725" width="0.0107%" height="15" fill="rgb(248,109,41)" fg:x="4785" fg:w="8"/><text x="6.6708%" y="735.50"></text></g><g><title>`0x7FFFD82661DD (8 samples, 0.01%)</title><rect x="6.4208%" y="709" width="0.0107%" height="15" fill="rgb(238,23,50)" fg:x="4785" fg:w="8"/><text x="6.6708%" y="719.50"></text></g><g><title>gbemu.exe`ash::entry::Entry::create_instance(ash::vk::definitions::InstanceCreateInfo*, enum2$&lt;core::option::Option&lt;ref$ (9 samples, 0.01%)</title><rect x="6.4316%" y="757" width="0.0121%" height="15" fill="rgb(211,48,49)" fg:x="4793" fg:w="9"/><text x="6.6816%" y="767.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result (9 samples, 0.01%)</title><rect x="6.4316%" y="741" width="0.0121%" height="15" fill="rgb(223,36,21)" fg:x="4793" fg:w="9"/><text x="6.6816%" y="751.50"></text></g><g><title>gbemu.exe`ash::vk::enums::Result::result_with_success(ash::vk::enums::Result, tuple$ (9 samples, 0.01%)</title><rect x="6.4316%" y="725" width="0.0121%" height="15" fill="rgb(207,123,46)" fg:x="4793" fg:w="9"/><text x="6.6816%" y="735.50"></text></g><g><title>gbemu.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;ref$ (13 samples, 0.02%)</title><rect x="6.4477%" y="757" width="0.0174%" height="15" fill="rgb(240,218,32)" fg:x="4805" fg:w="13"/><text x="6.6977%" y="767.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::Instance::desired_extensions (13 samples, 0.02%)</title><rect x="6.4477%" y="741" width="0.0174%" height="15" fill="rgb(252,5,43)" fg:x="4805" fg:w="13"/><text x="6.6977%" y="751.50"></text></g><g><title>gbemu.exe`ash::entry::Entry::enumerate_instance_extension_properties(enum2$&lt;core::option::Option&lt;ref$ (13 samples, 0.02%)</title><rect x="6.4477%" y="725" width="0.0174%" height="15" fill="rgb(252,84,19)" fg:x="4805" fg:w="13"/><text x="6.6977%" y="735.50"></text></g><g><title>gbemu.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::ExtensionProperties,ash::entry::impl$0::enumerate_instance_extension_properties::closure_env$0&gt; (13 samples, 0.02%)</title><rect x="6.4477%" y="709" width="0.0174%" height="15" fill="rgb(243,152,39)" fg:x="4805" fg:w="13"/><text x="6.6977%" y="719.50"></text></g><g><title>gbemu.exe`wgpu::Instance::new (54 samples, 0.07%)</title><rect x="6.4034%" y="1029" width="0.0725%" height="15" fill="rgb(234,160,15)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="1039.50"></text></g><g><title>gbemu.exe`alloc::sync::impl$63::from (54 samples, 0.07%)</title><rect x="6.4034%" y="1013" width="0.0725%" height="15" fill="rgb(237,34,20)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="1023.50"></text></g><g><title>gbemu.exe`alloc::sync::Arc&lt;wgpu::backend::wgpu_core::ContextWgpuCore,alloc::alloc::Global&gt;::new (54 samples, 0.07%)</title><rect x="6.4034%" y="997" width="0.0725%" height="15" fill="rgb(229,97,13)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="1007.50"></text></g><g><title>gbemu.exe`wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;::new&lt;wgpu_core::identity::IdentityManagerFactory&gt;(ref$ (54 samples, 0.07%)</title><rect x="6.4034%" y="981" width="0.0725%" height="15" fill="rgb(234,71,50)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="991.50"></text></g><g><title>gbemu.exe`wgpu_core::registry::Registry&lt;wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;,wgpu_core::instance::Surface&gt;::without_backend (54 samples, 0.07%)</title><rect x="6.4034%" y="965" width="0.0725%" height="15" fill="rgb(253,155,4)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="975.50"></text></g><g><title>gbemu.exe`wgpu_core::registry::Registry&lt;wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;,wgpu_core::instance::Surface&gt;::new (54 samples, 0.07%)</title><rect x="6.4034%" y="949" width="0.0725%" height="15" fill="rgb(222,185,37)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="959.50"></text></g><g><title>gbemu.exe`wgpu_core::identity::IdentityHandlerFactory::spawn (54 samples, 0.07%)</title><rect x="6.4034%" y="933" width="0.0725%" height="15" fill="rgb(251,177,13)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="943.50"></text></g><g><title>gbemu.exe`alloc::sync::Arc&lt;wgpu_core::identity::IdentityManager&lt;wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt; &gt;,alloc::alloc::Global&gt;::new(wgpu_core::identity::IdentityManager&lt;wgpu_core::id::Id (54 samples, 0.07%)</title><rect x="6.4034%" y="917" width="0.0725%" height="15" fill="rgb(250,179,40)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="927.50"></text></g><g><title>gbemu.exe`alloc::boxed::impl$0::new(alloc::sync::ArcInner&lt;wgpu_core::identity::IdentityManager&lt;wgpu_core::id::Id (54 samples, 0.07%)</title><rect x="6.4034%" y="901" width="0.0725%" height="15" fill="rgb(242,44,2)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="911.50"></text></g><g><title>gbemu.exe`alloc::alloc::exchange_malloc (54 samples, 0.07%)</title><rect x="6.4034%" y="885" width="0.0725%" height="15" fill="rgb(216,177,13)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="895.50"></text></g><g><title>gbemu.exe`alloc::alloc::impl$1::allocate (54 samples, 0.07%)</title><rect x="6.4034%" y="869" width="0.0725%" height="15" fill="rgb(216,106,43)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="879.50"></text></g><g><title>gbemu.exe`alloc::alloc::Global::alloc_impl (54 samples, 0.07%)</title><rect x="6.4034%" y="853" width="0.0725%" height="15" fill="rgb(216,183,2)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="863.50"></text></g><g><title>gbemu.exe`alloc::alloc::alloc (54 samples, 0.07%)</title><rect x="6.4034%" y="837" width="0.0725%" height="15" fill="rgb(249,75,3)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="847.50"></text></g><g><title>gbemu.exe`core::ptr::read_volatile (54 samples, 0.07%)</title><rect x="6.4034%" y="821" width="0.0725%" height="15" fill="rgb(219,67,39)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="831.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::Instance::new(ref$ (54 samples, 0.07%)</title><rect x="6.4034%" y="805" width="0.0725%" height="15" fill="rgb(253,228,2)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="815.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::impl$0::new::init (54 samples, 0.07%)</title><rect x="6.4034%" y="789" width="0.0725%" height="15" fill="rgb(235,138,27)" fg:x="4772" fg:w="54"/><text x="6.6534%" y="799.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::instance::impl$5::init (33 samples, 0.04%)</title><rect x="6.4316%" y="773" width="0.0443%" height="15" fill="rgb(236,97,51)" fg:x="4793" fg:w="33"/><text x="6.6816%" y="783.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;ash::vk::definitions::LayerProperties,alloc::alloc::Global&gt;,ash::vk::enums::Result&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;alloc::vec::Vec (8 samples, 0.01%)</title><rect x="6.4651%" y="757" width="0.0107%" height="15" fill="rgb(240,80,30)" fg:x="4818" fg:w="8"/><text x="6.7151%" y="767.50"></text></g><g><title>gbemu.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::LayerProperties,ash::entry::impl$0::enumerate_instance_layer_properties::closure_env$0&gt; (8 samples, 0.01%)</title><rect x="6.4651%" y="741" width="0.0107%" height="15" fill="rgb(230,178,19)" fg:x="4818" fg:w="8"/><text x="6.7151%" y="751.50"></text></g><g><title>gbemu.exe`wgpu::Surface::get_capabilities (14 samples, 0.02%)</title><rect x="6.4759%" y="1029" width="0.0188%" height="15" fill="rgb(210,190,27)" fg:x="4826" fg:w="14"/><text x="6.7259%" y="1039.50"></text></g><g><title>gbemu.exe`wgpu::context::impl$5::surface_get_capabilities&lt;wgpu::backend::wgpu_core::ContextWgpuCore&gt;(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu::context::ObjectId*, ref$&lt;dyn$&lt;core::any::Any,core::marker::Send,core::marker::Sync&gt; &gt;, wgpu::context::ObjectId*, ref$&lt;dyn$ (14 samples, 0.02%)</title><rect x="6.4759%" y="1013" width="0.0188%" height="15" fill="rgb(222,107,31)" fg:x="4826" fg:w="14"/><text x="6.7259%" y="1023.50"></text></g><g><title>gbemu.exe`wgpu::backend::wgpu_core::impl$7::surface_get_capabilities(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;*, wgpu::backend::wgpu_core::Surface*, wgpu_core::id::Id&lt;wgpu_core::instance::Adapter&lt;wgpu_hal::empty::Api&gt; &gt;*, tuple$ (14 samples, 0.02%)</title><rect x="6.4759%" y="997" width="0.0188%" height="15" fill="rgb(216,127,34)" fg:x="4826" fg:w="14"/><text x="6.7259%" y="1007.50"></text></g><g><title>gbemu.exe`wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;::surface_get_capabilities(wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;, wgpu_core::id::Id&lt;wgpu_core::instance::Adapter (14 samples, 0.02%)</title><rect x="6.4759%" y="981" width="0.0188%" height="15" fill="rgb(234,116,52)" fg:x="4826" fg:w="14"/><text x="6.7259%" y="991.50"></text></g><g><title>gbemu.exe`wgpu_core::global::Global&lt;wgpu_core::identity::IdentityManagerFactory&gt;::fetch_adapter_and_surface&lt;wgpu_core::identity::IdentityManagerFactory,wgpu_hal::vulkan::Api,wgpu_core::device::global::impl$0::surface_get_capabilities::closure_env$0&lt;wgpu_core::identity::IdentityManagerFactory,wgpu_hal::vulkan::Api&gt;,wgpu_types::SurfaceCapabilities&gt;(wgpu_core::id::Id&lt;wgpu_core::instance::Surface&gt;, wgpu_core::id::Id&lt;wgpu_core::instance::Adapter&lt;wgpu_hal::empty::Api&gt; &gt;, wgpu_core::device::global::impl$0::surface_get_capabilities::closure_env$0 (14 samples, 0.02%)</title><rect x="6.4759%" y="965" width="0.0188%" height="15" fill="rgb(222,124,15)" fg:x="4826" fg:w="14"/><text x="6.7259%" y="975.50"></text></g><g><title>gbemu.exe`wgpu_core::device::global::impl$0::surface_get_capabilities::closure$0(wgpu_core::device::global::impl$0::surface_get_capabilities::closure_env$0&lt;wgpu_core::identity::IdentityManagerFactory,wgpu_hal::vulkan::Api&gt;, wgpu_core::instance::Adapter (14 samples, 0.02%)</title><rect x="6.4759%" y="949" width="0.0188%" height="15" fill="rgb(231,179,28)" fg:x="4826" fg:w="14"/><text x="6.7259%" y="959.50"></text></g><g><title>gbemu.exe`wgpu_core::instance::Surface::get_capabilities(wgpu_core::instance::Adapter (14 samples, 0.02%)</title><rect x="6.4759%" y="933" width="0.0188%" height="15" fill="rgb(226,93,45)" fg:x="4826" fg:w="14"/><text x="6.7259%" y="943.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::option::Option&lt;wgpu_hal::SurfaceCapabilities&gt; &gt;::ok_or(enum2$&lt;core::option::Option (14 samples, 0.02%)</title><rect x="6.4759%" y="917" width="0.0188%" height="15" fill="rgb(215,8,51)" fg:x="4826" fg:w="14"/><text x="6.7259%" y="927.50"></text></g><g><title>gbemu.exe`wgpu_hal::vulkan::adapter::impl$9::surface_capabilities (14 samples, 0.02%)</title><rect x="6.4759%" y="901" width="0.0188%" height="15" fill="rgb(223,106,5)" fg:x="4826" fg:w="14"/><text x="6.7259%" y="911.50"></text></g><g><title>gbemu.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::SurfaceFormatKHR,ash::extensions::khr::surface::impl$0::get_physical_device_surface_formats::closure_env$0&gt; (14 samples, 0.02%)</title><rect x="6.4759%" y="885" width="0.0188%" height="15" fill="rgb(250,191,5)" fg:x="4826" fg:w="14"/><text x="6.7259%" y="895.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::result::Result&lt;pixels::Pixels,enum2$&lt;pixels::Error&gt; &gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;pixels::Pixels,enum2$ (293 samples, 0.39%)</title><rect x="6.1028%" y="1077" width="0.3932%" height="15" fill="rgb(242,132,44)" fg:x="4548" fg:w="293"/><text x="6.3528%" y="1087.50"></text></g><g><title>gbemu.exe`pollster::block_on&lt;enum2$&lt;pixels::builder::impl$0::build_impl::async_fn_env$0&lt;alloc::sync::Arc&lt;winit::window::Window,alloc::alloc::Global&gt; &gt; &gt; &gt;(enum2$&lt;pixels::builder::impl$0::build_impl::async_fn_env$0&lt;alloc::sync::Arc (293 samples, 0.39%)</title><rect x="6.1028%" y="1061" width="0.3932%" height="15" fill="rgb(251,152,29)" fg:x="4548" fg:w="293"/><text x="6.3528%" y="1071.50"></text></g><g><title>gbemu.exe`pixels::builder::impl$0::build_impl::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;pixels::builder::impl$0::build_impl::async_fn_env$0&lt;alloc::sync::Arc (293 samples, 0.39%)</title><rect x="6.1028%" y="1045" width="0.3932%" height="15" fill="rgb(218,179,5)" fg:x="4548" fg:w="293"/><text x="6.3528%" y="1055.50"></text></g><g><title>`0x7FF85CC6BB73 (11 samples, 0.01%)</title><rect x="6.5175%" y="693" width="0.0148%" height="15" fill="rgb(227,67,19)" fg:x="4857" fg:w="11"/><text x="6.7675%" y="703.50"></text></g><g><title>`0x7FF85CC3C74C (11 samples, 0.01%)</title><rect x="6.5175%" y="677" width="0.0148%" height="15" fill="rgb(233,119,31)" fg:x="4857" fg:w="11"/><text x="6.7675%" y="687.50"></text></g><g><title>`0x7FF85CC3D159 (11 samples, 0.01%)</title><rect x="6.5175%" y="661" width="0.0148%" height="15" fill="rgb(241,120,22)" fg:x="4857" fg:w="11"/><text x="6.7675%" y="671.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::public_window_callback&lt;tuple$&lt;&gt; &gt; (11 samples, 0.01%)</title><rect x="6.5175%" y="645" width="0.0148%" height="15" fill="rgb(224,102,30)" fg:x="4857" fg:w="11"/><text x="6.7675%" y="655.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::public_window_callback_inner(long long, unsigned int, unsigned long long, long long, winit::platform_impl::platform::event_loop::WindowData&lt;tuple$ (11 samples, 0.01%)</title><rect x="6.5175%" y="629" width="0.0148%" height="15" fill="rgb(210,164,37)" fg:x="4857" fg:w="11"/><text x="6.7675%" y="639.50"></text></g><g><title>`0x7FF85CC406DF (8 samples, 0.01%)</title><rect x="6.5215%" y="613" width="0.0107%" height="15" fill="rgb(226,191,16)" fg:x="4860" fg:w="8"/><text x="6.7715%" y="623.50"></text></g><g><title>`0x7FF85CC3EE4B (8 samples, 0.01%)</title><rect x="6.5215%" y="597" width="0.0107%" height="15" fill="rgb(214,40,45)" fg:x="4860" fg:w="8"/><text x="6.7715%" y="607.50"></text></g><g><title>`0x7FF85C7D1344 (8 samples, 0.01%)</title><rect x="6.5215%" y="581" width="0.0107%" height="15" fill="rgb(244,29,26)" fg:x="4860" fg:w="8"/><text x="6.7715%" y="591.50"></text></g><g><title>`0x7FF85EBC5B24 (8 samples, 0.01%)</title><rect x="6.5215%" y="565" width="0.0107%" height="15" fill="rgb(216,16,5)" fg:x="4860" fg:w="8"/><text x="6.7715%" y="575.50"></text></g><g><title>`0x7FF85CC6BB73 (8 samples, 0.01%)</title><rect x="6.5215%" y="549" width="0.0107%" height="15" fill="rgb(249,76,35)" fg:x="4860" fg:w="8"/><text x="6.7715%" y="559.50"></text></g><g><title>`0x7FF85CC3C74C (8 samples, 0.01%)</title><rect x="6.5215%" y="533" width="0.0107%" height="15" fill="rgb(207,11,44)" fg:x="4860" fg:w="8"/><text x="6.7715%" y="543.50"></text></g><g><title>`0x7FF85CC3D159 (8 samples, 0.01%)</title><rect x="6.5215%" y="517" width="0.0107%" height="15" fill="rgb(228,190,49)" fg:x="4860" fg:w="8"/><text x="6.7715%" y="527.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::EventLoopThreadExecutor::execute_in_thread&lt;winit::platform_impl::platform::window::impl$0::set_visible::closure_env$0&gt; (20 samples, 0.03%)</title><rect x="6.5081%" y="869" width="0.0268%" height="15" fill="rgb(214,173,12)" fg:x="4850" fg:w="20"/><text x="6.7581%" y="879.50"></text></g><g><title>gbemu.exe`core::ptr::drop_in_place (20 samples, 0.03%)</title><rect x="6.5081%" y="853" width="0.0268%" height="15" fill="rgb(218,26,35)" fg:x="4850" fg:w="20"/><text x="6.7581%" y="863.50"></text></g><g><title>gbemu.exe`core::ptr::drop_in_place(alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (20 samples, 0.03%)</title><rect x="6.5081%" y="837" width="0.0268%" height="15" fill="rgb(220,200,19)" fg:x="4850" fg:w="20"/><text x="6.7581%" y="847.50"></text></g><g><title>gbemu.exe`alloc::sync::impl$38::drop(alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (20 samples, 0.03%)</title><rect x="6.5081%" y="821" width="0.0268%" height="15" fill="rgb(239,95,49)" fg:x="4850" fg:w="20"/><text x="6.7581%" y="831.50"></text></g><g><title>gbemu.exe`alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;winit::platform_impl::platform::window_state::WindowState&gt;,alloc::alloc::Global&gt;::inner (20 samples, 0.03%)</title><rect x="6.5081%" y="805" width="0.0268%" height="15" fill="rgb(235,85,53)" fg:x="4850" fg:w="20"/><text x="6.7581%" y="815.50"></text></g><g><title>gbemu.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::sync::poison::mutex::Mutex&lt;winit::platform_impl::platform::window_state::WindowState&gt; &gt; &gt;::as_ref (20 samples, 0.03%)</title><rect x="6.5081%" y="789" width="0.0268%" height="15" fill="rgb(233,133,31)" fg:x="4850" fg:w="20"/><text x="6.7581%" y="799.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window_state::WindowFlags::apply_diff (19 samples, 0.03%)</title><rect x="6.5094%" y="773" width="0.0255%" height="15" fill="rgb(218,25,20)" fg:x="4851" fg:w="19"/><text x="6.7594%" y="783.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window_state::WindowFlags::intersects (17 samples, 0.02%)</title><rect x="6.5121%" y="757" width="0.0228%" height="15" fill="rgb(252,210,38)" fg:x="4853" fg:w="17"/><text x="6.7621%" y="767.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window_state::_::InternalBitFlags::intersects (17 samples, 0.02%)</title><rect x="6.5121%" y="741" width="0.0228%" height="15" fill="rgb(242,134,21)" fg:x="4853" fg:w="17"/><text x="6.7621%" y="751.50"></text></g><g><title>`0x7FF85C7D1CE4 (17 samples, 0.02%)</title><rect x="6.5121%" y="725" width="0.0228%" height="15" fill="rgb(213,28,48)" fg:x="4853" fg:w="17"/><text x="6.7621%" y="735.50"></text></g><g><title>`0x7FF85EBC5B24 (13 samples, 0.02%)</title><rect x="6.5175%" y="709" width="0.0174%" height="15" fill="rgb(250,196,2)" fg:x="4857" fg:w="13"/><text x="6.7675%" y="719.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window::InitData&lt;tuple$&lt;&gt; &gt;::on_create&lt;tuple$&lt;&gt; &gt; (29 samples, 0.04%)</title><rect x="6.5000%" y="885" width="0.0389%" height="15" fill="rgb(227,5,17)" fg:x="4844" fg:w="29"/><text x="6.7500%" y="895.50"></text></g><g><title>gbemu.exe`std::sync::mpsc::channel (331 samples, 0.44%)</title><rect x="6.1028%" y="1141" width="0.4442%" height="15" fill="rgb(221,226,24)" fg:x="4548" fg:w="331"/><text x="6.3528%" y="1151.50"></text></g><g><title>gbemu.exe`std::sync::mpmc::channel (331 samples, 0.44%)</title><rect x="6.1028%" y="1125" width="0.4442%" height="15" fill="rgb(211,5,48)" fg:x="4548" fg:w="331"/><text x="6.3528%" y="1135.50"></text></g><g><title>gbemu.exe`std::sync::mpmc::counter::new(std::sync::mpmc::list::Channel&lt;alloc::vec::Vec (331 samples, 0.44%)</title><rect x="6.1028%" y="1109" width="0.4442%" height="15" fill="rgb(219,150,6)" fg:x="4548" fg:w="331"/><text x="6.3528%" y="1119.50"></text></g><g><title>gbemu.exe`gbemu::gb::gbwindow::GBWindow::new(gbemu::gb::gbwindow::WindowType, winit::event_loop::EventLoop&lt;tuple$ (331 samples, 0.44%)</title><rect x="6.1028%" y="1093" width="0.4442%" height="15" fill="rgb(251,46,16)" fg:x="4548" fg:w="331"/><text x="6.3528%" y="1103.50"></text></g><g><title>gbemu.exe`winit::window::WindowBuilder::build(winit::window::WindowBuilder, winit::event_loop::EventLoopWindowTarget&lt;tuple$ (38 samples, 0.05%)</title><rect x="6.4960%" y="1077" width="0.0510%" height="15" fill="rgb(220,204,40)" fg:x="4841" fg:w="38"/><text x="6.7460%" y="1087.50"></text></g><g><title>gbemu.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result (38 samples, 0.05%)</title><rect x="6.4960%" y="1061" width="0.0510%" height="15" fill="rgb(211,85,2)" fg:x="4841" fg:w="38"/><text x="6.7460%" y="1071.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::window::init&lt;tuple$&lt;&gt; &gt;(winit::window::WindowAttributes, winit::platform_impl::platform::PlatformSpecificWindowBuilderAttributes, winit::platform_impl::platform::event_loop::EventLoopWindowTarget&lt;tuple$ (38 samples, 0.05%)</title><rect x="6.4960%" y="1045" width="0.0510%" height="15" fill="rgb(229,17,7)" fg:x="4841" fg:w="38"/><text x="6.7460%" y="1055.50"></text></g><g><title>`0x7FF85CC435C2 (38 samples, 0.05%)</title><rect x="6.4960%" y="1029" width="0.0510%" height="15" fill="rgb(239,72,28)" fg:x="4841" fg:w="38"/><text x="6.7460%" y="1039.50"></text></g><g><title>`0x7FF85CC437B7 (38 samples, 0.05%)</title><rect x="6.4960%" y="1013" width="0.0510%" height="15" fill="rgb(230,47,54)" fg:x="4841" fg:w="38"/><text x="6.7460%" y="1023.50"></text></g><g><title>`0x7FF85CC43C2A (38 samples, 0.05%)</title><rect x="6.4960%" y="997" width="0.0510%" height="15" fill="rgb(214,50,8)" fg:x="4841" fg:w="38"/><text x="6.7460%" y="1007.50"></text></g><g><title>`0x7FF85C7D2084 (38 samples, 0.05%)</title><rect x="6.4960%" y="981" width="0.0510%" height="15" fill="rgb(216,198,43)" fg:x="4841" fg:w="38"/><text x="6.7460%" y="991.50"></text></g><g><title>`0x7FF85EBC5B24 (35 samples, 0.05%)</title><rect x="6.5000%" y="965" width="0.0470%" height="15" fill="rgb(234,20,35)" fg:x="4844" fg:w="35"/><text x="6.7500%" y="975.50"></text></g><g><title>`0x7FF85CC5B88E (35 samples, 0.05%)</title><rect x="6.5000%" y="949" width="0.0470%" height="15" fill="rgb(254,45,19)" fg:x="4844" fg:w="35"/><text x="6.7500%" y="959.50"></text></g><g><title>`0x7FF85CC3C74C (35 samples, 0.05%)</title><rect x="6.5000%" y="933" width="0.0470%" height="15" fill="rgb(219,14,44)" fg:x="4844" fg:w="35"/><text x="6.7500%" y="943.50"></text></g><g><title>`0x7FF85CC3D159 (35 samples, 0.05%)</title><rect x="6.5000%" y="917" width="0.0470%" height="15" fill="rgb(217,220,26)" fg:x="4844" fg:w="35"/><text x="6.7500%" y="927.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::public_window_callback&lt;tuple$&lt;&gt; &gt; (35 samples, 0.05%)</title><rect x="6.5000%" y="901" width="0.0470%" height="15" fill="rgb(213,158,28)" fg:x="4844" fg:w="35"/><text x="6.7500%" y="911.50"></text></g><g><title>`0x7FF85CC435C2 (12 samples, 0.02%)</title><rect x="6.5470%" y="1061" width="0.0161%" height="15" fill="rgb(252,51,52)" fg:x="4879" fg:w="12"/><text x="6.7970%" y="1071.50"></text></g><g><title>`0x7FF85CC437B7 (12 samples, 0.02%)</title><rect x="6.5470%" y="1045" width="0.0161%" height="15" fill="rgb(246,89,16)" fg:x="4879" fg:w="12"/><text x="6.7970%" y="1055.50"></text></g><g><title>`0x7FF85CC43C2A (12 samples, 0.02%)</title><rect x="6.5470%" y="1029" width="0.0161%" height="15" fill="rgb(216,158,49)" fg:x="4879" fg:w="12"/><text x="6.7970%" y="1039.50"></text></g><g><title>`0x7FF85C7D2084 (12 samples, 0.02%)</title><rect x="6.5470%" y="1013" width="0.0161%" height="15" fill="rgb(236,107,19)" fg:x="4879" fg:w="12"/><text x="6.7970%" y="1023.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::create_event_target_window (13 samples, 0.02%)</title><rect x="6.5470%" y="1077" width="0.0174%" height="15" fill="rgb(228,185,30)" fg:x="4879" fg:w="13"/><text x="6.7970%" y="1087.50"></text></g><g><title>gbemu.exe`__scrt_common_main_seh() (2,717 samples, 3.65%)</title><rect x="2.9212%" y="1317" width="3.6459%" height="15" fill="rgb(246,134,8)" fg:x="2177" fg:w="2717"/><text x="3.1712%" y="1327.50">gbem..</text></g><g><title>gbemu.exe`invoke_main() (2,717 samples, 3.65%)</title><rect x="2.9212%" y="1301" width="3.6459%" height="15" fill="rgb(214,143,50)" fg:x="2177" fg:w="2717"/><text x="3.1712%" y="1311.50">gbem..</text></g><g><title>gbemu.exe`main (2,717 samples, 3.65%)</title><rect x="2.9212%" y="1285" width="3.6459%" height="15" fill="rgb(228,75,8)" fg:x="2177" fg:w="2717"/><text x="3.1712%" y="1295.50">gbem..</text></g><g><title>gbemu.exe`std::rt::lang_start_internal (2,717 samples, 3.65%)</title><rect x="2.9212%" y="1269" width="3.6459%" height="15" fill="rgb(207,175,4)" fg:x="2177" fg:w="2717"/><text x="3.1712%" y="1279.50">gbem..</text></g><g><title>gbemu.exe`std::panic::catch_unwind (2,717 samples, 3.65%)</title><rect x="2.9212%" y="1253" width="3.6459%" height="15" fill="rgb(205,108,24)" fg:x="2177" fg:w="2717"/><text x="3.1712%" y="1263.50">gbem..</text></g><g><title>gbemu.exe`std::panicking::try (2,717 samples, 3.65%)</title><rect x="2.9212%" y="1237" width="3.6459%" height="15" fill="rgb(244,120,49)" fg:x="2177" fg:w="2717"/><text x="3.1712%" y="1247.50">gbem..</text></g><g><title>gbemu.exe`std::panicking::try::do_call (2,717 samples, 3.65%)</title><rect x="2.9212%" y="1221" width="3.6459%" height="15" fill="rgb(223,47,38)" fg:x="2177" fg:w="2717"/><text x="3.1712%" y="1231.50">gbem..</text></g><g><title>gbemu.exe`std::rt::lang_start_internal::closure$0 (2,717 samples, 3.65%)</title><rect x="2.9212%" y="1205" width="3.6459%" height="15" fill="rgb(229,179,11)" fg:x="2177" fg:w="2717"/><text x="3.1712%" y="1215.50">gbem..</text></g><g><title>gbemu.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (2,717 samples, 3.65%)</title><rect x="2.9212%" y="1189" width="3.6459%" height="15" fill="rgb(231,122,1)" fg:x="2177" fg:w="2717"/><text x="3.1712%" y="1199.50">gbem..</text></g><g><title>gbemu.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (2,717 samples, 3.65%)</title><rect x="2.9212%" y="1173" width="3.6459%" height="15" fill="rgb(245,119,9)" fg:x="2177" fg:w="2717"/><text x="3.1712%" y="1183.50">gbem..</text></g><g><title>gbemu.exe`gbemu::main (2,717 samples, 3.65%)</title><rect x="2.9212%" y="1157" width="3.6459%" height="15" fill="rgb(241,163,25)" fg:x="2177" fg:w="2717"/><text x="3.1712%" y="1167.50">gbem..</text></g><g><title>gbemu.exe`winit::event_loop::EventLoop&lt;tuple$&lt;&gt; &gt;::new (15 samples, 0.02%)</title><rect x="6.5470%" y="1141" width="0.0201%" height="15" fill="rgb(217,214,3)" fg:x="4879" fg:w="15"/><text x="6.7970%" y="1151.50"></text></g><g><title>gbemu.exe`winit::event_loop::EventLoopBuilder&lt;tuple$&lt;&gt; &gt;::build (15 samples, 0.02%)</title><rect x="6.5470%" y="1125" width="0.0201%" height="15" fill="rgb(240,86,28)" fg:x="4879" fg:w="15"/><text x="6.7970%" y="1135.50"></text></g><g><title>gbemu.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;winit::platform_impl::platform::event_loop::EventLoop&lt;tuple$&lt;&gt; &gt;,enum2$ (15 samples, 0.02%)</title><rect x="6.5470%" y="1109" width="0.0201%" height="15" fill="rgb(215,47,9)" fg:x="4879" fg:w="15"/><text x="6.7970%" y="1119.50"></text></g><g><title>gbemu.exe`winit::platform_impl::platform::event_loop::EventLoop&lt;tuple$&lt;&gt; &gt;::new&lt;tuple$&lt;&gt; &gt; (15 samples, 0.02%)</title><rect x="6.5470%" y="1093" width="0.0201%" height="15" fill="rgb(252,25,45)" fg:x="4879" fg:w="15"/><text x="6.7970%" y="1103.50"></text></g><g><title>gbemu.exe`core::str::impl$0::contains(ref$&lt;str$&gt;, ref$ (40 samples, 0.05%)</title><rect x="6.6758%" y="997" width="0.0537%" height="15" fill="rgb(251,164,9)" fg:x="4975" fg:w="40"/><text x="6.9258%" y="1007.50"></text></g><g><title>`0x7FF83E1D1FD0 (16 samples, 0.02%)</title><rect x="7.0099%" y="853" width="0.0215%" height="15" fill="rgb(233,194,0)" fg:x="5224" fg:w="16"/><text x="7.2599%" y="863.50"></text></g><g><title>`0x7FF83E1D1FD3 (10 samples, 0.01%)</title><rect x="7.0314%" y="853" width="0.0134%" height="15" fill="rgb(249,111,24)" fg:x="5240" fg:w="10"/><text x="7.2814%" y="863.50"></text></g><g><title>`0x7FF83E1D2002 (88 samples, 0.12%)</title><rect x="7.0515%" y="853" width="0.1181%" height="15" fill="rgb(250,223,3)" fg:x="5255" fg:w="88"/><text x="7.3015%" y="863.50"></text></g><g><title>`0x7FF83E1D2013 (12 samples, 0.02%)</title><rect x="7.1723%" y="853" width="0.0161%" height="15" fill="rgb(236,178,37)" fg:x="5345" fg:w="12"/><text x="7.4223%" y="863.50"></text></g><g><title>`0x7FF83E1D2015 (37 samples, 0.05%)</title><rect x="7.1884%" y="853" width="0.0496%" height="15" fill="rgb(241,158,50)" fg:x="5357" fg:w="37"/><text x="7.4384%" y="863.50"></text></g><g><title>`0x7FF83E1D2018 (16 samples, 0.02%)</title><rect x="7.2380%" y="853" width="0.0215%" height="15" fill="rgb(213,121,41)" fg:x="5394" fg:w="16"/><text x="7.4880%" y="863.50"></text></g><g><title>gbemu.exe`core::iter::traits::iterator::Iterator::any::check::closure$0(core::iter::traits::iterator::Iterator::any::check::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,core::str::pattern::simd_contains::closure_env$1&gt;*, tuple$&lt;&gt;, ref$&lt;slice2$ (307 samples, 0.41%)</title><rect x="6.8932%" y="933" width="0.4120%" height="15" fill="rgb(240,92,3)" fg:x="5137" fg:w="307"/><text x="7.1432%" y="943.50"></text></g><g><title>gbemu.exe`core::str::pattern::simd_contains::closure$1(core::str::pattern::simd_contains::closure_env$1*, ref$&lt;slice2$ (307 samples, 0.41%)</title><rect x="6.8932%" y="917" width="0.4120%" height="15" fill="rgb(205,123,3)" fg:x="5137" fg:w="307"/><text x="7.1432%" y="927.50"></text></g><g><title>gbemu.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (307 samples, 0.41%)</title><rect x="6.8932%" y="901" width="0.4120%" height="15" fill="rgb(205,97,47)" fg:x="5137" fg:w="307"/><text x="7.1432%" y="911.50"></text></g><g><title>gbemu.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (307 samples, 0.41%)</title><rect x="6.8932%" y="885" width="0.4120%" height="15" fill="rgb(247,152,14)" fg:x="5137" fg:w="307"/><text x="7.1432%" y="895.50"></text></g><g><title>gbemu.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (307 samples, 0.41%)</title><rect x="6.8932%" y="869" width="0.4120%" height="15" fill="rgb(248,195,53)" fg:x="5137" fg:w="307"/><text x="7.1432%" y="879.50"></text></g><g><title>gbemu.exe`memcmp (34 samples, 0.05%)</title><rect x="7.2595%" y="853" width="0.0456%" height="15" fill="rgb(226,201,16)" fg:x="5410" fg:w="34"/><text x="7.5095%" y="863.50"></text></g><g><title>gbemu.exe`gbemu::gb::registers::Registers::get_pc (513 samples, 0.69%)</title><rect x="6.6503%" y="1029" width="0.6884%" height="15" fill="rgb(205,98,0)" fg:x="4956" fg:w="513"/><text x="6.9003%" y="1039.50"></text></g><g><title>gbemu.exe`gbemu::gb::registers::Registers::handle_flags(ref$ (504 samples, 0.68%)</title><rect x="6.6624%" y="1013" width="0.6763%" height="15" fill="rgb(214,191,48)" fg:x="4965" fg:w="504"/><text x="6.9124%" y="1023.50"></text></g><g><title>gbemu.exe`core::str::pattern::impl$31::is_contained_in(ref$&lt;str$&gt;, ref$ (454 samples, 0.61%)</title><rect x="6.7295%" y="997" width="0.6092%" height="15" fill="rgb(237,112,39)" fg:x="5015" fg:w="454"/><text x="6.9795%" y="1007.50"></text></g><g><title>gbemu.exe`core::str::pattern::simd_contains(ref$&lt;str$&gt;, ref$ (350 samples, 0.47%)</title><rect x="6.8690%" y="981" width="0.4697%" height="15" fill="rgb(247,203,27)" fg:x="5119" fg:w="350"/><text x="7.1190%" y="991.50"></text></g><g><title>gbemu.exe`core::iter::traits::iterator::Iterator::any(core::slice::iter::Windows (332 samples, 0.45%)</title><rect x="6.8932%" y="965" width="0.4455%" height="15" fill="rgb(235,124,28)" fg:x="5137" fg:w="332"/><text x="7.1432%" y="975.50"></text></g><g><title>gbemu.exe`core::iter::traits::iterator::Iterator::try_fold(core::slice::iter::Windows&lt;u8&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::any::check::closure_env$0&lt;ref$&lt;slice2$ (332 samples, 0.45%)</title><rect x="6.8932%" y="949" width="0.4455%" height="15" fill="rgb(208,207,46)" fg:x="5137" fg:w="332"/><text x="7.1432%" y="959.50"></text></g><g><title>gbemu.exe`core::slice::iter::impl$62::next(core::slice::iter::Windows (25 samples, 0.03%)</title><rect x="7.3051%" y="933" width="0.0335%" height="15" fill="rgb(234,176,4)" fg:x="5444" fg:w="25"/><text x="7.5551%" y="943.50"></text></g><g><title>gbemu.exe`gbemu::gb::cpu::Cpu::execute_inst (555 samples, 0.74%)</title><rect x="6.6047%" y="1045" width="0.7447%" height="15" fill="rgb(230,133,28)" fg:x="4922" fg:w="555"/><text x="6.8547%" y="1055.50"></text></g><g><title>gbemu.exe`gbemu::gb::registers::Registers::is_z_flag_set (8 samples, 0.01%)</title><rect x="7.3387%" y="1029" width="0.0107%" height="15" fill="rgb(211,137,40)" fg:x="5469" fg:w="8"/><text x="7.5887%" y="1039.50"></text></g><g><title>gbemu.exe`hashbrown::control::group::sse2::Group::match_tag (12 samples, 0.02%)</title><rect x="7.4071%" y="949" width="0.0161%" height="15" fill="rgb(254,35,13)" fg:x="5520" fg:w="12"/><text x="7.6571%" y="959.50"></text></g><g><title>gbemu.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (12 samples, 0.02%)</title><rect x="7.4071%" y="933" width="0.0161%" height="15" fill="rgb(225,49,51)" fg:x="5520" fg:w="12"/><text x="7.6571%" y="943.50"></text></g><g><title>gbemu.exe`gbemu::gb::cpu::Cpu::tick (621 samples, 0.83%)</title><rect x="6.5993%" y="1061" width="0.8333%" height="15" fill="rgb(251,10,15)" fg:x="4918" fg:w="621"/><text x="6.8493%" y="1071.50"></text></g><g><title>gbemu.exe`std::collections::hash::map::HashMap&lt;u8,gbemu::gb::instructions::Instruction,std::hash::random::RandomState&gt;::get (46 samples, 0.06%)</title><rect x="7.3709%" y="1045" width="0.0617%" height="15" fill="rgb(228,207,15)" fg:x="5493" fg:w="46"/><text x="7.6209%" y="1055.50"></text></g><g><title>gbemu.exe`hashbrown::map::HashMap&lt;u8,gbemu::gb::instructions::Instruction,std::hash::random::RandomState,alloc::alloc::Global&gt;::get (46 samples, 0.06%)</title><rect x="7.3709%" y="1029" width="0.0617%" height="15" fill="rgb(241,99,19)" fg:x="5493" fg:w="46"/><text x="7.6209%" y="1039.50"></text></g><g><title>gbemu.exe`hashbrown::map::HashMap&lt;u8,gbemu::gb::instructions::Instruction,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner (46 samples, 0.06%)</title><rect x="7.3709%" y="1013" width="0.0617%" height="15" fill="rgb(207,104,49)" fg:x="5493" fg:w="46"/><text x="7.6209%" y="1023.50"></text></g><g><title>gbemu.exe`hashbrown::raw::RawTable&lt;tuple$&lt;u8,gbemu::gb::instructions::Instruction&gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (38 samples, 0.05%)</title><rect x="7.3816%" y="997" width="0.0510%" height="15" fill="rgb(234,99,18)" fg:x="5501" fg:w="38"/><text x="7.6316%" y="1007.50"></text></g><g><title>gbemu.exe`hashbrown::raw::RawTable&lt;tuple$&lt;u8,gbemu::gb::instructions::Instruction&gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (38 samples, 0.05%)</title><rect x="7.3816%" y="981" width="0.0510%" height="15" fill="rgb(213,191,49)" fg:x="5501" fg:w="38"/><text x="7.6316%" y="991.50"></text></g><g><title>gbemu.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (24 samples, 0.03%)</title><rect x="7.4004%" y="965" width="0.0322%" height="15" fill="rgb(210,226,19)" fg:x="5515" fg:w="24"/><text x="7.6504%" y="975.50"></text></g><g><title>`0x7FF85EA6E6C5 (15 samples, 0.02%)</title><rect x="15.7441%" y="949" width="0.0201%" height="15" fill="rgb(229,97,18)" fg:x="11733" fg:w="15"/><text x="15.9941%" y="959.50"></text></g><g><title>`0x7FF85EA6F351 (36 samples, 0.05%)</title><rect x="15.7857%" y="933" width="0.0483%" height="15" fill="rgb(211,167,15)" fg:x="11764" fg:w="36"/><text x="16.0357%" y="943.50"></text></g><g><title>`0x7FF85EA6F356 (34 samples, 0.05%)</title><rect x="15.8340%" y="933" width="0.0456%" height="15" fill="rgb(210,169,34)" fg:x="11800" fg:w="34"/><text x="16.0840%" y="943.50"></text></g><g><title>`0x7FF85EA6F37F (42 samples, 0.06%)</title><rect x="15.8810%" y="933" width="0.0564%" height="15" fill="rgb(241,121,31)" fg:x="11835" fg:w="42"/><text x="16.1310%" y="943.50"></text></g><g><title>`0x7FF85EA6F529 (8 samples, 0.01%)</title><rect x="15.9454%" y="933" width="0.0107%" height="15" fill="rgb(232,40,11)" fg:x="11883" fg:w="8"/><text x="16.1954%" y="943.50"></text></g><g><title>`0x7FF85EA75CF7 (11 samples, 0.01%)</title><rect x="15.9682%" y="901" width="0.0148%" height="15" fill="rgb(205,86,26)" fg:x="11900" fg:w="11"/><text x="16.2182%" y="911.50"></text></g><g><title>`0x7FF85EAA552B (40 samples, 0.05%)</title><rect x="15.9655%" y="917" width="0.0537%" height="15" fill="rgb(231,126,28)" fg:x="11898" fg:w="40"/><text x="16.2155%" y="927.50"></text></g><g><title>`0x7FF85EA75D0E (27 samples, 0.04%)</title><rect x="15.9830%" y="901" width="0.0362%" height="15" fill="rgb(219,221,18)" fg:x="11911" fg:w="27"/><text x="16.2330%" y="911.50"></text></g><g><title>`0x7FF85EAA5B10 (1,570 samples, 2.11%)</title><rect x="16.0286%" y="917" width="2.1067%" height="15" fill="rgb(211,40,0)" fg:x="11945" fg:w="1570"/><text x="16.2786%" y="927.50">`..</text></g><g><title>`0x7FF85EAA5B14 (41 samples, 0.06%)</title><rect x="18.1353%" y="917" width="0.0550%" height="15" fill="rgb(239,85,43)" fg:x="13515" fg:w="41"/><text x="18.3853%" y="927.50"></text></g><g><title>`0x7FF85EAA5EB1 (15 samples, 0.02%)</title><rect x="18.2293%" y="917" width="0.0201%" height="15" fill="rgb(231,55,21)" fg:x="13585" fg:w="15"/><text x="18.4793%" y="927.50"></text></g><g><title>`0x7FF85EAA5F0D (130 samples, 0.17%)</title><rect x="18.2521%" y="917" width="0.1744%" height="15" fill="rgb(225,184,43)" fg:x="13602" fg:w="130"/><text x="18.5021%" y="927.50"></text></g><g><title>`0x7FF85EAA5F9D (11 samples, 0.01%)</title><rect x="18.4440%" y="917" width="0.0148%" height="15" fill="rgb(251,158,41)" fg:x="13745" fg:w="11"/><text x="18.6940%" y="927.50"></text></g><g><title>`0x7FF85EBC81CE (13 samples, 0.02%)</title><rect x="18.4628%" y="901" width="0.0174%" height="15" fill="rgb(234,159,37)" fg:x="13759" fg:w="13"/><text x="18.7128%" y="911.50"></text></g><g><title>`0x7FF85EBC81DD (14 samples, 0.02%)</title><rect x="18.4842%" y="901" width="0.0188%" height="15" fill="rgb(216,204,22)" fg:x="13775" fg:w="14"/><text x="18.7342%" y="911.50"></text></g><g><title>`0x7FF85EBC81EC (48,735 samples, 65.40%)</title><rect x="18.5030%" y="901" width="65.3959%" height="15" fill="rgb(214,17,3)" fg:x="13789" fg:w="48735"/><text x="18.7530%" y="911.50">`0x7FF85EBC81EC</text></g><g><title>`0x7FF85EBC81EE (12 samples, 0.02%)</title><rect x="83.8989%" y="901" width="0.0161%" height="15" fill="rgb(212,111,17)" fg:x="62524" fg:w="12"/><text x="84.1489%" y="911.50"></text></g><g><title>`0x7FF85EBC81F2 (12 samples, 0.02%)</title><rect x="83.9150%" y="901" width="0.0161%" height="15" fill="rgb(221,157,24)" fg:x="62536" fg:w="12"/><text x="84.1650%" y="911.50"></text></g><g><title>`0x7FF85EAA5FC4 (48,792 samples, 65.47%)</title><rect x="18.4601%" y="917" width="65.4724%" height="15" fill="rgb(252,16,13)" fg:x="13757" fg:w="48792"/><text x="18.7101%" y="927.50">`0x7FF85EAA5FC4</text></g><g><title>`0x7FF85EAA6133 (548 samples, 0.74%)</title><rect x="83.9338%" y="917" width="0.7353%" height="15" fill="rgb(221,62,2)" fg:x="62550" fg:w="548"/><text x="84.1838%" y="927.50"></text></g><g><title>`0x7FF85EAA613A (14 samples, 0.02%)</title><rect x="84.6692%" y="917" width="0.0188%" height="15" fill="rgb(247,87,22)" fg:x="63098" fg:w="14"/><text x="84.9192%" y="927.50"></text></g><g><title>`0x7FF85EAA615B (11 samples, 0.01%)</title><rect x="84.6933%" y="917" width="0.0148%" height="15" fill="rgb(215,73,9)" fg:x="63116" fg:w="11"/><text x="84.9433%" y="927.50"></text></g><g><title>`0x7FF85EAA62D5 (11 samples, 0.01%)</title><rect x="84.7309%" y="917" width="0.0148%" height="15" fill="rgb(207,175,33)" fg:x="63144" fg:w="11"/><text x="84.9809%" y="927.50"></text></g><g><title>`0x7FF85EAA62E2 (1,679 samples, 2.25%)</title><rect x="84.7470%" y="917" width="2.2530%" height="15" fill="rgb(243,129,54)" fg:x="63156" fg:w="1679"/><text x="84.9970%" y="927.50">`..</text></g><g><title>`0x7FF85EAA62E9 (19 samples, 0.03%)</title><rect x="87.0000%" y="917" width="0.0255%" height="15" fill="rgb(227,119,45)" fg:x="64835" fg:w="19"/><text x="87.2500%" y="927.50"></text></g><g><title>`0x7FF85EAA62FF (8 samples, 0.01%)</title><rect x="87.0255%" y="917" width="0.0107%" height="15" fill="rgb(205,109,36)" fg:x="64854" fg:w="8"/><text x="87.2755%" y="927.50"></text></g><g><title>`0x7FF85EAA6309 (28 samples, 0.04%)</title><rect x="87.0362%" y="917" width="0.0376%" height="15" fill="rgb(205,6,39)" fg:x="64862" fg:w="28"/><text x="87.2862%" y="927.50"></text></g><g><title>`0x7FF85EAA634D (9 samples, 0.01%)</title><rect x="87.0765%" y="917" width="0.0121%" height="15" fill="rgb(221,32,16)" fg:x="64892" fg:w="9"/><text x="87.3265%" y="927.50"></text></g><g><title>`0x7FF85EAA6354 (8 samples, 0.01%)</title><rect x="87.0899%" y="917" width="0.0107%" height="15" fill="rgb(228,144,50)" fg:x="64902" fg:w="8"/><text x="87.3399%" y="927.50"></text></g><g><title>`0x7FF85EAA84D6 (31 samples, 0.04%)</title><rect x="87.1060%" y="885" width="0.0416%" height="15" fill="rgb(229,201,53)" fg:x="64914" fg:w="31"/><text x="87.3560%" y="895.50"></text></g><g><title>`0x7FF85EAA8DEA (9 samples, 0.01%)</title><rect x="87.1691%" y="869" width="0.0121%" height="15" fill="rgb(249,153,27)" fg:x="64961" fg:w="9"/><text x="87.4191%" y="879.50"></text></g><g><title>`0x7FF85EAA8689 (25 samples, 0.03%)</title><rect x="87.1597%" y="885" width="0.0335%" height="15" fill="rgb(227,106,25)" fg:x="64954" fg:w="25"/><text x="87.4097%" y="895.50"></text></g><g><title>`0x7FF85EAA822A (1,661 samples, 2.23%)</title><rect x="87.1959%" y="869" width="2.2288%" height="15" fill="rgb(230,65,29)" fg:x="64981" fg:w="1661"/><text x="87.4459%" y="879.50">`..</text></g><g><title>`0x7FF85EAA822E (56 samples, 0.08%)</title><rect x="89.4247%" y="869" width="0.0751%" height="15" fill="rgb(221,57,46)" fg:x="66642" fg:w="56"/><text x="89.6747%" y="879.50"></text></g><g><title>`0x7FF85EAA82B7 (50 samples, 0.07%)</title><rect x="89.5146%" y="869" width="0.0671%" height="15" fill="rgb(229,161,17)" fg:x="66709" fg:w="50"/><text x="89.7646%" y="879.50"></text></g><g><title>`0x7FF85EAA8D4E (9 samples, 0.01%)</title><rect x="89.5911%" y="853" width="0.0121%" height="15" fill="rgb(222,213,11)" fg:x="66766" fg:w="9"/><text x="89.8411%" y="863.50"></text></g><g><title>`0x7FF85EAA82F1 (11 samples, 0.01%)</title><rect x="89.5898%" y="869" width="0.0148%" height="15" fill="rgb(235,35,13)" fg:x="66765" fg:w="11"/><text x="89.8398%" y="879.50"></text></g><g><title>`0x7FF85EAA86F4 (1,803 samples, 2.42%)</title><rect x="87.1932%" y="885" width="2.4194%" height="15" fill="rgb(233,158,34)" fg:x="64979" fg:w="1803"/><text x="87.4432%" y="895.50">`0..</text></g><g><title>`0x7FF85EAA7D7F (1,872 samples, 2.51%)</title><rect x="87.1060%" y="901" width="2.5120%" height="15" fill="rgb(215,151,48)" fg:x="64914" fg:w="1872"/><text x="87.3560%" y="911.50">`0..</text></g><g><title>`0x7FF85EA760FD (15 samples, 0.02%)</title><rect x="89.6354%" y="885" width="0.0201%" height="15" fill="rgb(229,84,14)" fg:x="66799" fg:w="15"/><text x="89.8854%" y="895.50"></text></g><g><title>`0x7FF85EAA7D9B (31 samples, 0.04%)</title><rect x="89.6180%" y="901" width="0.0416%" height="15" fill="rgb(229,68,14)" fg:x="66786" fg:w="31"/><text x="89.8680%" y="911.50"></text></g><g><title>`0x7FF85EA7881E (13 samples, 0.02%)</title><rect x="89.6757%" y="885" width="0.0174%" height="15" fill="rgb(243,106,26)" fg:x="66829" fg:w="13"/><text x="89.9257%" y="895.50"></text></g><g><title>`0x7FF85EAA7DAD (36 samples, 0.05%)</title><rect x="89.6596%" y="901" width="0.0483%" height="15" fill="rgb(206,45,38)" fg:x="66817" fg:w="36"/><text x="89.9096%" y="911.50"></text></g><g><title>`0x7FF85EA91F5E (12 samples, 0.02%)</title><rect x="89.7146%" y="885" width="0.0161%" height="15" fill="rgb(226,6,15)" fg:x="66858" fg:w="12"/><text x="89.9646%" y="895.50"></text></g><g><title>`0x7FF85EAA822A (11 samples, 0.01%)</title><rect x="89.7307%" y="869" width="0.0148%" height="15" fill="rgb(232,22,54)" fg:x="66870" fg:w="11"/><text x="89.9807%" y="879.50"></text></g><g><title>`0x7FF85EAA69A2 (1,970 samples, 2.64%)</title><rect x="87.1033%" y="917" width="2.6435%" height="15" fill="rgb(229,222,32)" fg:x="64912" fg:w="1970"/><text x="87.3533%" y="927.50">`0..</text></g><g><title>`0x7FF85EAA7FB6 (25 samples, 0.03%)</title><rect x="89.7132%" y="901" width="0.0335%" height="15" fill="rgb(228,62,29)" fg:x="66857" fg:w="25"/><text x="89.9632%" y="911.50"></text></g><g><title>`0x7FF85EA9203D (12 samples, 0.02%)</title><rect x="89.7307%" y="885" width="0.0161%" height="15" fill="rgb(251,103,34)" fg:x="66870" fg:w="12"/><text x="89.9807%" y="895.50"></text></g><g><title>`0x7FF85EAA780D (8 samples, 0.01%)</title><rect x="89.7535%" y="917" width="0.0107%" height="15" fill="rgb(233,12,30)" fg:x="66887" fg:w="8"/><text x="90.0035%" y="927.50"></text></g><g><title>`0x7FF85EAA7821 (15 samples, 0.02%)</title><rect x="89.7696%" y="917" width="0.0201%" height="15" fill="rgb(238,52,0)" fg:x="66899" fg:w="15"/><text x="90.0196%" y="927.50"></text></g><g><title>`0x7FF85EAA7828 (16 samples, 0.02%)</title><rect x="89.7897%" y="917" width="0.0215%" height="15" fill="rgb(223,98,5)" fg:x="66914" fg:w="16"/><text x="90.0397%" y="927.50"></text></g><g><title>`0x7FF85EA6F591 (55,045 samples, 73.86%)</title><rect x="15.9602%" y="933" width="73.8631%" height="15" fill="rgb(228,75,37)" fg:x="11894" fg:w="55045"/><text x="16.2102%" y="943.50">`0x7FF85EA6F591</text></g><g><title>`0x7FF85EA6F164 (55,194 samples, 74.06%)</title><rect x="15.7643%" y="949" width="74.0630%" height="15" fill="rgb(205,115,49)" fg:x="11748" fg:w="55194"/><text x="16.0143%" y="959.50">`0x7FF85EA6F164</text></g><g><title>`0x7FF85EA6F176 (24 samples, 0.03%)</title><rect x="89.8300%" y="949" width="0.0322%" height="15" fill="rgb(250,154,43)" fg:x="66944" fg:w="24"/><text x="90.0800%" y="959.50"></text></g><g><title>`0x7FF85EA6F17F (10 samples, 0.01%)</title><rect x="89.8662%" y="949" width="0.0134%" height="15" fill="rgb(226,43,29)" fg:x="66971" fg:w="10"/><text x="90.1162%" y="959.50"></text></g><g><title>gbemu.exe`alloc::vec::from_elem (55,318 samples, 74.23%)</title><rect x="15.6918%" y="1029" width="74.2294%" height="15" fill="rgb(249,228,39)" fg:x="11694" fg:w="55318"/><text x="15.9418%" y="1039.50">gbemu.exe`alloc::vec::from_elem</text></g><g><title>gbemu.exe`alloc::vec::spec_from_elem::impl$3::from_elem (55,318 samples, 74.23%)</title><rect x="15.6918%" y="1013" width="74.2294%" height="15" fill="rgb(216,79,43)" fg:x="11694" fg:w="55318"/><text x="15.9418%" y="1023.50">gbemu.exe`alloc::vec::spec_from_elem::impl$3::from_elem</text></g><g><title>gbemu.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_zeroed_in (55,318 samples, 74.23%)</title><rect x="15.6918%" y="997" width="74.2294%" height="15" fill="rgb(228,95,12)" fg:x="11694" fg:w="55318"/><text x="15.9418%" y="1007.50">gbemu.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_zeroed_in</text></g><g><title>gbemu.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (55,318 samples, 74.23%)</title><rect x="15.6918%" y="981" width="74.2294%" height="15" fill="rgb(249,221,15)" fg:x="11694" fg:w="55318"/><text x="15.9418%" y="991.50">gbemu.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in</text></g><g><title>gbemu.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (55,318 samples, 74.23%)</title><rect x="15.6918%" y="965" width="74.2294%" height="15" fill="rgb(233,34,13)" fg:x="11694" fg:w="55318"/><text x="15.9418%" y="975.50">gbemu.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in</text></g><g><title>gbemu.exe`std::sys::alloc::windows::process_heap_alloc (17 samples, 0.02%)</title><rect x="89.8984%" y="949" width="0.0228%" height="15" fill="rgb(214,103,39)" fg:x="66995" fg:w="17"/><text x="90.1484%" y="959.50"></text></g><g><title>gbemu.exe`core::intrinsics::unlikely (13 samples, 0.02%)</title><rect x="89.9038%" y="933" width="0.0174%" height="15" fill="rgb(251,126,39)" fg:x="66999" fg:w="13"/><text x="90.1538%" y="943.50"></text></g><g><title>gbemu.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::ops::range::Range (1,167 samples, 1.57%)</title><rect x="89.9212%" y="1029" width="1.5660%" height="15" fill="rgb(214,216,36)" fg:x="67012" fg:w="1167"/><text x="90.1712%" y="1039.50"></text></g><g><title>gbemu.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::Range (1,167 samples, 1.57%)</title><rect x="89.9212%" y="1013" width="1.5660%" height="15" fill="rgb(220,221,8)" fg:x="67012" fg:w="1167"/><text x="90.1712%" y="1023.50"></text></g><g><title>gbemu.exe`core::slice::index::impl$4::index_mut(core::ops::range::Range&lt;usize&gt;, ref_mut$&lt;slice2$ (1,167 samples, 1.57%)</title><rect x="89.9212%" y="997" width="1.5660%" height="15" fill="rgb(240,216,3)" fg:x="67012" fg:w="1167"/><text x="90.1712%" y="1007.50"></text></g><g><title>gbemu.exe`core::num::impl$11::checked_sub (54 samples, 0.07%)</title><rect x="91.4147%" y="981" width="0.0725%" height="15" fill="rgb(232,218,17)" fg:x="68125" fg:w="54"/><text x="91.6647%" y="991.50"></text></g><g><title>gbemu.exe`core::iter::range::impl$6::next(core::ops::range::Range (99 samples, 0.13%)</title><rect x="91.4872%" y="1029" width="0.1328%" height="15" fill="rgb(229,163,45)" fg:x="68179" fg:w="99"/><text x="91.7372%" y="1039.50"></text></g><g><title>gbemu.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (99 samples, 0.13%)</title><rect x="91.4872%" y="1013" width="0.1328%" height="15" fill="rgb(231,110,42)" fg:x="68179" fg:w="99"/><text x="91.7372%" y="1023.50"></text></g><g><title>gbemu.exe`core::cmp::impls::impl$58::lt (95 samples, 0.13%)</title><rect x="91.4926%" y="997" width="0.1275%" height="15" fill="rgb(208,170,48)" fg:x="68183" fg:w="95"/><text x="91.7426%" y="1007.50"></text></g><g><title>gbemu.exe`core::slice::impl$0::copy_from_slice(ref_mut$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (656 samples, 0.88%)</title><rect x="91.6200%" y="1029" width="0.8803%" height="15" fill="rgb(239,116,25)" fg:x="68278" fg:w="656"/><text x="91.8700%" y="1039.50"></text></g><g><title>gbemu.exe`core::intrinsics::copy_nonoverlapping (656 samples, 0.88%)</title><rect x="91.6200%" y="1013" width="0.8803%" height="15" fill="rgb(219,200,50)" fg:x="68278" fg:w="656"/><text x="91.8700%" y="1023.50"></text></g><g><title>gbemu.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (1,680 samples, 2.25%)</title><rect x="92.5003%" y="1029" width="2.2543%" height="15" fill="rgb(245,200,0)" fg:x="68934" fg:w="1680"/><text x="92.7503%" y="1039.50">g..</text></g><g><title>gbemu.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;gbemu::gb::graphics::tile::Tile&gt;*, core::ptr::non_null::NonNull (351 samples, 0.47%)</title><rect x="94.2836%" y="1013" width="0.4710%" height="15" fill="rgb(245,119,33)" fg:x="70263" fg:w="351"/><text x="94.5336%" y="1023.50"></text></g><g><title>gbemu.exe`core::sync::atomic::AtomicPtr&lt;std::sync::mpmc::list::Block&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;::load (9 samples, 0.01%)</title><rect x="94.8204%" y="949" width="0.0121%" height="15" fill="rgb(231,125,12)" fg:x="70663" fg:w="9"/><text x="95.0704%" y="959.50"></text></g><g><title>gbemu.exe`core::sync::atomic::atomic_load(std::sync::mpmc::list::Block&lt;alloc::vec::Vec (9 samples, 0.01%)</title><rect x="94.8204%" y="933" width="0.0121%" height="15" fill="rgb(216,96,41)" fg:x="70663" fg:w="9"/><text x="95.0704%" y="943.50"></text></g><g><title>`0x7FF85EA6FBC0 (8 samples, 0.01%)</title><rect x="94.8526%" y="805" width="0.0107%" height="15" fill="rgb(248,43,45)" fg:x="70687" fg:w="8"/><text x="95.1026%" y="815.50"></text></g><g><title>`0x7FF85EA7043F (11 samples, 0.01%)</title><rect x="94.8674%" y="805" width="0.0148%" height="15" fill="rgb(217,222,7)" fg:x="70698" fg:w="11"/><text x="95.1174%" y="815.50"></text></g><g><title>`0x7FF85EADAE22 (11 samples, 0.01%)</title><rect x="94.8674%" y="789" width="0.0148%" height="15" fill="rgb(233,28,6)" fg:x="70698" fg:w="11"/><text x="95.1174%" y="799.50"></text></g><g><title>`0x7FF85EA6F164 (33 samples, 0.04%)</title><rect x="94.8392%" y="837" width="0.0443%" height="15" fill="rgb(231,218,15)" fg:x="70677" fg:w="33"/><text x="95.0892%" y="847.50"></text></g><g><title>`0x7FF85EA6F2A4 (32 samples, 0.04%)</title><rect x="94.8405%" y="821" width="0.0429%" height="15" fill="rgb(226,171,48)" fg:x="70678" fg:w="32"/><text x="95.0905%" y="831.50"></text></g><g><title>gbemu.exe`std::sync::mpmc::list::Channel&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::start_send (77 samples, 0.10%)</title><rect x="94.7815%" y="965" width="0.1033%" height="15" fill="rgb(235,201,9)" fg:x="70634" fg:w="77"/><text x="95.0315%" y="975.50"></text></g><g><title>gbemu.exe`std::sync::mpmc::list::Block&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::new (38 samples, 0.05%)</title><rect x="94.8338%" y="949" width="0.0510%" height="15" fill="rgb(217,80,15)" fg:x="70673" fg:w="38"/><text x="95.0838%" y="959.50"></text></g><g><title>gbemu.exe`alloc::boxed::impl$0::new_zeroed (38 samples, 0.05%)</title><rect x="94.8338%" y="933" width="0.0510%" height="15" fill="rgb(219,152,8)" fg:x="70673" fg:w="38"/><text x="95.0838%" y="943.50"></text></g><g><title>gbemu.exe`alloc::boxed::impl$1::new_zeroed_in (38 samples, 0.05%)</title><rect x="94.8338%" y="917" width="0.0510%" height="15" fill="rgb(243,107,38)" fg:x="70673" fg:w="38"/><text x="95.0838%" y="927.50"></text></g><g><title>gbemu.exe`alloc::boxed::impl$1::try_new_zeroed_in (38 samples, 0.05%)</title><rect x="94.8338%" y="901" width="0.0510%" height="15" fill="rgb(231,17,5)" fg:x="70673" fg:w="38"/><text x="95.0838%" y="911.50"></text></g><g><title>gbemu.exe`alloc::alloc::impl$1::allocate_zeroed (38 samples, 0.05%)</title><rect x="94.8338%" y="885" width="0.0510%" height="15" fill="rgb(209,25,54)" fg:x="70673" fg:w="38"/><text x="95.0838%" y="895.50"></text></g><g><title>gbemu.exe`alloc::alloc::Global::alloc_impl (38 samples, 0.05%)</title><rect x="94.8338%" y="869" width="0.0510%" height="15" fill="rgb(219,0,2)" fg:x="70673" fg:w="38"/><text x="95.0838%" y="879.50"></text></g><g><title>gbemu.exe`alloc::alloc::alloc_zeroed (38 samples, 0.05%)</title><rect x="94.8338%" y="853" width="0.0510%" height="15" fill="rgb(246,9,5)" fg:x="70673" fg:w="38"/><text x="95.0838%" y="863.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::sync::mpsc::SendError&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::sync::mpsc::SendError&lt;alloc::vec::Vec (121 samples, 0.16%)</title><rect x="94.7546%" y="1029" width="0.1624%" height="15" fill="rgb(226,159,4)" fg:x="70614" fg:w="121"/><text x="95.0046%" y="1039.50"></text></g><g><title>gbemu.exe`std::sync::mpmc::Sender&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::send&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec (121 samples, 0.16%)</title><rect x="94.7546%" y="1013" width="0.1624%" height="15" fill="rgb(219,175,34)" fg:x="70614" fg:w="121"/><text x="95.0046%" y="1023.50"></text></g><g><title>gbemu.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;std::sync::mpmc::error::SendTimeoutError&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;std::sync::mpmc::error::SendTimeoutError&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt; &gt; &gt;, std::sync::mpmc::impl$4::send::closure_env$0&lt;alloc::vec::Vec (111 samples, 0.15%)</title><rect x="94.7681%" y="997" width="0.1489%" height="15" fill="rgb(236,10,46)" fg:x="70624" fg:w="111"/><text x="95.0181%" y="1007.50"></text></g><g><title>gbemu.exe`std::sync::mpmc::list::Channel&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::send&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;, enum2$&lt;core::option::Option (111 samples, 0.15%)</title><rect x="94.7681%" y="981" width="0.1489%" height="15" fill="rgb(240,211,16)" fg:x="70624" fg:w="111"/><text x="95.0181%" y="991.50"></text></g><g><title>gbemu.exe`std::sync::mpmc::list::Channel&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::write(std::sync::mpmc::select::Token*, alloc::vec::Vec (24 samples, 0.03%)</title><rect x="94.8848%" y="965" width="0.0322%" height="15" fill="rgb(205,3,43)" fg:x="70711" fg:w="24"/><text x="95.1348%" y="975.50"></text></g><g><title>gbemu.exe`std::sync::mpmc::waker::SyncWaker::notify (18 samples, 0.02%)</title><rect x="94.8929%" y="949" width="0.0242%" height="15" fill="rgb(245,7,22)" fg:x="70717" fg:w="18"/><text x="95.1429%" y="959.50"></text></g><g><title>gbemu.exe`core::sync::atomic::AtomicBool::load (18 samples, 0.02%)</title><rect x="94.8929%" y="933" width="0.0242%" height="15" fill="rgb(239,132,32)" fg:x="70717" fg:w="18"/><text x="95.1429%" y="943.50"></text></g><g><title>gbemu.exe`core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="94.8929%" y="917" width="0.0242%" height="15" fill="rgb(228,202,34)" fg:x="70717" fg:w="18"/><text x="95.1429%" y="927.50"></text></g><g><title>gbemu.exe`gbemu::gb::graphics::palette::PaletteColor::get_rgba_code (1,209 samples, 1.62%)</title><rect x="94.9170%" y="1029" width="1.6223%" height="15" fill="rgb(254,200,22)" fg:x="70735" fg:w="1209"/><text x="95.1670%" y="1039.50"></text></g><g><title>gbemu.exe`gbemu::gb::graphics::ppu::Ppu::draw_tiles_in_viewer(std::sync::mpsc::Sender&lt;alloc::vec::Vec (66,391 samples, 89.09%)</title><rect x="7.4554%" y="1045" width="89.0879%" height="15" fill="rgb(219,10,39)" fg:x="5556" fg:w="66391"/><text x="7.7054%" y="1055.50">gbemu.exe`gbemu::gb::graphics::ppu::Ppu::draw_tiles_in_viewer(std::sync::mpsc::Sender&lt;alloc::vec::Vec</text></g><g><title>gbemu.exe`gbemu::gb::graphics::ppu::Ppu::is_lcdc_bit3_bg_tile_map_set (36 samples, 0.05%)</title><rect x="97.1204%" y="1029" width="0.0483%" height="15" fill="rgb(226,210,39)" fg:x="72377" fg:w="36"/><text x="97.3704%" y="1039.50"></text></g><g><title>gbemu.exe`gbemu::gb::mbc::Mbc::read (1,447 samples, 1.94%)</title><rect x="97.1687%" y="1029" width="1.9417%" height="15" fill="rgb(208,219,16)" fg:x="72413" fg:w="1447"/><text x="97.4187%" y="1039.50">g..</text></g><g><title>gbemu.exe`enum2$&lt;core::option::Option&lt;gbemu::gb::rom::Rom&gt; &gt;::as_ref (195 samples, 0.26%)</title><rect x="99.1264%" y="1013" width="0.2617%" height="15" fill="rgb(216,158,51)" fg:x="73872" fg:w="195"/><text x="99.3764%" y="1023.50"></text></g><g><title>gbemu.exe`gbemu::gb::mbc::Mbc::read_rom (430 samples, 0.58%)</title><rect x="99.1103%" y="1029" width="0.5770%" height="15" fill="rgb(233,14,44)" fg:x="73860" fg:w="430"/><text x="99.3603%" y="1039.50"></text></g><g><title>gbemu.exe`gbemu::gb::ram::Ram::read (223 samples, 0.30%)</title><rect x="99.3881%" y="1013" width="0.2992%" height="15" fill="rgb(237,97,39)" fg:x="74067" fg:w="223"/><text x="99.6381%" y="1023.50"></text></g><g><title>gbemu.exe`gbemu::gb::graphics::ppu::Ppu::get_bg_tile_map (2,346 samples, 3.15%)</title><rect x="96.5433%" y="1045" width="3.1480%" height="15" fill="rgb(218,198,43)" fg:x="71947" fg:w="2346"/><text x="96.7933%" y="1055.50">gbe..</text></g><g><title>gbemu.exe`gbemu::gb::graphics::ppu::Ppu::tick(gbemu::gb::mbc::Mbc*, std::sync::mpsc::Sender&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;*, std::sync::mpsc::Sender&lt;alloc::vec::Vec (68,758 samples, 92.26%)</title><rect x="7.4326%" y="1061" width="92.2641%" height="15" fill="rgb(231,104,20)" fg:x="5539" fg:w="68758"/><text x="7.6826%" y="1071.50">gbemu.exe`gbemu::gb::graphics::ppu::Ppu::tick(gbemu::gb::mbc::Mbc*, std::sync::mpsc::Sender&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;*, std::sync::mpsc::..</text></g><g><title>gbemu.exe`std::sys::pal::windows::time::perf_counter::impl$1::from (20 samples, 0.03%)</title><rect x="99.7169%" y="1045" width="0.0268%" height="15" fill="rgb(254,36,13)" fg:x="74312" fg:w="20"/><text x="99.9669%" y="1055.50"></text></g><g><title>gbemu.exe`std::sys_common::mul_div_u64 (16 samples, 0.02%)</title><rect x="99.7222%" y="1029" width="0.0215%" height="15" fill="rgb(248,14,50)" fg:x="74316" fg:w="16"/><text x="99.9722%" y="1039.50"></text></g><g><title>`0x7FF85EA80B00 (13 samples, 0.02%)</title><rect x="99.7531%" y="949" width="0.0174%" height="15" fill="rgb(217,107,29)" fg:x="74339" fg:w="13"/><text x="100.0031%" y="959.50"></text></g><g><title>`0x7FF85EA80B6D (32 samples, 0.04%)</title><rect x="99.7866%" y="949" width="0.0429%" height="15" fill="rgb(251,169,33)" fg:x="74364" fg:w="32"/><text x="100.0366%" y="959.50"></text></g><g><title>gbemu.exe`std::time::Instant::now (69 samples, 0.09%)</title><rect x="99.7437%" y="1045" width="0.0926%" height="15" fill="rgb(217,108,32)" fg:x="74332" fg:w="69"/><text x="99.9937%" y="1055.50"></text></g><g><title>gbemu.exe`std::sys::pal::windows::time::Instant::now (69 samples, 0.09%)</title><rect x="99.7437%" y="1029" width="0.0926%" height="15" fill="rgb(219,66,42)" fg:x="74332" fg:w="69"/><text x="99.9937%" y="1039.50"></text></g><g><title>gbemu.exe`std::sys::pal::windows::time::perf_counter::PerformanceCounterInstant::now (69 samples, 0.09%)</title><rect x="99.7437%" y="1013" width="0.0926%" height="15" fill="rgb(206,180,7)" fg:x="74332" fg:w="69"/><text x="99.9937%" y="1023.50"></text></g><g><title>gbemu.exe`std::sys::pal::windows::time::perf_counter::query (69 samples, 0.09%)</title><rect x="99.7437%" y="997" width="0.0926%" height="15" fill="rgb(208,226,31)" fg:x="74332" fg:w="69"/><text x="99.9937%" y="1007.50"></text></g><g><title>gbemu.exe`std::sys::pal::windows::cvt (69 samples, 0.09%)</title><rect x="99.7437%" y="981" width="0.0926%" height="15" fill="rgb(218,26,49)" fg:x="74332" fg:w="69"/><text x="99.9937%" y="991.50"></text></g><g><title>gbemu.exe`std::sys::pal::windows::impl$3::is_zero (69 samples, 0.09%)</title><rect x="99.7437%" y="965" width="0.0926%" height="15" fill="rgb(233,197,48)" fg:x="74332" fg:w="69"/><text x="99.9937%" y="975.50"></text></g><g><title>gbemu.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;gbemu::main::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;gbemu::main::closure_env$0,tuple$ (69,514 samples, 93.28%)</title><rect x="6.5671%" y="1221" width="93.2786%" height="15" fill="rgb(252,181,51)" fg:x="4894" fg:w="69514"/><text x="6.8171%" y="1231.50">gbemu.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;gbemu::main::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::..</text></g><g><title>gbemu.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;gbemu::main::closure_env$0,tuple$ (69,514 samples, 93.28%)</title><rect x="6.5671%" y="1205" width="93.2786%" height="15" fill="rgb(253,90,19)" fg:x="4894" fg:w="69514"/><text x="6.8171%" y="1215.50">gbemu.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;gbemu::main::closure_env$0,tuple$</text></g><g><title>gbemu.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;gbemu::main::closure_env$0,tuple$ (69,514 samples, 93.28%)</title><rect x="6.5671%" y="1189" width="93.2786%" height="15" fill="rgb(215,171,30)" fg:x="4894" fg:w="69514"/><text x="6.8171%" y="1199.50">gbemu.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;gbemu::main::c..</text></g><g><title>gbemu.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;gbemu::main::closure_env$0,tuple$ (69,514 samples, 93.28%)</title><rect x="6.5671%" y="1173" width="93.2786%" height="15" fill="rgb(214,222,9)" fg:x="4894" fg:w="69514"/><text x="6.8171%" y="1183.50">gbemu.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;gbemu::main::closur..</text></g><g><title>gbemu.exe`std::panicking::try::do_call (69,514 samples, 93.28%)</title><rect x="6.5671%" y="1157" width="93.2786%" height="15" fill="rgb(223,3,22)" fg:x="4894" fg:w="69514"/><text x="6.8171%" y="1167.50">gbemu.exe`std::panicking::try::do_call</text></g><g><title>gbemu.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;gbemu::main::closure_env$0,tuple$ (69,514 samples, 93.28%)</title><rect x="6.5671%" y="1141" width="93.2786%" height="15" fill="rgb(225,196,46)" fg:x="4894" fg:w="69514"/><text x="6.8171%" y="1151.50">gbemu.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_..</text></g><g><title>gbemu.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;gbemu::main::closure_env$0,tuple$ (69,514 samples, 93.28%)</title><rect x="6.5671%" y="1125" width="93.2786%" height="15" fill="rgb(209,110,37)" fg:x="4894" fg:w="69514"/><text x="6.8171%" y="1135.50">gbemu.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;gbemu::main::closure_e..</text></g><g><title>gbemu.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;gbemu::main::closure_env$0,tuple$&lt;&gt; &gt; (69,514 samples, 93.28%)</title><rect x="6.5671%" y="1109" width="93.2786%" height="15" fill="rgb(249,89,12)" fg:x="4894" fg:w="69514"/><text x="6.8171%" y="1119.50">gbemu.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;gbemu::main::closure_env$0,tuple$&lt;&gt; &gt;</text></g><g><title>gbemu.exe`gbemu::main::closure$0 (69,514 samples, 93.28%)</title><rect x="6.5671%" y="1093" width="93.2786%" height="15" fill="rgb(226,27,33)" fg:x="4894" fg:w="69514"/><text x="6.8171%" y="1103.50">gbemu.exe`gbemu::main::closure$0</text></g><g><title>gbemu.exe`gbemu::gb::emu::Emu::tick(std::sync::mpsc::Sender&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;*, std::sync::mpsc::Sender&lt;alloc::vec::Vec (69,514 samples, 93.28%)</title><rect x="6.5671%" y="1077" width="93.2786%" height="15" fill="rgb(213,82,22)" fg:x="4894" fg:w="69514"/><text x="6.8171%" y="1087.50">gbemu.exe`gbemu::gb::emu::Emu::tick(std::sync::mpsc::Sender&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;*, std::sync::mpsc::Sender&lt;alloc::vec::Vec</text></g><g><title>gbemu.exe`std::time::Instant::elapsed (105 samples, 0.14%)</title><rect x="99.7048%" y="1061" width="0.1409%" height="15" fill="rgb(248,140,0)" fg:x="74303" fg:w="105"/><text x="99.9548%" y="1071.50"></text></g><g><title>`0x7FF85CC87922 (12 samples, 0.02%)</title><rect x="99.8457%" y="1061" width="0.0161%" height="15" fill="rgb(228,106,3)" fg:x="74408" fg:w="12"/><text x="100.0957%" y="1071.50"></text></g><g><title>`0x7FF85CC437B7 (12 samples, 0.02%)</title><rect x="99.8457%" y="1045" width="0.0161%" height="15" fill="rgb(209,23,37)" fg:x="74408" fg:w="12"/><text x="100.0957%" y="1055.50"></text></g><g><title>`0x7FF85CC43C2A (12 samples, 0.02%)</title><rect x="99.8457%" y="1029" width="0.0161%" height="15" fill="rgb(241,93,50)" fg:x="74408" fg:w="12"/><text x="100.0957%" y="1039.50"></text></g><g><title>`0x7FF85C7D2084 (12 samples, 0.02%)</title><rect x="99.8457%" y="1013" width="0.0161%" height="15" fill="rgb(253,46,43)" fg:x="74408" fg:w="12"/><text x="100.0957%" y="1023.50"></text></g><g><title>`0x7FFFD83068E5 (8 samples, 0.01%)</title><rect x="99.8712%" y="949" width="0.0107%" height="15" fill="rgb(226,206,43)" fg:x="74427" fg:w="8"/><text x="100.1212%" y="959.50"></text></g><g><title>`0x7FFFD7FF52C2 (8 samples, 0.01%)</title><rect x="99.8712%" y="933" width="0.0107%" height="15" fill="rgb(217,54,7)" fg:x="74427" fg:w="8"/><text x="100.1212%" y="943.50"></text></g><g><title>`0x7FF85EB3DB84 (11 samples, 0.01%)</title><rect x="99.8859%" y="917" width="0.0148%" height="15" fill="rgb(223,5,52)" fg:x="74438" fg:w="11"/><text x="100.1359%" y="927.50"></text></g><g><title>`0x7FF85EBC2184 (11 samples, 0.01%)</title><rect x="99.8859%" y="901" width="0.0148%" height="15" fill="rgb(206,52,46)" fg:x="74438" fg:w="11"/><text x="100.1359%" y="911.50"></text></g><g><title>`0x7FF832C3D68B (23 samples, 0.03%)</title><rect x="99.8712%" y="997" width="0.0309%" height="15" fill="rgb(253,136,11)" fg:x="74427" fg:w="23"/><text x="100.1212%" y="1007.50"></text></g><g><title>`0x7FF832C0F7C0 (23 samples, 0.03%)</title><rect x="99.8712%" y="981" width="0.0309%" height="15" fill="rgb(208,106,33)" fg:x="74427" fg:w="23"/><text x="100.1212%" y="991.50"></text></g><g><title>`0x7FFFD8266F3F (23 samples, 0.03%)</title><rect x="99.8712%" y="965" width="0.0309%" height="15" fill="rgb(206,54,4)" fg:x="74427" fg:w="23"/><text x="100.1212%" y="975.50"></text></g><g><title>`0x7FFFD830691F (12 samples, 0.02%)</title><rect x="99.8859%" y="949" width="0.0161%" height="15" fill="rgb(213,3,15)" fg:x="74438" fg:w="12"/><text x="100.1359%" y="959.50"></text></g><g><title>`0x7FF85BC59AFB (12 samples, 0.02%)</title><rect x="99.8859%" y="933" width="0.0161%" height="15" fill="rgb(252,211,39)" fg:x="74438" fg:w="12"/><text x="100.1359%" y="943.50"></text></g><g><title>`0x7FF832BD680D (29 samples, 0.04%)</title><rect x="99.8672%" y="1013" width="0.0389%" height="15" fill="rgb(223,6,36)" fg:x="74424" fg:w="29"/><text x="100.1172%" y="1023.50"></text></g><g><title>`0x7FFFD8264C09 (8 samples, 0.01%)</title><rect x="99.9061%" y="981" width="0.0107%" height="15" fill="rgb(252,169,45)" fg:x="74453" fg:w="8"/><text x="100.1561%" y="991.50"></text></g><g><title>`0x7FF85BBC4144 (9 samples, 0.01%)</title><rect x="99.9181%" y="933" width="0.0121%" height="15" fill="rgb(212,48,26)" fg:x="74462" fg:w="9"/><text x="100.1681%" y="943.50"></text></g><g><title>`0x7FF85BBC28E6 (9 samples, 0.01%)</title><rect x="99.9181%" y="917" width="0.0121%" height="15" fill="rgb(251,102,48)" fg:x="74462" fg:w="9"/><text x="100.1681%" y="927.50"></text></g><g><title>`0x7FF85C0AC507 (11 samples, 0.01%)</title><rect x="99.9168%" y="949" width="0.0148%" height="15" fill="rgb(243,208,16)" fg:x="74461" fg:w="11"/><text x="100.1668%" y="959.50"></text></g><g><title>`0x7FF832BD726C (27 samples, 0.04%)</title><rect x="99.9061%" y="997" width="0.0362%" height="15" fill="rgb(219,96,24)" fg:x="74453" fg:w="27"/><text x="100.1561%" y="1007.50"></text></g><g><title>`0x7FFFD8264C4D (19 samples, 0.03%)</title><rect x="99.9168%" y="981" width="0.0255%" height="15" fill="rgb(219,33,29)" fg:x="74461" fg:w="19"/><text x="100.1668%" y="991.50"></text></g><g><title>`0x7FFFD8278B2C (19 samples, 0.03%)</title><rect x="99.9168%" y="965" width="0.0255%" height="15" fill="rgb(223,176,5)" fg:x="74461" fg:w="19"/><text x="100.1668%" y="975.50"></text></g><g><title>`0x7FF85C0AC542 (8 samples, 0.01%)</title><rect x="99.9316%" y="949" width="0.0107%" height="15" fill="rgb(228,140,14)" fg:x="74472" fg:w="8"/><text x="100.1816%" y="959.50"></text></g><g><title>`0x7FF832BD687F (29 samples, 0.04%)</title><rect x="99.9061%" y="1013" width="0.0389%" height="15" fill="rgb(217,179,31)" fg:x="74453" fg:w="29"/><text x="100.1561%" y="1023.50"></text></g><g><title>`0x7FF85BC59AFB (18 samples, 0.02%)</title><rect x="99.9597%" y="965" width="0.0242%" height="15" fill="rgb(230,9,30)" fg:x="74493" fg:w="18"/><text x="100.2097%" y="975.50"></text></g><g><title>`0x7FF85EB3DB84 (18 samples, 0.02%)</title><rect x="99.9597%" y="949" width="0.0242%" height="15" fill="rgb(230,136,20)" fg:x="74493" fg:w="18"/><text x="100.2097%" y="959.50"></text></g><g><title>`0x7FF85EBC2184 (17 samples, 0.02%)</title><rect x="99.9611%" y="933" width="0.0228%" height="15" fill="rgb(215,210,22)" fg:x="74494" fg:w="17"/><text x="100.2111%" y="943.50"></text></g><g><title>`0x7FFFD830691F (19 samples, 0.03%)</title><rect x="99.9597%" y="981" width="0.0255%" height="15" fill="rgb(218,43,5)" fg:x="74493" fg:w="19"/><text x="100.2097%" y="991.50"></text></g><g><title>`0x7FFFD8264AAC (31 samples, 0.04%)</title><rect x="99.9450%" y="997" width="0.0416%" height="15" fill="rgb(216,11,5)" fg:x="74482" fg:w="31"/><text x="100.1950%" y="1007.50"></text></g><g><title>`0x7FF85C0C04D2 (93 samples, 0.12%)</title><rect x="99.8658%" y="1029" width="0.1248%" height="15" fill="rgb(209,82,29)" fg:x="74423" fg:w="93"/><text x="100.1158%" y="1039.50"></text></g><g><title>`0x7FF832BD6ABB (34 samples, 0.05%)</title><rect x="99.9450%" y="1013" width="0.0456%" height="15" fill="rgb(244,115,12)" fg:x="74482" fg:w="34"/><text x="100.1950%" y="1023.50"></text></g><g><title>`0x7FF85CE2E8D7 (72,630 samples, 97.46%)</title><rect x="2.5321%" y="1333" width="97.4598%" height="15" fill="rgb(222,82,18)" fg:x="1887" fg:w="72630"/><text x="2.7821%" y="1343.50">`0x7FF85CE2E8D7</text></g><g><title>gbemu.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (69,623 samples, 93.42%)</title><rect x="6.5671%" y="1317" width="93.4248%" height="15" fill="rgb(249,227,8)" fg:x="4894" fg:w="69623"/><text x="6.8171%" y="1327.50">gbemu.exe`std::sys::pal::windows::thread::impl$0::new::thread_start</text></g><g><title>gbemu.exe`alloc::boxed::impl$28::call_once (69,623 samples, 93.42%)</title><rect x="6.5671%" y="1301" width="93.4248%" height="15" fill="rgb(253,141,45)" fg:x="4894" fg:w="69623"/><text x="6.8171%" y="1311.50">gbemu.exe`alloc::boxed::impl$28::call_once</text></g><g><title>gbemu.exe`alloc::boxed::impl$28::call_once (69,623 samples, 93.42%)</title><rect x="6.5671%" y="1285" width="93.4248%" height="15" fill="rgb(234,184,4)" fg:x="4894" fg:w="69623"/><text x="6.8171%" y="1295.50">gbemu.exe`alloc::boxed::impl$28::call_once</text></g><g><title>gbemu.exe`alloc::boxed::impl$8::drop (69,623 samples, 93.42%)</title><rect x="6.5671%" y="1269" width="93.4248%" height="15" fill="rgb(218,194,23)" fg:x="4894" fg:w="69623"/><text x="6.8171%" y="1279.50">gbemu.exe`alloc::boxed::impl$8::drop</text></g><g><title>gbemu.exe`core::alloc::layout::Layout::for_value_raw (69,623 samples, 93.42%)</title><rect x="6.5671%" y="1253" width="93.4248%" height="15" fill="rgb(235,66,41)" fg:x="4894" fg:w="69623"/><text x="6.8171%" y="1263.50">gbemu.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>gbemu.exe`core::mem::size_of_val_raw (69,623 samples, 93.42%)</title><rect x="6.5671%" y="1237" width="93.4248%" height="15" fill="rgb(245,217,1)" fg:x="4894" fg:w="69623"/><text x="6.8171%" y="1247.50">gbemu.exe`core::mem::size_of_val_raw</text></g><g><title>gbemu.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$ (109 samples, 0.15%)</title><rect x="99.8457%" y="1221" width="0.1463%" height="15" fill="rgb(229,91,1)" fg:x="74408" fg:w="109"/><text x="100.0957%" y="1231.50"></text></g><g><title>gbemu.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$ (109 samples, 0.15%)</title><rect x="99.8457%" y="1205" width="0.1463%" height="15" fill="rgb(207,101,30)" fg:x="74408" fg:w="109"/><text x="100.0957%" y="1215.50"></text></g><g><title>gbemu.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$ (109 samples, 0.15%)</title><rect x="99.8457%" y="1189" width="0.1463%" height="15" fill="rgb(223,82,49)" fg:x="74408" fg:w="109"/><text x="100.0957%" y="1199.50"></text></g><g><title>gbemu.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$ (109 samples, 0.15%)</title><rect x="99.8457%" y="1173" width="0.1463%" height="15" fill="rgb(218,167,17)" fg:x="74408" fg:w="109"/><text x="100.0957%" y="1183.50"></text></g><g><title>gbemu.exe`std::panicking::try::do_call (109 samples, 0.15%)</title><rect x="99.8457%" y="1157" width="0.1463%" height="15" fill="rgb(208,103,14)" fg:x="74408" fg:w="109"/><text x="100.0957%" y="1167.50"></text></g><g><title>gbemu.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$ (109 samples, 0.15%)</title><rect x="99.8457%" y="1141" width="0.1463%" height="15" fill="rgb(238,20,8)" fg:x="74408" fg:w="109"/><text x="100.0957%" y="1151.50"></text></g><g><title>gbemu.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$ (109 samples, 0.15%)</title><rect x="99.8457%" y="1125" width="0.1463%" height="15" fill="rgb(218,80,54)" fg:x="74408" fg:w="109"/><text x="100.0957%" y="1135.50"></text></g><g><title>gbemu.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$&lt;&gt; &gt; (109 samples, 0.15%)</title><rect x="99.8457%" y="1109" width="0.1463%" height="15" fill="rgb(240,144,17)" fg:x="74408" fg:w="109"/><text x="100.0957%" y="1119.50"></text></g><g><title>gbemu.exe`wgpu_hal::gles::wgl::create_instance_device::closure$0 (109 samples, 0.15%)</title><rect x="99.8457%" y="1093" width="0.1463%" height="15" fill="rgb(245,27,50)" fg:x="74408" fg:w="109"/><text x="100.0957%" y="1103.50"></text></g><g><title>gbemu.exe`wgpu_hal::gles::wgl::create_instance_device::closure$0::closure$0 (109 samples, 0.15%)</title><rect x="99.8457%" y="1077" width="0.1463%" height="15" fill="rgb(251,51,7)" fg:x="74408" fg:w="109"/><text x="100.0957%" y="1087.50"></text></g><g><title>gbemu.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$ (97 samples, 0.13%)</title><rect x="99.8618%" y="1061" width="0.1302%" height="15" fill="rgb(245,217,29)" fg:x="74420" fg:w="97"/><text x="100.1118%" y="1071.50"></text></g><g><title>gbemu.exe`wgpu_hal::gles::wgl::setup_pixel_format(enum2$ (97 samples, 0.13%)</title><rect x="99.8618%" y="1045" width="0.1302%" height="15" fill="rgb(221,176,29)" fg:x="74420" fg:w="97"/><text x="100.1118%" y="1055.50"></text></g><g><title>`0x7FF85EA9C34C (72,632 samples, 97.46%)</title><rect x="2.5308%" y="1349" width="97.4625%" height="15" fill="rgb(212,180,24)" fg:x="1886" fg:w="72632"/><text x="2.7808%" y="1359.50">`0x7FF85EA9C34C</text></g><g><title>all (74,523 samples, 100%)</title><rect x="0.0000%" y="1365" width="100.0000%" height="15" fill="rgb(254,24,2)" fg:x="0" fg:w="74523"/><text x="0.2500%" y="1375.50"></text></g></svg></svg>